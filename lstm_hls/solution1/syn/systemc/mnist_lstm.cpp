// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "mnist_lstm.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic mnist_lstm::ap_const_logic_1 = sc_dt::Log_1;
const sc_lv<32> mnist_lstm::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<4> mnist_lstm::ap_const_lv4_0 = "0000";
const sc_lv<1> mnist_lstm::ap_const_lv1_0 = "0";
const sc_logic mnist_lstm::ap_const_logic_0 = sc_dt::Log_0;

mnist_lstm::mnist_lstm(sc_module_name name) : sc_module(name), mVcdFile(0) {
    img_dat_U = new mnist_lstm_img_dat("img_dat_U");
    img_dat_U->clk(ap_clk);
    img_dat_U->reset(ap_rst);
    img_dat_U->i_address0(mnist_lstm_Loop_1_pr_U0_img_dat_address0);
    img_dat_U->i_ce0(mnist_lstm_Loop_1_pr_U0_img_dat_ce0);
    img_dat_U->i_we0(mnist_lstm_Loop_1_pr_U0_img_dat_we0);
    img_dat_U->i_d0(mnist_lstm_Loop_1_pr_U0_img_dat_d0);
    img_dat_U->i_q0(img_dat_i_q0);
    img_dat_U->t_address0(infer_U0_input_r_address0);
    img_dat_U->t_ce0(infer_U0_input_r_ce0);
    img_dat_U->t_we0(ap_var_for_const0);
    img_dat_U->t_d0(ap_var_for_const1);
    img_dat_U->t_q0(img_dat_t_q0);
    img_dat_U->i_ce(ap_var_for_const2);
    img_dat_U->t_ce(ap_var_for_const2);
    img_dat_U->i_full_n(img_dat_i_full_n);
    img_dat_U->i_write(mnist_lstm_Loop_1_pr_U0_ap_done);
    img_dat_U->t_empty_n(img_dat_t_empty_n);
    img_dat_U->t_read(infer_U0_ap_ready);
    mnist_lstm_Loop_1_pr_U0 = new mnist_lstm_Loop_1_pr("mnist_lstm_Loop_1_pr_U0");
    mnist_lstm_Loop_1_pr_U0->ap_clk(ap_clk);
    mnist_lstm_Loop_1_pr_U0->ap_rst(ap_rst);
    mnist_lstm_Loop_1_pr_U0->ap_start(mnist_lstm_Loop_1_pr_U0_ap_start);
    mnist_lstm_Loop_1_pr_U0->ap_done(mnist_lstm_Loop_1_pr_U0_ap_done);
    mnist_lstm_Loop_1_pr_U0->ap_continue(mnist_lstm_Loop_1_pr_U0_ap_continue);
    mnist_lstm_Loop_1_pr_U0->ap_idle(mnist_lstm_Loop_1_pr_U0_ap_idle);
    mnist_lstm_Loop_1_pr_U0->ap_ready(mnist_lstm_Loop_1_pr_U0_ap_ready);
    mnist_lstm_Loop_1_pr_U0->in_r_TDATA(in_r_TDATA);
    mnist_lstm_Loop_1_pr_U0->in_r_TVALID(in_r_TVALID);
    mnist_lstm_Loop_1_pr_U0->in_r_TREADY(mnist_lstm_Loop_1_pr_U0_in_r_TREADY);
    mnist_lstm_Loop_1_pr_U0->in_r_TSTRB(in_r_TSTRB);
    mnist_lstm_Loop_1_pr_U0->in_r_TKEEP(in_r_TKEEP);
    mnist_lstm_Loop_1_pr_U0->in_r_TUSER(in_r_TUSER);
    mnist_lstm_Loop_1_pr_U0->in_r_TLAST(in_r_TLAST);
    mnist_lstm_Loop_1_pr_U0->in_r_TID(in_r_TID);
    mnist_lstm_Loop_1_pr_U0->in_r_TDEST(in_r_TDEST);
    mnist_lstm_Loop_1_pr_U0->img_dat_address0(mnist_lstm_Loop_1_pr_U0_img_dat_address0);
    mnist_lstm_Loop_1_pr_U0->img_dat_ce0(mnist_lstm_Loop_1_pr_U0_img_dat_ce0);
    mnist_lstm_Loop_1_pr_U0->img_dat_we0(mnist_lstm_Loop_1_pr_U0_img_dat_we0);
    mnist_lstm_Loop_1_pr_U0->img_dat_d0(mnist_lstm_Loop_1_pr_U0_img_dat_d0);
    infer_U0 = new infer("infer_U0");
    infer_U0->ap_clk(ap_clk);
    infer_U0->ap_rst(ap_rst);
    infer_U0->ap_start(infer_U0_ap_start);
    infer_U0->start_full_n(start_for_mnist_lstm_Loop_2_pr_U0_full_n);
    infer_U0->ap_done(infer_U0_ap_done);
    infer_U0->ap_continue(infer_U0_ap_continue);
    infer_U0->ap_idle(infer_U0_ap_idle);
    infer_U0->ap_ready(infer_U0_ap_ready);
    infer_U0->start_out(infer_U0_start_out);
    infer_U0->start_write(infer_U0_start_write);
    infer_U0->input_r_address0(infer_U0_input_r_address0);
    infer_U0->input_r_ce0(infer_U0_input_r_ce0);
    infer_U0->input_r_q0(img_dat_t_q0);
    infer_U0->res_0_out_din(infer_U0_res_0_out_din);
    infer_U0->res_0_out_full_n(res_0_c_full_n);
    infer_U0->res_0_out_write(infer_U0_res_0_out_write);
    infer_U0->res_1_out_din(infer_U0_res_1_out_din);
    infer_U0->res_1_out_full_n(res_1_c_full_n);
    infer_U0->res_1_out_write(infer_U0_res_1_out_write);
    mnist_lstm_Loop_2_pr_U0 = new mnist_lstm_Loop_2_pr("mnist_lstm_Loop_2_pr_U0");
    mnist_lstm_Loop_2_pr_U0->ap_clk(ap_clk);
    mnist_lstm_Loop_2_pr_U0->ap_rst(ap_rst);
    mnist_lstm_Loop_2_pr_U0->ap_start(mnist_lstm_Loop_2_pr_U0_ap_start);
    mnist_lstm_Loop_2_pr_U0->ap_done(mnist_lstm_Loop_2_pr_U0_ap_done);
    mnist_lstm_Loop_2_pr_U0->ap_continue(mnist_lstm_Loop_2_pr_U0_ap_continue);
    mnist_lstm_Loop_2_pr_U0->ap_idle(mnist_lstm_Loop_2_pr_U0_ap_idle);
    mnist_lstm_Loop_2_pr_U0->ap_ready(mnist_lstm_Loop_2_pr_U0_ap_ready);
    mnist_lstm_Loop_2_pr_U0->res_0_dout(res_0_c_dout);
    mnist_lstm_Loop_2_pr_U0->res_0_empty_n(res_0_c_empty_n);
    mnist_lstm_Loop_2_pr_U0->res_0_read(mnist_lstm_Loop_2_pr_U0_res_0_read);
    mnist_lstm_Loop_2_pr_U0->res_1_dout(res_1_c_dout);
    mnist_lstm_Loop_2_pr_U0->res_1_empty_n(res_1_c_empty_n);
    mnist_lstm_Loop_2_pr_U0->res_1_read(mnist_lstm_Loop_2_pr_U0_res_1_read);
    mnist_lstm_Loop_2_pr_U0->out_r_TDATA(mnist_lstm_Loop_2_pr_U0_out_r_TDATA);
    mnist_lstm_Loop_2_pr_U0->out_r_TVALID(mnist_lstm_Loop_2_pr_U0_out_r_TVALID);
    mnist_lstm_Loop_2_pr_U0->out_r_TREADY(out_r_TREADY);
    mnist_lstm_Loop_2_pr_U0->out_r_TKEEP(mnist_lstm_Loop_2_pr_U0_out_r_TKEEP);
    mnist_lstm_Loop_2_pr_U0->out_r_TSTRB(mnist_lstm_Loop_2_pr_U0_out_r_TSTRB);
    mnist_lstm_Loop_2_pr_U0->out_r_TUSER(mnist_lstm_Loop_2_pr_U0_out_r_TUSER);
    mnist_lstm_Loop_2_pr_U0->out_r_TLAST(mnist_lstm_Loop_2_pr_U0_out_r_TLAST);
    mnist_lstm_Loop_2_pr_U0->out_r_TID(mnist_lstm_Loop_2_pr_U0_out_r_TID);
    mnist_lstm_Loop_2_pr_U0->out_r_TDEST(mnist_lstm_Loop_2_pr_U0_out_r_TDEST);
    res_0_c_U = new fifo_w32_d2_A("res_0_c_U");
    res_0_c_U->clk(ap_clk);
    res_0_c_U->reset(ap_rst);
    res_0_c_U->if_read_ce(ap_var_for_const2);
    res_0_c_U->if_write_ce(ap_var_for_const2);
    res_0_c_U->if_din(infer_U0_res_0_out_din);
    res_0_c_U->if_full_n(res_0_c_full_n);
    res_0_c_U->if_write(infer_U0_res_0_out_write);
    res_0_c_U->if_dout(res_0_c_dout);
    res_0_c_U->if_empty_n(res_0_c_empty_n);
    res_0_c_U->if_read(mnist_lstm_Loop_2_pr_U0_res_0_read);
    res_1_c_U = new fifo_w32_d2_A("res_1_c_U");
    res_1_c_U->clk(ap_clk);
    res_1_c_U->reset(ap_rst);
    res_1_c_U->if_read_ce(ap_var_for_const2);
    res_1_c_U->if_write_ce(ap_var_for_const2);
    res_1_c_U->if_din(infer_U0_res_1_out_din);
    res_1_c_U->if_full_n(res_1_c_full_n);
    res_1_c_U->if_write(infer_U0_res_1_out_write);
    res_1_c_U->if_dout(res_1_c_dout);
    res_1_c_U->if_empty_n(res_1_c_empty_n);
    res_1_c_U->if_read(mnist_lstm_Loop_2_pr_U0_res_1_read);
    start_for_mnist_lciv_U = new start_for_mnist_lciv("start_for_mnist_lciv_U");
    start_for_mnist_lciv_U->clk(ap_clk);
    start_for_mnist_lciv_U->reset(ap_rst);
    start_for_mnist_lciv_U->if_read_ce(ap_var_for_const2);
    start_for_mnist_lciv_U->if_write_ce(ap_var_for_const2);
    start_for_mnist_lciv_U->if_din(start_for_mnist_lstm_Loop_2_pr_U0_din);
    start_for_mnist_lciv_U->if_full_n(start_for_mnist_lstm_Loop_2_pr_U0_full_n);
    start_for_mnist_lciv_U->if_write(infer_U0_start_write);
    start_for_mnist_lciv_U->if_dout(start_for_mnist_lstm_Loop_2_pr_U0_dout);
    start_for_mnist_lciv_U->if_empty_n(start_for_mnist_lstm_Loop_2_pr_U0_empty_n);
    start_for_mnist_lciv_U->if_read(mnist_lstm_Loop_2_pr_U0_ap_ready);

    SC_METHOD(thread_ap_channel_done_img_dat);
    sensitive << ( mnist_lstm_Loop_1_pr_U0_ap_done );

    SC_METHOD(thread_ap_done);
    sensitive << ( mnist_lstm_Loop_2_pr_U0_ap_done );

    SC_METHOD(thread_ap_idle);
    sensitive << ( mnist_lstm_Loop_1_pr_U0_ap_idle );
    sensitive << ( infer_U0_ap_idle );
    sensitive << ( mnist_lstm_Loop_2_pr_U0_ap_idle );
    sensitive << ( img_dat_t_empty_n );

    SC_METHOD(thread_ap_ready);
    sensitive << ( mnist_lstm_Loop_1_pr_U0_ap_ready );

    SC_METHOD(thread_ap_sync_continue);
    sensitive << ( ap_continue );

    SC_METHOD(thread_ap_sync_done);
    sensitive << ( mnist_lstm_Loop_2_pr_U0_ap_done );

    SC_METHOD(thread_ap_sync_ready);
    sensitive << ( mnist_lstm_Loop_1_pr_U0_ap_ready );

    SC_METHOD(thread_in_r_TREADY);
    sensitive << ( mnist_lstm_Loop_1_pr_U0_in_r_TREADY );

    SC_METHOD(thread_infer_U0_ap_continue);

    SC_METHOD(thread_infer_U0_ap_start);
    sensitive << ( img_dat_t_empty_n );

    SC_METHOD(thread_mnist_lstm_Loop_1_pr_U0_ap_continue);
    sensitive << ( img_dat_i_full_n );

    SC_METHOD(thread_mnist_lstm_Loop_1_pr_U0_ap_start);
    sensitive << ( ap_start );

    SC_METHOD(thread_mnist_lstm_Loop_1_pr_U0_img_dat_full_n);
    sensitive << ( img_dat_i_full_n );

    SC_METHOD(thread_mnist_lstm_Loop_1_pr_U0_start_full_n);

    SC_METHOD(thread_mnist_lstm_Loop_1_pr_U0_start_write);

    SC_METHOD(thread_mnist_lstm_Loop_2_pr_U0_ap_continue);
    sensitive << ( ap_continue );

    SC_METHOD(thread_mnist_lstm_Loop_2_pr_U0_ap_start);
    sensitive << ( start_for_mnist_lstm_Loop_2_pr_U0_empty_n );

    SC_METHOD(thread_mnist_lstm_Loop_2_pr_U0_start_full_n);

    SC_METHOD(thread_mnist_lstm_Loop_2_pr_U0_start_write);

    SC_METHOD(thread_out_r_TDATA);
    sensitive << ( mnist_lstm_Loop_2_pr_U0_out_r_TDATA );

    SC_METHOD(thread_out_r_TDEST);
    sensitive << ( mnist_lstm_Loop_2_pr_U0_out_r_TDEST );

    SC_METHOD(thread_out_r_TID);
    sensitive << ( mnist_lstm_Loop_2_pr_U0_out_r_TID );

    SC_METHOD(thread_out_r_TKEEP);
    sensitive << ( mnist_lstm_Loop_2_pr_U0_out_r_TKEEP );

    SC_METHOD(thread_out_r_TLAST);
    sensitive << ( mnist_lstm_Loop_2_pr_U0_out_r_TLAST );

    SC_METHOD(thread_out_r_TSTRB);
    sensitive << ( mnist_lstm_Loop_2_pr_U0_out_r_TSTRB );

    SC_METHOD(thread_out_r_TUSER);
    sensitive << ( mnist_lstm_Loop_2_pr_U0_out_r_TUSER );

    SC_METHOD(thread_out_r_TVALID);
    sensitive << ( mnist_lstm_Loop_2_pr_U0_out_r_TVALID );

    SC_METHOD(thread_start_for_mnist_lstm_Loop_2_pr_U0_din);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const0);

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "mnist_lstm_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, in_r_TDATA, "(port)in_r_TDATA");
    sc_trace(mVcdFile, in_r_TKEEP, "(port)in_r_TKEEP");
    sc_trace(mVcdFile, in_r_TSTRB, "(port)in_r_TSTRB");
    sc_trace(mVcdFile, in_r_TUSER, "(port)in_r_TUSER");
    sc_trace(mVcdFile, in_r_TLAST, "(port)in_r_TLAST");
    sc_trace(mVcdFile, in_r_TID, "(port)in_r_TID");
    sc_trace(mVcdFile, in_r_TDEST, "(port)in_r_TDEST");
    sc_trace(mVcdFile, out_r_TDATA, "(port)out_r_TDATA");
    sc_trace(mVcdFile, out_r_TKEEP, "(port)out_r_TKEEP");
    sc_trace(mVcdFile, out_r_TSTRB, "(port)out_r_TSTRB");
    sc_trace(mVcdFile, out_r_TUSER, "(port)out_r_TUSER");
    sc_trace(mVcdFile, out_r_TLAST, "(port)out_r_TLAST");
    sc_trace(mVcdFile, out_r_TID, "(port)out_r_TID");
    sc_trace(mVcdFile, out_r_TDEST, "(port)out_r_TDEST");
    sc_trace(mVcdFile, in_r_TVALID, "(port)in_r_TVALID");
    sc_trace(mVcdFile, in_r_TREADY, "(port)in_r_TREADY");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, out_r_TVALID, "(port)out_r_TVALID");
    sc_trace(mVcdFile, out_r_TREADY, "(port)out_r_TREADY");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, img_dat_i_q0, "img_dat_i_q0");
    sc_trace(mVcdFile, img_dat_t_q0, "img_dat_t_q0");
    sc_trace(mVcdFile, mnist_lstm_Loop_1_pr_U0_ap_start, "mnist_lstm_Loop_1_pr_U0_ap_start");
    sc_trace(mVcdFile, mnist_lstm_Loop_1_pr_U0_ap_done, "mnist_lstm_Loop_1_pr_U0_ap_done");
    sc_trace(mVcdFile, mnist_lstm_Loop_1_pr_U0_ap_continue, "mnist_lstm_Loop_1_pr_U0_ap_continue");
    sc_trace(mVcdFile, mnist_lstm_Loop_1_pr_U0_ap_idle, "mnist_lstm_Loop_1_pr_U0_ap_idle");
    sc_trace(mVcdFile, mnist_lstm_Loop_1_pr_U0_ap_ready, "mnist_lstm_Loop_1_pr_U0_ap_ready");
    sc_trace(mVcdFile, mnist_lstm_Loop_1_pr_U0_in_r_TREADY, "mnist_lstm_Loop_1_pr_U0_in_r_TREADY");
    sc_trace(mVcdFile, mnist_lstm_Loop_1_pr_U0_img_dat_address0, "mnist_lstm_Loop_1_pr_U0_img_dat_address0");
    sc_trace(mVcdFile, mnist_lstm_Loop_1_pr_U0_img_dat_ce0, "mnist_lstm_Loop_1_pr_U0_img_dat_ce0");
    sc_trace(mVcdFile, mnist_lstm_Loop_1_pr_U0_img_dat_we0, "mnist_lstm_Loop_1_pr_U0_img_dat_we0");
    sc_trace(mVcdFile, mnist_lstm_Loop_1_pr_U0_img_dat_d0, "mnist_lstm_Loop_1_pr_U0_img_dat_d0");
    sc_trace(mVcdFile, ap_channel_done_img_dat, "ap_channel_done_img_dat");
    sc_trace(mVcdFile, mnist_lstm_Loop_1_pr_U0_img_dat_full_n, "mnist_lstm_Loop_1_pr_U0_img_dat_full_n");
    sc_trace(mVcdFile, infer_U0_ap_start, "infer_U0_ap_start");
    sc_trace(mVcdFile, infer_U0_ap_done, "infer_U0_ap_done");
    sc_trace(mVcdFile, infer_U0_ap_continue, "infer_U0_ap_continue");
    sc_trace(mVcdFile, infer_U0_ap_idle, "infer_U0_ap_idle");
    sc_trace(mVcdFile, infer_U0_ap_ready, "infer_U0_ap_ready");
    sc_trace(mVcdFile, infer_U0_start_out, "infer_U0_start_out");
    sc_trace(mVcdFile, infer_U0_start_write, "infer_U0_start_write");
    sc_trace(mVcdFile, infer_U0_input_r_address0, "infer_U0_input_r_address0");
    sc_trace(mVcdFile, infer_U0_input_r_ce0, "infer_U0_input_r_ce0");
    sc_trace(mVcdFile, infer_U0_res_0_out_din, "infer_U0_res_0_out_din");
    sc_trace(mVcdFile, infer_U0_res_0_out_write, "infer_U0_res_0_out_write");
    sc_trace(mVcdFile, infer_U0_res_1_out_din, "infer_U0_res_1_out_din");
    sc_trace(mVcdFile, infer_U0_res_1_out_write, "infer_U0_res_1_out_write");
    sc_trace(mVcdFile, mnist_lstm_Loop_2_pr_U0_ap_start, "mnist_lstm_Loop_2_pr_U0_ap_start");
    sc_trace(mVcdFile, mnist_lstm_Loop_2_pr_U0_ap_done, "mnist_lstm_Loop_2_pr_U0_ap_done");
    sc_trace(mVcdFile, mnist_lstm_Loop_2_pr_U0_ap_continue, "mnist_lstm_Loop_2_pr_U0_ap_continue");
    sc_trace(mVcdFile, mnist_lstm_Loop_2_pr_U0_ap_idle, "mnist_lstm_Loop_2_pr_U0_ap_idle");
    sc_trace(mVcdFile, mnist_lstm_Loop_2_pr_U0_ap_ready, "mnist_lstm_Loop_2_pr_U0_ap_ready");
    sc_trace(mVcdFile, mnist_lstm_Loop_2_pr_U0_res_0_read, "mnist_lstm_Loop_2_pr_U0_res_0_read");
    sc_trace(mVcdFile, mnist_lstm_Loop_2_pr_U0_res_1_read, "mnist_lstm_Loop_2_pr_U0_res_1_read");
    sc_trace(mVcdFile, mnist_lstm_Loop_2_pr_U0_out_r_TDATA, "mnist_lstm_Loop_2_pr_U0_out_r_TDATA");
    sc_trace(mVcdFile, mnist_lstm_Loop_2_pr_U0_out_r_TVALID, "mnist_lstm_Loop_2_pr_U0_out_r_TVALID");
    sc_trace(mVcdFile, mnist_lstm_Loop_2_pr_U0_out_r_TKEEP, "mnist_lstm_Loop_2_pr_U0_out_r_TKEEP");
    sc_trace(mVcdFile, mnist_lstm_Loop_2_pr_U0_out_r_TSTRB, "mnist_lstm_Loop_2_pr_U0_out_r_TSTRB");
    sc_trace(mVcdFile, mnist_lstm_Loop_2_pr_U0_out_r_TUSER, "mnist_lstm_Loop_2_pr_U0_out_r_TUSER");
    sc_trace(mVcdFile, mnist_lstm_Loop_2_pr_U0_out_r_TLAST, "mnist_lstm_Loop_2_pr_U0_out_r_TLAST");
    sc_trace(mVcdFile, mnist_lstm_Loop_2_pr_U0_out_r_TID, "mnist_lstm_Loop_2_pr_U0_out_r_TID");
    sc_trace(mVcdFile, mnist_lstm_Loop_2_pr_U0_out_r_TDEST, "mnist_lstm_Loop_2_pr_U0_out_r_TDEST");
    sc_trace(mVcdFile, ap_sync_continue, "ap_sync_continue");
    sc_trace(mVcdFile, img_dat_i_full_n, "img_dat_i_full_n");
    sc_trace(mVcdFile, img_dat_t_empty_n, "img_dat_t_empty_n");
    sc_trace(mVcdFile, res_0_c_full_n, "res_0_c_full_n");
    sc_trace(mVcdFile, res_0_c_dout, "res_0_c_dout");
    sc_trace(mVcdFile, res_0_c_empty_n, "res_0_c_empty_n");
    sc_trace(mVcdFile, res_1_c_full_n, "res_1_c_full_n");
    sc_trace(mVcdFile, res_1_c_dout, "res_1_c_dout");
    sc_trace(mVcdFile, res_1_c_empty_n, "res_1_c_empty_n");
    sc_trace(mVcdFile, ap_sync_done, "ap_sync_done");
    sc_trace(mVcdFile, ap_sync_ready, "ap_sync_ready");
    sc_trace(mVcdFile, mnist_lstm_Loop_1_pr_U0_start_full_n, "mnist_lstm_Loop_1_pr_U0_start_full_n");
    sc_trace(mVcdFile, mnist_lstm_Loop_1_pr_U0_start_write, "mnist_lstm_Loop_1_pr_U0_start_write");
    sc_trace(mVcdFile, start_for_mnist_lstm_Loop_2_pr_U0_din, "start_for_mnist_lstm_Loop_2_pr_U0_din");
    sc_trace(mVcdFile, start_for_mnist_lstm_Loop_2_pr_U0_full_n, "start_for_mnist_lstm_Loop_2_pr_U0_full_n");
    sc_trace(mVcdFile, start_for_mnist_lstm_Loop_2_pr_U0_dout, "start_for_mnist_lstm_Loop_2_pr_U0_dout");
    sc_trace(mVcdFile, start_for_mnist_lstm_Loop_2_pr_U0_empty_n, "start_for_mnist_lstm_Loop_2_pr_U0_empty_n");
    sc_trace(mVcdFile, mnist_lstm_Loop_2_pr_U0_start_full_n, "mnist_lstm_Loop_2_pr_U0_start_full_n");
    sc_trace(mVcdFile, mnist_lstm_Loop_2_pr_U0_start_write, "mnist_lstm_Loop_2_pr_U0_start_write");
#endif

    }
}

mnist_lstm::~mnist_lstm() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete img_dat_U;
    delete mnist_lstm_Loop_1_pr_U0;
    delete infer_U0;
    delete mnist_lstm_Loop_2_pr_U0;
    delete res_0_c_U;
    delete res_1_c_U;
    delete start_for_mnist_lciv_U;
}

void mnist_lstm::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_logic_1;
}

void mnist_lstm::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_0;
}

void mnist_lstm::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_0;
}

void mnist_lstm::thread_ap_channel_done_img_dat() {
    ap_channel_done_img_dat = mnist_lstm_Loop_1_pr_U0_ap_done.read();
}

void mnist_lstm::thread_ap_done() {
    ap_done = mnist_lstm_Loop_2_pr_U0_ap_done.read();
}

void mnist_lstm::thread_ap_idle() {
    ap_idle = (mnist_lstm_Loop_1_pr_U0_ap_idle.read() & infer_U0_ap_idle.read() & mnist_lstm_Loop_2_pr_U0_ap_idle.read() & (img_dat_t_empty_n.read() ^ 
  ap_const_logic_1));
}

void mnist_lstm::thread_ap_ready() {
    ap_ready = mnist_lstm_Loop_1_pr_U0_ap_ready.read();
}

void mnist_lstm::thread_ap_sync_continue() {
    ap_sync_continue = ap_continue.read();
}

void mnist_lstm::thread_ap_sync_done() {
    ap_sync_done = mnist_lstm_Loop_2_pr_U0_ap_done.read();
}

void mnist_lstm::thread_ap_sync_ready() {
    ap_sync_ready = mnist_lstm_Loop_1_pr_U0_ap_ready.read();
}

void mnist_lstm::thread_in_r_TREADY() {
    in_r_TREADY = mnist_lstm_Loop_1_pr_U0_in_r_TREADY.read();
}

void mnist_lstm::thread_infer_U0_ap_continue() {
    infer_U0_ap_continue = ap_const_logic_1;
}

void mnist_lstm::thread_infer_U0_ap_start() {
    infer_U0_ap_start = img_dat_t_empty_n.read();
}

void mnist_lstm::thread_mnist_lstm_Loop_1_pr_U0_ap_continue() {
    mnist_lstm_Loop_1_pr_U0_ap_continue = img_dat_i_full_n.read();
}

void mnist_lstm::thread_mnist_lstm_Loop_1_pr_U0_ap_start() {
    mnist_lstm_Loop_1_pr_U0_ap_start = ap_start.read();
}

void mnist_lstm::thread_mnist_lstm_Loop_1_pr_U0_img_dat_full_n() {
    mnist_lstm_Loop_1_pr_U0_img_dat_full_n = img_dat_i_full_n.read();
}

void mnist_lstm::thread_mnist_lstm_Loop_1_pr_U0_start_full_n() {
    mnist_lstm_Loop_1_pr_U0_start_full_n = ap_const_logic_1;
}

void mnist_lstm::thread_mnist_lstm_Loop_1_pr_U0_start_write() {
    mnist_lstm_Loop_1_pr_U0_start_write = ap_const_logic_0;
}

void mnist_lstm::thread_mnist_lstm_Loop_2_pr_U0_ap_continue() {
    mnist_lstm_Loop_2_pr_U0_ap_continue = ap_continue.read();
}

void mnist_lstm::thread_mnist_lstm_Loop_2_pr_U0_ap_start() {
    mnist_lstm_Loop_2_pr_U0_ap_start = start_for_mnist_lstm_Loop_2_pr_U0_empty_n.read();
}

void mnist_lstm::thread_mnist_lstm_Loop_2_pr_U0_start_full_n() {
    mnist_lstm_Loop_2_pr_U0_start_full_n = ap_const_logic_1;
}

void mnist_lstm::thread_mnist_lstm_Loop_2_pr_U0_start_write() {
    mnist_lstm_Loop_2_pr_U0_start_write = ap_const_logic_0;
}

void mnist_lstm::thread_out_r_TDATA() {
    out_r_TDATA = mnist_lstm_Loop_2_pr_U0_out_r_TDATA.read();
}

void mnist_lstm::thread_out_r_TDEST() {
    out_r_TDEST = mnist_lstm_Loop_2_pr_U0_out_r_TDEST.read();
}

void mnist_lstm::thread_out_r_TID() {
    out_r_TID = mnist_lstm_Loop_2_pr_U0_out_r_TID.read();
}

void mnist_lstm::thread_out_r_TKEEP() {
    out_r_TKEEP = mnist_lstm_Loop_2_pr_U0_out_r_TKEEP.read();
}

void mnist_lstm::thread_out_r_TLAST() {
    out_r_TLAST = mnist_lstm_Loop_2_pr_U0_out_r_TLAST.read();
}

void mnist_lstm::thread_out_r_TSTRB() {
    out_r_TSTRB = mnist_lstm_Loop_2_pr_U0_out_r_TSTRB.read();
}

void mnist_lstm::thread_out_r_TUSER() {
    out_r_TUSER = mnist_lstm_Loop_2_pr_U0_out_r_TUSER.read();
}

void mnist_lstm::thread_out_r_TVALID() {
    out_r_TVALID = mnist_lstm_Loop_2_pr_U0_out_r_TVALID.read();
}

void mnist_lstm::thread_start_for_mnist_lstm_Loop_2_pr_U0_din() {
    start_for_mnist_lstm_Loop_2_pr_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

}

