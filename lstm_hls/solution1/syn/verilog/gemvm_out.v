// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module gemvm_out (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        b_0_address0,
        b_0_ce0,
        b_0_q0,
        b_0_address1,
        b_0_ce1,
        b_0_q1,
        b_1_address0,
        b_1_ce0,
        b_1_q0,
        b_1_address1,
        b_1_ce1,
        b_1_q1,
        ap_return_0,
        ap_return_1
);

parameter    ap_ST_fsm_state1 = 12'd1;
parameter    ap_ST_fsm_state2 = 12'd2;
parameter    ap_ST_fsm_state3 = 12'd4;
parameter    ap_ST_fsm_state4 = 12'd8;
parameter    ap_ST_fsm_state5 = 12'd16;
parameter    ap_ST_fsm_state6 = 12'd32;
parameter    ap_ST_fsm_state7 = 12'd64;
parameter    ap_ST_fsm_state8 = 12'd128;
parameter    ap_ST_fsm_state9 = 12'd256;
parameter    ap_ST_fsm_pp0_stage0 = 12'd512;
parameter    ap_ST_fsm_pp0_stage1 = 12'd1024;
parameter    ap_ST_fsm_state42 = 12'd2048;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] b_0_address0;
output   b_0_ce0;
input  [31:0] b_0_q0;
output  [3:0] b_0_address1;
output   b_0_ce1;
input  [31:0] b_0_q1;
output  [3:0] b_1_address0;
output   b_1_ce0;
input  [31:0] b_1_q0;
output  [3:0] b_1_address1;
output   b_1_ce1;
input  [31:0] b_1_q1;
output  [31:0] ap_return_0;
output  [31:0] ap_return_1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[3:0] b_0_address0;
reg b_0_ce0;
reg[3:0] b_0_address1;
reg b_0_ce1;
reg[3:0] b_1_address0;
reg b_1_ce0;
reg[3:0] b_1_address1;
reg b_1_ce1;

(* fsm_encoding = "none" *) reg   [11:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] Weight_lc_0_0_address0;
reg    Weight_lc_0_0_ce0;
wire   [31:0] Weight_lc_0_0_q0;
wire   [0:0] Weight_lc_1_0_address0;
reg    Weight_lc_1_0_ce0;
wire   [31:0] Weight_lc_1_0_q0;
wire   [0:0] Weight_lc_0_1_address0;
reg    Weight_lc_0_1_ce0;
wire   [31:0] Weight_lc_0_1_q0;
wire   [0:0] Weight_lc_1_1_address0;
reg    Weight_lc_1_1_ce0;
wire   [31:0] Weight_lc_1_1_q0;
wire   [0:0] Weight_lc_0_2_address0;
reg    Weight_lc_0_2_ce0;
wire   [31:0] Weight_lc_0_2_q0;
wire   [0:0] Weight_lc_1_2_address0;
reg    Weight_lc_1_2_ce0;
wire   [31:0] Weight_lc_1_2_q0;
wire   [0:0] Weight_lc_0_3_address0;
reg    Weight_lc_0_3_ce0;
wire   [31:0] Weight_lc_0_3_q0;
wire   [0:0] Weight_lc_1_3_address0;
reg    Weight_lc_1_3_ce0;
wire   [31:0] Weight_lc_1_3_q0;
wire   [0:0] Weight_lc_0_4_address0;
reg    Weight_lc_0_4_ce0;
wire   [31:0] Weight_lc_0_4_q0;
wire   [0:0] Weight_lc_1_4_address0;
reg    Weight_lc_1_4_ce0;
wire   [31:0] Weight_lc_1_4_q0;
wire   [0:0] Weight_lc_0_5_address0;
reg    Weight_lc_0_5_ce0;
wire   [31:0] Weight_lc_0_5_q0;
wire   [0:0] Weight_lc_1_5_address0;
reg    Weight_lc_1_5_ce0;
wire   [31:0] Weight_lc_1_5_q0;
wire   [0:0] Weight_lc_0_6_address0;
reg    Weight_lc_0_6_ce0;
wire   [31:0] Weight_lc_0_6_q0;
wire   [0:0] Weight_lc_1_6_address0;
reg    Weight_lc_1_6_ce0;
wire   [31:0] Weight_lc_1_6_q0;
wire   [0:0] Weight_lc_0_7_address0;
reg    Weight_lc_0_7_ce0;
wire   [31:0] Weight_lc_0_7_q0;
wire   [0:0] Weight_lc_1_7_address0;
reg    Weight_lc_1_7_ce0;
wire   [31:0] Weight_lc_1_7_q0;
wire   [0:0] Weight_lc_0_8_address0;
reg    Weight_lc_0_8_ce0;
wire   [31:0] Weight_lc_0_8_q0;
wire   [0:0] Weight_lc_1_8_address0;
reg    Weight_lc_1_8_ce0;
wire   [31:0] Weight_lc_1_8_q0;
wire   [0:0] Weight_lc_0_9_address0;
reg    Weight_lc_0_9_ce0;
wire   [31:0] Weight_lc_0_9_q0;
wire   [0:0] Weight_lc_1_9_address0;
reg    Weight_lc_1_9_ce0;
wire   [31:0] Weight_lc_1_9_q0;
wire   [0:0] Weight_lc_0_10_address0;
reg    Weight_lc_0_10_ce0;
wire   [31:0] Weight_lc_0_10_q0;
wire   [0:0] Weight_lc_1_10_address0;
reg    Weight_lc_1_10_ce0;
wire   [31:0] Weight_lc_1_10_q0;
wire   [0:0] Weight_lc_0_11_address0;
reg    Weight_lc_0_11_ce0;
wire   [31:0] Weight_lc_0_11_q0;
wire   [0:0] Weight_lc_1_11_address0;
reg    Weight_lc_1_11_ce0;
wire   [31:0] Weight_lc_1_11_q0;
wire   [0:0] Weight_lc_0_12_address0;
reg    Weight_lc_0_12_ce0;
wire   [31:0] Weight_lc_0_12_q0;
wire   [0:0] Weight_lc_1_12_address0;
reg    Weight_lc_1_12_ce0;
wire   [31:0] Weight_lc_1_12_q0;
wire   [0:0] Weight_lc_0_13_address0;
reg    Weight_lc_0_13_ce0;
wire   [31:0] Weight_lc_0_13_q0;
wire   [0:0] Weight_lc_1_13_address0;
reg    Weight_lc_1_13_ce0;
wire   [31:0] Weight_lc_1_13_q0;
wire   [0:0] Weight_lc_0_14_address0;
reg    Weight_lc_0_14_ce0;
wire   [31:0] Weight_lc_0_14_q0;
wire   [0:0] Weight_lc_1_14_address0;
reg    Weight_lc_1_14_ce0;
wire   [31:0] Weight_lc_1_14_q0;
wire   [0:0] Weight_lc_0_15_address0;
reg    Weight_lc_0_15_ce0;
wire   [31:0] Weight_lc_0_15_q0;
wire   [0:0] Weight_lc_1_15_address0;
reg    Weight_lc_1_15_ce0;
wire   [31:0] Weight_lc_1_15_q0;
reg   [31:0] res_0_write_assign_reg_850;
reg   [31:0] res_1_write_assign_reg_862;
reg   [1:0] i_reg_874;
reg   [31:0] b_0_load_reg_1111;
wire    ap_CS_fsm_state2;
reg   [31:0] b_1_load_reg_1116;
reg   [31:0] b_0_load_1_reg_1121;
reg   [31:0] b_1_load_1_reg_1126;
reg   [31:0] b_0_load_2_reg_1151;
wire    ap_CS_fsm_state3;
reg   [31:0] b_1_load_2_reg_1156;
reg   [31:0] b_0_load_3_reg_1161;
reg   [31:0] b_1_load_3_reg_1166;
reg   [31:0] b_0_load_4_reg_1191;
wire    ap_CS_fsm_state4;
reg   [31:0] b_1_load_4_reg_1196;
reg   [31:0] b_0_load_5_reg_1201;
reg   [31:0] b_1_load_5_reg_1206;
reg   [31:0] b_0_load_6_reg_1231;
wire    ap_CS_fsm_state5;
reg   [31:0] b_1_load_6_reg_1236;
reg   [31:0] b_0_load_7_reg_1241;
reg   [31:0] b_1_load_7_reg_1246;
reg   [31:0] b_0_load_8_reg_1271;
wire    ap_CS_fsm_state6;
reg   [31:0] b_1_load_8_reg_1276;
reg   [31:0] b_0_load_9_reg_1281;
reg   [31:0] b_1_load_9_reg_1286;
reg   [31:0] b_0_load_10_reg_1311;
wire    ap_CS_fsm_state7;
reg   [31:0] b_1_load_10_reg_1316;
reg   [31:0] b_0_load_11_reg_1321;
reg   [31:0] b_1_load_11_reg_1326;
reg   [31:0] b_0_load_12_reg_1351;
wire    ap_CS_fsm_state8;
reg   [31:0] b_1_load_12_reg_1356;
reg   [31:0] b_0_load_13_reg_1361;
reg   [31:0] b_1_load_13_reg_1366;
reg   [31:0] b_0_load_14_reg_1391;
wire    ap_CS_fsm_state9;
reg   [31:0] b_1_load_14_reg_1396;
reg   [31:0] b_0_load_15_reg_1401;
reg   [31:0] b_1_load_15_reg_1406;
wire   [0:0] exitcond1_fu_1013_p2;
reg   [0:0] exitcond1_reg_1411;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state10_pp0_stage0_iter0;
wire    ap_block_state12_pp0_stage0_iter1;
wire    ap_block_state14_pp0_stage0_iter2;
wire    ap_block_state16_pp0_stage0_iter3;
wire    ap_block_state18_pp0_stage0_iter4;
wire    ap_block_state20_pp0_stage0_iter5;
wire    ap_block_state22_pp0_stage0_iter6;
wire    ap_block_state24_pp0_stage0_iter7;
wire    ap_block_state26_pp0_stage0_iter8;
wire    ap_block_state28_pp0_stage0_iter9;
wire    ap_block_state30_pp0_stage0_iter10;
wire    ap_block_state32_pp0_stage0_iter11;
wire    ap_block_state34_pp0_stage0_iter12;
wire    ap_block_state36_pp0_stage0_iter13;
wire    ap_block_state38_pp0_stage0_iter14;
wire    ap_block_state40_pp0_stage0_iter15;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond1_reg_1411_pp0_iter1_reg;
reg   [0:0] exitcond1_reg_1411_pp0_iter2_reg;
reg   [0:0] exitcond1_reg_1411_pp0_iter3_reg;
reg   [0:0] exitcond1_reg_1411_pp0_iter4_reg;
reg   [0:0] exitcond1_reg_1411_pp0_iter5_reg;
reg   [0:0] exitcond1_reg_1411_pp0_iter6_reg;
reg   [0:0] exitcond1_reg_1411_pp0_iter7_reg;
reg   [0:0] exitcond1_reg_1411_pp0_iter8_reg;
reg   [0:0] exitcond1_reg_1411_pp0_iter9_reg;
reg   [0:0] exitcond1_reg_1411_pp0_iter10_reg;
reg   [0:0] exitcond1_reg_1411_pp0_iter11_reg;
reg   [0:0] exitcond1_reg_1411_pp0_iter12_reg;
reg   [0:0] exitcond1_reg_1411_pp0_iter13_reg;
reg   [0:0] exitcond1_reg_1411_pp0_iter14_reg;
reg   [0:0] exitcond1_reg_1411_pp0_iter15_reg;
wire   [1:0] i_1_fu_1019_p2;
reg   [1:0] i_1_reg_1415;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] tmp_31_fu_1061_p1;
reg   [0:0] tmp_31_reg_1580;
reg   [0:0] tmp_31_reg_1580_pp0_iter1_reg;
reg   [0:0] tmp_31_reg_1580_pp0_iter2_reg;
reg   [0:0] tmp_31_reg_1580_pp0_iter3_reg;
reg   [0:0] tmp_31_reg_1580_pp0_iter4_reg;
reg   [0:0] tmp_31_reg_1580_pp0_iter5_reg;
reg   [0:0] tmp_31_reg_1580_pp0_iter6_reg;
reg   [0:0] tmp_31_reg_1580_pp0_iter7_reg;
reg   [0:0] tmp_31_reg_1580_pp0_iter8_reg;
reg   [0:0] tmp_31_reg_1580_pp0_iter9_reg;
reg   [0:0] tmp_31_reg_1580_pp0_iter10_reg;
reg   [0:0] tmp_31_reg_1580_pp0_iter11_reg;
reg   [0:0] tmp_31_reg_1580_pp0_iter12_reg;
reg   [0:0] tmp_31_reg_1580_pp0_iter13_reg;
reg   [0:0] tmp_31_reg_1580_pp0_iter14_reg;
reg   [0:0] tmp_31_reg_1580_pp0_iter15_reg;
reg   [31:0] Weight_lc_0_0_load_reg_1586;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state11_pp0_stage1_iter0;
wire    ap_block_state13_pp0_stage1_iter1;
wire    ap_block_state15_pp0_stage1_iter2;
wire    ap_block_state17_pp0_stage1_iter3;
wire    ap_block_state19_pp0_stage1_iter4;
wire    ap_block_state21_pp0_stage1_iter5;
wire    ap_block_state23_pp0_stage1_iter6;
wire    ap_block_state25_pp0_stage1_iter7;
wire    ap_block_state27_pp0_stage1_iter8;
wire    ap_block_state29_pp0_stage1_iter9;
wire    ap_block_state31_pp0_stage1_iter10;
wire    ap_block_state33_pp0_stage1_iter11;
wire    ap_block_state35_pp0_stage1_iter12;
wire    ap_block_state37_pp0_stage1_iter13;
wire    ap_block_state39_pp0_stage1_iter14;
wire    ap_block_state41_pp0_stage1_iter15;
wire    ap_block_pp0_stage1_11001;
reg   [31:0] Weight_lc_1_0_load_reg_1591;
reg   [31:0] Weight_lc_0_1_load_reg_1596;
reg   [31:0] Weight_lc_1_1_load_reg_1601;
reg   [31:0] Weight_lc_0_2_load_reg_1606;
reg   [31:0] Weight_lc_1_2_load_reg_1611;
reg   [31:0] Weight_lc_0_3_load_reg_1616;
reg   [31:0] Weight_lc_1_3_load_reg_1621;
reg   [31:0] Weight_lc_0_4_load_reg_1626;
reg   [31:0] Weight_lc_1_4_load_reg_1631;
reg   [31:0] Weight_lc_0_5_load_reg_1636;
reg   [31:0] Weight_lc_1_5_load_reg_1641;
reg   [31:0] Weight_lc_0_6_load_reg_1646;
reg   [31:0] Weight_lc_1_6_load_reg_1651;
reg   [31:0] Weight_lc_0_7_load_reg_1656;
reg   [31:0] Weight_lc_1_7_load_reg_1661;
reg   [31:0] Weight_lc_0_8_load_reg_1666;
reg   [31:0] Weight_lc_1_8_load_reg_1671;
reg   [31:0] Weight_lc_0_9_load_reg_1676;
reg   [31:0] Weight_lc_1_9_load_reg_1681;
reg   [31:0] Weight_lc_0_10_load_reg_1686;
reg   [31:0] Weight_lc_1_10_load_reg_1691;
reg   [31:0] Weight_lc_0_11_load_reg_1696;
reg   [31:0] Weight_lc_1_11_load_reg_1701;
reg   [31:0] Weight_lc_0_12_load_reg_1706;
reg   [31:0] Weight_lc_1_12_load_reg_1711;
reg   [31:0] Weight_lc_0_13_load_reg_1716;
reg   [31:0] Weight_lc_1_13_load_reg_1721;
reg   [31:0] Weight_lc_0_14_load_reg_1726;
reg   [31:0] Weight_lc_1_14_load_reg_1731;
reg   [31:0] Weight_lc_0_15_load_reg_1736;
reg   [31:0] Weight_lc_1_15_load_reg_1741;
wire   [31:0] grp_fu_949_p2;
reg   [31:0] tmp_1_reg_1746;
reg    ap_enable_reg_pp0_iter2;
wire   [31:0] grp_fu_953_p2;
reg   [31:0] tmp_70_1_reg_1751;
wire   [31:0] grp_fu_957_p2;
reg   [31:0] tmp_70_2_reg_1756;
wire   [31:0] grp_fu_961_p2;
reg   [31:0] tmp_70_3_reg_1761;
wire   [31:0] grp_fu_965_p2;
reg   [31:0] tmp_70_4_reg_1766;
wire   [31:0] grp_fu_969_p2;
reg   [31:0] tmp_70_5_reg_1771;
wire   [31:0] grp_fu_973_p2;
reg   [31:0] tmp_70_6_reg_1776;
wire   [31:0] grp_fu_977_p2;
reg   [31:0] tmp_70_7_reg_1781;
wire   [31:0] grp_fu_981_p2;
reg   [31:0] tmp_70_8_reg_1786;
wire   [31:0] grp_fu_985_p2;
reg   [31:0] tmp_70_9_reg_1791;
wire   [31:0] grp_fu_989_p2;
reg   [31:0] tmp_70_s_reg_1796;
wire   [31:0] grp_fu_993_p2;
reg   [31:0] tmp_70_10_reg_1801;
wire   [31:0] grp_fu_997_p2;
reg   [31:0] tmp_70_11_reg_1806;
wire   [31:0] grp_fu_1001_p2;
reg   [31:0] tmp_70_12_reg_1811;
wire   [31:0] grp_fu_1005_p2;
reg   [31:0] tmp_70_13_reg_1816;
wire   [31:0] grp_fu_1009_p2;
reg   [31:0] tmp_70_14_reg_1821;
reg   [31:0] tmp_70_15_reg_1826;
reg    ap_enable_reg_pp0_iter3;
reg   [31:0] tmp_70_16_reg_1831;
reg   [31:0] tmp_70_17_reg_1836;
reg   [31:0] tmp_70_18_reg_1841;
reg   [31:0] tmp_70_19_reg_1846;
reg   [31:0] tmp_70_20_reg_1851;
reg   [31:0] tmp_70_21_reg_1856;
reg   [31:0] tmp_70_22_reg_1861;
reg   [31:0] tmp_70_23_reg_1866;
reg   [31:0] tmp_70_24_reg_1871;
reg   [31:0] tmp_70_25_reg_1876;
reg   [31:0] tmp_70_26_reg_1881;
reg   [31:0] tmp_70_27_reg_1886;
reg   [31:0] tmp_70_28_reg_1891;
reg   [31:0] tmp_70_29_reg_1896;
reg   [31:0] tmp_70_30_reg_1901;
wire   [31:0] grp_fu_885_p2;
reg   [31:0] tmp16_reg_1906;
reg    ap_enable_reg_pp0_iter5;
wire   [31:0] grp_fu_889_p2;
reg   [31:0] tmp17_reg_1911;
wire   [31:0] grp_fu_893_p2;
reg   [31:0] tmp19_reg_1916;
wire   [31:0] grp_fu_897_p2;
reg   [31:0] tmp20_reg_1921;
wire   [31:0] grp_fu_901_p2;
reg   [31:0] tmp23_reg_1926;
wire   [31:0] grp_fu_905_p2;
reg   [31:0] tmp24_reg_1931;
wire   [31:0] grp_fu_909_p2;
reg   [31:0] tmp26_reg_1936;
reg   [31:0] tmp1_reg_1941;
reg   [31:0] tmp2_reg_1946;
reg   [31:0] tmp4_reg_1951;
reg   [31:0] tmp5_reg_1956;
reg   [31:0] tmp8_reg_1961;
reg   [31:0] tmp9_reg_1966;
reg   [31:0] tmp11_reg_1971;
wire   [31:0] grp_fu_913_p2;
reg   [31:0] tmp12_reg_1976;
wire   [31:0] grp_fu_917_p2;
reg   [31:0] tmp27_reg_1981;
wire   [31:0] grp_fu_921_p2;
reg   [31:0] tmp18_reg_1986;
reg    ap_enable_reg_pp0_iter7;
wire   [31:0] grp_fu_925_p2;
reg   [31:0] tmp21_reg_1991;
wire   [31:0] grp_fu_929_p2;
reg   [31:0] tmp25_reg_1996;
reg   [31:0] tmp3_reg_2001;
reg    ap_enable_reg_pp0_iter8;
reg   [31:0] tmp6_reg_2006;
reg   [31:0] tmp10_reg_2011;
reg   [31:0] tmp13_reg_2016;
reg   [31:0] tmp28_reg_2021;
wire   [31:0] grp_fu_933_p2;
reg   [31:0] tmp22_reg_2026;
reg    ap_enable_reg_pp0_iter10;
reg   [31:0] tmp7_reg_2031;
wire   [31:0] grp_fu_937_p2;
reg   [31:0] tmp14_reg_2036;
wire   [31:0] grp_fu_941_p2;
reg   [31:0] tmp29_reg_2041;
reg   [31:0] tmp15_reg_2046;
reg    ap_enable_reg_pp0_iter13;
reg   [31:0] tmp30_reg_2051;
wire   [31:0] res_02_res_fu_1065_p3;
reg    ap_enable_reg_pp0_iter15;
wire   [31:0] res_0_res16_s_fu_1072_p3;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state10;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage1_subdone;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter14;
reg   [1:0] ap_phi_mux_i_phi_fu_878_p4;
wire    ap_block_pp0_stage0;
wire   [63:0] tmp_fu_1025_p1;
reg   [31:0] grp_fu_885_p0;
reg   [31:0] grp_fu_885_p1;
wire    ap_block_pp0_stage1;
reg   [31:0] grp_fu_889_p0;
reg   [31:0] grp_fu_889_p1;
reg   [31:0] grp_fu_893_p0;
reg   [31:0] grp_fu_893_p1;
reg   [31:0] grp_fu_897_p0;
reg   [31:0] grp_fu_897_p1;
reg   [31:0] grp_fu_901_p0;
reg   [31:0] grp_fu_901_p1;
reg   [31:0] grp_fu_905_p0;
reg   [31:0] grp_fu_905_p1;
reg   [31:0] grp_fu_909_p0;
reg   [31:0] grp_fu_909_p1;
reg   [31:0] grp_fu_913_p0;
reg   [31:0] grp_fu_913_p1;
reg   [31:0] grp_fu_917_p0;
reg   [31:0] grp_fu_917_p1;
reg   [31:0] grp_fu_921_p0;
reg   [31:0] grp_fu_921_p1;
reg   [31:0] grp_fu_925_p0;
reg   [31:0] grp_fu_925_p1;
reg   [31:0] grp_fu_929_p0;
reg   [31:0] grp_fu_929_p1;
reg   [31:0] grp_fu_933_p0;
reg   [31:0] grp_fu_933_p1;
reg   [31:0] grp_fu_937_p0;
reg   [31:0] grp_fu_937_p1;
reg   [31:0] grp_fu_941_p0;
reg   [31:0] grp_fu_941_p1;
reg   [31:0] grp_fu_949_p0;
reg   [31:0] grp_fu_949_p1;
reg   [31:0] grp_fu_953_p0;
reg   [31:0] grp_fu_953_p1;
reg   [31:0] grp_fu_957_p0;
reg   [31:0] grp_fu_957_p1;
reg   [31:0] grp_fu_961_p0;
reg   [31:0] grp_fu_961_p1;
reg   [31:0] grp_fu_965_p0;
reg   [31:0] grp_fu_965_p1;
reg   [31:0] grp_fu_969_p0;
reg   [31:0] grp_fu_969_p1;
reg   [31:0] grp_fu_973_p0;
reg   [31:0] grp_fu_973_p1;
reg   [31:0] grp_fu_977_p0;
reg   [31:0] grp_fu_977_p1;
reg   [31:0] grp_fu_981_p0;
reg   [31:0] grp_fu_981_p1;
reg   [31:0] grp_fu_985_p0;
reg   [31:0] grp_fu_985_p1;
reg   [31:0] grp_fu_989_p0;
reg   [31:0] grp_fu_989_p1;
reg   [31:0] grp_fu_993_p0;
reg   [31:0] grp_fu_993_p1;
reg   [31:0] grp_fu_997_p0;
reg   [31:0] grp_fu_997_p1;
reg   [31:0] grp_fu_1001_p0;
reg   [31:0] grp_fu_1001_p1;
reg   [31:0] grp_fu_1005_p0;
reg   [31:0] grp_fu_1005_p1;
reg   [31:0] grp_fu_1009_p0;
reg   [31:0] grp_fu_1009_p1;
wire   [31:0] grp_fu_945_p2;
wire    ap_CS_fsm_state42;
reg   [11:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 12'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
end

gemvm_out_Weight_sc4 #(
    .DataWidth( 32 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
Weight_lc_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Weight_lc_0_0_address0),
    .ce0(Weight_lc_0_0_ce0),
    .q0(Weight_lc_0_0_q0)
);

gemvm_out_Weight_tde #(
    .DataWidth( 32 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
Weight_lc_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Weight_lc_1_0_address0),
    .ce0(Weight_lc_1_0_ce0),
    .q0(Weight_lc_1_0_q0)
);

gemvm_out_Weight_udo #(
    .DataWidth( 32 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
Weight_lc_0_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Weight_lc_0_1_address0),
    .ce0(Weight_lc_0_1_ce0),
    .q0(Weight_lc_0_1_q0)
);

gemvm_out_Weight_vdy #(
    .DataWidth( 32 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
Weight_lc_1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Weight_lc_1_1_address0),
    .ce0(Weight_lc_1_1_ce0),
    .q0(Weight_lc_1_1_q0)
);

gemvm_out_Weight_wdI #(
    .DataWidth( 32 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
Weight_lc_0_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Weight_lc_0_2_address0),
    .ce0(Weight_lc_0_2_ce0),
    .q0(Weight_lc_0_2_q0)
);

gemvm_out_Weight_xdS #(
    .DataWidth( 32 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
Weight_lc_1_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Weight_lc_1_2_address0),
    .ce0(Weight_lc_1_2_ce0),
    .q0(Weight_lc_1_2_q0)
);

gemvm_out_Weight_yd2 #(
    .DataWidth( 32 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
Weight_lc_0_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Weight_lc_0_3_address0),
    .ce0(Weight_lc_0_3_ce0),
    .q0(Weight_lc_0_3_q0)
);

gemvm_out_Weight_zec #(
    .DataWidth( 32 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
Weight_lc_1_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Weight_lc_1_3_address0),
    .ce0(Weight_lc_1_3_ce0),
    .q0(Weight_lc_1_3_q0)
);

gemvm_out_Weight_Aem #(
    .DataWidth( 32 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
Weight_lc_0_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Weight_lc_0_4_address0),
    .ce0(Weight_lc_0_4_ce0),
    .q0(Weight_lc_0_4_q0)
);

gemvm_out_Weight_Bew #(
    .DataWidth( 32 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
Weight_lc_1_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Weight_lc_1_4_address0),
    .ce0(Weight_lc_1_4_ce0),
    .q0(Weight_lc_1_4_q0)
);

gemvm_out_Weight_CeG #(
    .DataWidth( 32 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
Weight_lc_0_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Weight_lc_0_5_address0),
    .ce0(Weight_lc_0_5_ce0),
    .q0(Weight_lc_0_5_q0)
);

gemvm_out_Weight_DeQ #(
    .DataWidth( 32 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
Weight_lc_1_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Weight_lc_1_5_address0),
    .ce0(Weight_lc_1_5_ce0),
    .q0(Weight_lc_1_5_q0)
);

gemvm_out_Weight_Ee0 #(
    .DataWidth( 32 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
Weight_lc_0_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Weight_lc_0_6_address0),
    .ce0(Weight_lc_0_6_ce0),
    .q0(Weight_lc_0_6_q0)
);

gemvm_out_Weight_Ffa #(
    .DataWidth( 32 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
Weight_lc_1_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Weight_lc_1_6_address0),
    .ce0(Weight_lc_1_6_ce0),
    .q0(Weight_lc_1_6_q0)
);

gemvm_out_Weight_Gfk #(
    .DataWidth( 32 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
Weight_lc_0_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Weight_lc_0_7_address0),
    .ce0(Weight_lc_0_7_ce0),
    .q0(Weight_lc_0_7_q0)
);

gemvm_out_Weight_Hfu #(
    .DataWidth( 32 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
Weight_lc_1_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Weight_lc_1_7_address0),
    .ce0(Weight_lc_1_7_ce0),
    .q0(Weight_lc_1_7_q0)
);

gemvm_out_Weight_IfE #(
    .DataWidth( 32 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
Weight_lc_0_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Weight_lc_0_8_address0),
    .ce0(Weight_lc_0_8_ce0),
    .q0(Weight_lc_0_8_q0)
);

gemvm_out_Weight_JfO #(
    .DataWidth( 32 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
Weight_lc_1_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Weight_lc_1_8_address0),
    .ce0(Weight_lc_1_8_ce0),
    .q0(Weight_lc_1_8_q0)
);

gemvm_out_Weight_KfY #(
    .DataWidth( 32 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
Weight_lc_0_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Weight_lc_0_9_address0),
    .ce0(Weight_lc_0_9_ce0),
    .q0(Weight_lc_0_9_q0)
);

gemvm_out_Weight_Lf8 #(
    .DataWidth( 32 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
Weight_lc_1_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Weight_lc_1_9_address0),
    .ce0(Weight_lc_1_9_ce0),
    .q0(Weight_lc_1_9_q0)
);

gemvm_out_Weight_Mgi #(
    .DataWidth( 32 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
Weight_lc_0_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Weight_lc_0_10_address0),
    .ce0(Weight_lc_0_10_ce0),
    .q0(Weight_lc_0_10_q0)
);

gemvm_out_Weight_Ngs #(
    .DataWidth( 32 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
Weight_lc_1_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Weight_lc_1_10_address0),
    .ce0(Weight_lc_1_10_ce0),
    .q0(Weight_lc_1_10_q0)
);

gemvm_out_Weight_OgC #(
    .DataWidth( 32 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
Weight_lc_0_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Weight_lc_0_11_address0),
    .ce0(Weight_lc_0_11_ce0),
    .q0(Weight_lc_0_11_q0)
);

gemvm_out_Weight_PgM #(
    .DataWidth( 32 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
Weight_lc_1_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Weight_lc_1_11_address0),
    .ce0(Weight_lc_1_11_ce0),
    .q0(Weight_lc_1_11_q0)
);

gemvm_out_Weight_QgW #(
    .DataWidth( 32 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
Weight_lc_0_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Weight_lc_0_12_address0),
    .ce0(Weight_lc_0_12_ce0),
    .q0(Weight_lc_0_12_q0)
);

gemvm_out_Weight_Rg6 #(
    .DataWidth( 32 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
Weight_lc_1_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Weight_lc_1_12_address0),
    .ce0(Weight_lc_1_12_ce0),
    .q0(Weight_lc_1_12_q0)
);

gemvm_out_Weight_Shg #(
    .DataWidth( 32 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
Weight_lc_0_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Weight_lc_0_13_address0),
    .ce0(Weight_lc_0_13_ce0),
    .q0(Weight_lc_0_13_q0)
);

gemvm_out_Weight_Thq #(
    .DataWidth( 32 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
Weight_lc_1_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Weight_lc_1_13_address0),
    .ce0(Weight_lc_1_13_ce0),
    .q0(Weight_lc_1_13_q0)
);

gemvm_out_Weight_UhA #(
    .DataWidth( 32 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
Weight_lc_0_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Weight_lc_0_14_address0),
    .ce0(Weight_lc_0_14_ce0),
    .q0(Weight_lc_0_14_q0)
);

gemvm_out_Weight_VhK #(
    .DataWidth( 32 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
Weight_lc_1_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Weight_lc_1_14_address0),
    .ce0(Weight_lc_1_14_ce0),
    .q0(Weight_lc_1_14_q0)
);

gemvm_out_Weight_WhU #(
    .DataWidth( 32 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
Weight_lc_0_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Weight_lc_0_15_address0),
    .ce0(Weight_lc_0_15_ce0),
    .q0(Weight_lc_0_15_q0)
);

gemvm_out_Weight_Xh4 #(
    .DataWidth( 32 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
Weight_lc_1_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Weight_lc_1_15_address0),
    .ce0(Weight_lc_1_15_ce0),
    .q0(Weight_lc_1_15_q0)
);

LSTM_Top_fadd_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LSTM_Top_fadd_32ncud_U96(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_885_p0),
    .din1(grp_fu_885_p1),
    .ce(1'b1),
    .dout(grp_fu_885_p2)
);

LSTM_Top_fadd_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LSTM_Top_fadd_32ncud_U97(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_889_p0),
    .din1(grp_fu_889_p1),
    .ce(1'b1),
    .dout(grp_fu_889_p2)
);

LSTM_Top_fadd_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LSTM_Top_fadd_32ncud_U98(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_893_p0),
    .din1(grp_fu_893_p1),
    .ce(1'b1),
    .dout(grp_fu_893_p2)
);

LSTM_Top_fadd_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LSTM_Top_fadd_32ncud_U99(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_897_p0),
    .din1(grp_fu_897_p1),
    .ce(1'b1),
    .dout(grp_fu_897_p2)
);

LSTM_Top_fadd_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LSTM_Top_fadd_32ncud_U100(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_901_p0),
    .din1(grp_fu_901_p1),
    .ce(1'b1),
    .dout(grp_fu_901_p2)
);

LSTM_Top_fadd_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LSTM_Top_fadd_32ncud_U101(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_905_p0),
    .din1(grp_fu_905_p1),
    .ce(1'b1),
    .dout(grp_fu_905_p2)
);

LSTM_Top_fadd_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LSTM_Top_fadd_32ncud_U102(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_909_p0),
    .din1(grp_fu_909_p1),
    .ce(1'b1),
    .dout(grp_fu_909_p2)
);

LSTM_Top_fadd_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LSTM_Top_fadd_32ncud_U103(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_913_p0),
    .din1(grp_fu_913_p1),
    .ce(1'b1),
    .dout(grp_fu_913_p2)
);

LSTM_Top_fadd_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LSTM_Top_fadd_32ncud_U104(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_917_p0),
    .din1(grp_fu_917_p1),
    .ce(1'b1),
    .dout(grp_fu_917_p2)
);

LSTM_Top_fadd_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LSTM_Top_fadd_32ncud_U105(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_921_p0),
    .din1(grp_fu_921_p1),
    .ce(1'b1),
    .dout(grp_fu_921_p2)
);

LSTM_Top_fadd_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LSTM_Top_fadd_32ncud_U106(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_925_p0),
    .din1(grp_fu_925_p1),
    .ce(1'b1),
    .dout(grp_fu_925_p2)
);

LSTM_Top_fadd_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LSTM_Top_fadd_32ncud_U107(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_929_p0),
    .din1(grp_fu_929_p1),
    .ce(1'b1),
    .dout(grp_fu_929_p2)
);

LSTM_Top_fadd_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LSTM_Top_fadd_32ncud_U108(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_933_p0),
    .din1(grp_fu_933_p1),
    .ce(1'b1),
    .dout(grp_fu_933_p2)
);

LSTM_Top_fadd_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LSTM_Top_fadd_32ncud_U109(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_937_p0),
    .din1(grp_fu_937_p1),
    .ce(1'b1),
    .dout(grp_fu_937_p2)
);

LSTM_Top_fadd_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LSTM_Top_fadd_32ncud_U110(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_941_p0),
    .din1(grp_fu_941_p1),
    .ce(1'b1),
    .dout(grp_fu_941_p2)
);

LSTM_Top_fadd_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LSTM_Top_fadd_32ncud_U111(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp30_reg_2051),
    .din1(tmp15_reg_2046),
    .ce(1'b1),
    .dout(grp_fu_945_p2)
);

LSTM_Top_fmul_32ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LSTM_Top_fmul_32ndEe_U112(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_949_p0),
    .din1(grp_fu_949_p1),
    .ce(1'b1),
    .dout(grp_fu_949_p2)
);

LSTM_Top_fmul_32ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LSTM_Top_fmul_32ndEe_U113(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_953_p0),
    .din1(grp_fu_953_p1),
    .ce(1'b1),
    .dout(grp_fu_953_p2)
);

LSTM_Top_fmul_32ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LSTM_Top_fmul_32ndEe_U114(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_957_p0),
    .din1(grp_fu_957_p1),
    .ce(1'b1),
    .dout(grp_fu_957_p2)
);

LSTM_Top_fmul_32ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LSTM_Top_fmul_32ndEe_U115(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_961_p0),
    .din1(grp_fu_961_p1),
    .ce(1'b1),
    .dout(grp_fu_961_p2)
);

LSTM_Top_fmul_32ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LSTM_Top_fmul_32ndEe_U116(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_965_p0),
    .din1(grp_fu_965_p1),
    .ce(1'b1),
    .dout(grp_fu_965_p2)
);

LSTM_Top_fmul_32ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LSTM_Top_fmul_32ndEe_U117(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_969_p0),
    .din1(grp_fu_969_p1),
    .ce(1'b1),
    .dout(grp_fu_969_p2)
);

LSTM_Top_fmul_32ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LSTM_Top_fmul_32ndEe_U118(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_973_p0),
    .din1(grp_fu_973_p1),
    .ce(1'b1),
    .dout(grp_fu_973_p2)
);

LSTM_Top_fmul_32ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LSTM_Top_fmul_32ndEe_U119(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_977_p0),
    .din1(grp_fu_977_p1),
    .ce(1'b1),
    .dout(grp_fu_977_p2)
);

LSTM_Top_fmul_32ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LSTM_Top_fmul_32ndEe_U120(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_981_p0),
    .din1(grp_fu_981_p1),
    .ce(1'b1),
    .dout(grp_fu_981_p2)
);

LSTM_Top_fmul_32ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LSTM_Top_fmul_32ndEe_U121(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_985_p0),
    .din1(grp_fu_985_p1),
    .ce(1'b1),
    .dout(grp_fu_985_p2)
);

LSTM_Top_fmul_32ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LSTM_Top_fmul_32ndEe_U122(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_989_p0),
    .din1(grp_fu_989_p1),
    .ce(1'b1),
    .dout(grp_fu_989_p2)
);

LSTM_Top_fmul_32ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LSTM_Top_fmul_32ndEe_U123(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_993_p0),
    .din1(grp_fu_993_p1),
    .ce(1'b1),
    .dout(grp_fu_993_p2)
);

LSTM_Top_fmul_32ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LSTM_Top_fmul_32ndEe_U124(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_997_p0),
    .din1(grp_fu_997_p1),
    .ce(1'b1),
    .dout(grp_fu_997_p2)
);

LSTM_Top_fmul_32ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LSTM_Top_fmul_32ndEe_U125(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1001_p0),
    .din1(grp_fu_1001_p1),
    .ce(1'b1),
    .dout(grp_fu_1001_p2)
);

LSTM_Top_fmul_32ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LSTM_Top_fmul_32ndEe_U126(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1005_p0),
    .din1(grp_fu_1005_p1),
    .ce(1'b1),
    .dout(grp_fu_1005_p2)
);

LSTM_Top_fmul_32ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
LSTM_Top_fmul_32ndEe_U127(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1009_p0),
    .din1(grp_fu_1009_p1),
    .ce(1'b1),
    .dout(grp_fu_1009_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state10) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            ap_enable_reg_pp0_iter15 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond1_reg_1411 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        i_reg_874 <= i_1_reg_1415;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        i_reg_874 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (exitcond1_reg_1411 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        Weight_lc_0_0_load_reg_1586 <= Weight_lc_0_0_q0;
        Weight_lc_0_10_load_reg_1686 <= Weight_lc_0_10_q0;
        Weight_lc_0_11_load_reg_1696 <= Weight_lc_0_11_q0;
        Weight_lc_0_12_load_reg_1706 <= Weight_lc_0_12_q0;
        Weight_lc_0_13_load_reg_1716 <= Weight_lc_0_13_q0;
        Weight_lc_0_14_load_reg_1726 <= Weight_lc_0_14_q0;
        Weight_lc_0_15_load_reg_1736 <= Weight_lc_0_15_q0;
        Weight_lc_0_1_load_reg_1596 <= Weight_lc_0_1_q0;
        Weight_lc_0_2_load_reg_1606 <= Weight_lc_0_2_q0;
        Weight_lc_0_3_load_reg_1616 <= Weight_lc_0_3_q0;
        Weight_lc_0_4_load_reg_1626 <= Weight_lc_0_4_q0;
        Weight_lc_0_5_load_reg_1636 <= Weight_lc_0_5_q0;
        Weight_lc_0_6_load_reg_1646 <= Weight_lc_0_6_q0;
        Weight_lc_0_7_load_reg_1656 <= Weight_lc_0_7_q0;
        Weight_lc_0_8_load_reg_1666 <= Weight_lc_0_8_q0;
        Weight_lc_0_9_load_reg_1676 <= Weight_lc_0_9_q0;
        Weight_lc_1_0_load_reg_1591 <= Weight_lc_1_0_q0;
        Weight_lc_1_10_load_reg_1691 <= Weight_lc_1_10_q0;
        Weight_lc_1_11_load_reg_1701 <= Weight_lc_1_11_q0;
        Weight_lc_1_12_load_reg_1711 <= Weight_lc_1_12_q0;
        Weight_lc_1_13_load_reg_1721 <= Weight_lc_1_13_q0;
        Weight_lc_1_14_load_reg_1731 <= Weight_lc_1_14_q0;
        Weight_lc_1_15_load_reg_1741 <= Weight_lc_1_15_q0;
        Weight_lc_1_1_load_reg_1601 <= Weight_lc_1_1_q0;
        Weight_lc_1_2_load_reg_1611 <= Weight_lc_1_2_q0;
        Weight_lc_1_3_load_reg_1621 <= Weight_lc_1_3_q0;
        Weight_lc_1_4_load_reg_1631 <= Weight_lc_1_4_q0;
        Weight_lc_1_5_load_reg_1641 <= Weight_lc_1_5_q0;
        Weight_lc_1_6_load_reg_1651 <= Weight_lc_1_6_q0;
        Weight_lc_1_7_load_reg_1661 <= Weight_lc_1_7_q0;
        Weight_lc_1_8_load_reg_1671 <= Weight_lc_1_8_q0;
        Weight_lc_1_9_load_reg_1681 <= Weight_lc_1_9_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        b_0_load_10_reg_1311 <= b_0_q0;
        b_0_load_11_reg_1321 <= b_0_q1;
        b_1_load_10_reg_1316 <= b_1_q0;
        b_1_load_11_reg_1326 <= b_1_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        b_0_load_12_reg_1351 <= b_0_q0;
        b_0_load_13_reg_1361 <= b_0_q1;
        b_1_load_12_reg_1356 <= b_1_q0;
        b_1_load_13_reg_1366 <= b_1_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        b_0_load_14_reg_1391 <= b_0_q0;
        b_0_load_15_reg_1401 <= b_0_q1;
        b_1_load_14_reg_1396 <= b_1_q0;
        b_1_load_15_reg_1406 <= b_1_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        b_0_load_1_reg_1121 <= b_0_q1;
        b_0_load_reg_1111 <= b_0_q0;
        b_1_load_1_reg_1126 <= b_1_q1;
        b_1_load_reg_1116 <= b_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        b_0_load_2_reg_1151 <= b_0_q0;
        b_0_load_3_reg_1161 <= b_0_q1;
        b_1_load_2_reg_1156 <= b_1_q0;
        b_1_load_3_reg_1166 <= b_1_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        b_0_load_4_reg_1191 <= b_0_q0;
        b_0_load_5_reg_1201 <= b_0_q1;
        b_1_load_4_reg_1196 <= b_1_q0;
        b_1_load_5_reg_1206 <= b_1_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        b_0_load_6_reg_1231 <= b_0_q0;
        b_0_load_7_reg_1241 <= b_0_q1;
        b_1_load_6_reg_1236 <= b_1_q0;
        b_1_load_7_reg_1246 <= b_1_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        b_0_load_8_reg_1271 <= b_0_q0;
        b_0_load_9_reg_1281 <= b_0_q1;
        b_1_load_8_reg_1276 <= b_1_q0;
        b_1_load_9_reg_1286 <= b_1_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond1_reg_1411 <= exitcond1_fu_1013_p2;
        exitcond1_reg_1411_pp0_iter10_reg <= exitcond1_reg_1411_pp0_iter9_reg;
        exitcond1_reg_1411_pp0_iter11_reg <= exitcond1_reg_1411_pp0_iter10_reg;
        exitcond1_reg_1411_pp0_iter12_reg <= exitcond1_reg_1411_pp0_iter11_reg;
        exitcond1_reg_1411_pp0_iter13_reg <= exitcond1_reg_1411_pp0_iter12_reg;
        exitcond1_reg_1411_pp0_iter14_reg <= exitcond1_reg_1411_pp0_iter13_reg;
        exitcond1_reg_1411_pp0_iter15_reg <= exitcond1_reg_1411_pp0_iter14_reg;
        exitcond1_reg_1411_pp0_iter1_reg <= exitcond1_reg_1411;
        exitcond1_reg_1411_pp0_iter2_reg <= exitcond1_reg_1411_pp0_iter1_reg;
        exitcond1_reg_1411_pp0_iter3_reg <= exitcond1_reg_1411_pp0_iter2_reg;
        exitcond1_reg_1411_pp0_iter4_reg <= exitcond1_reg_1411_pp0_iter3_reg;
        exitcond1_reg_1411_pp0_iter5_reg <= exitcond1_reg_1411_pp0_iter4_reg;
        exitcond1_reg_1411_pp0_iter6_reg <= exitcond1_reg_1411_pp0_iter5_reg;
        exitcond1_reg_1411_pp0_iter7_reg <= exitcond1_reg_1411_pp0_iter6_reg;
        exitcond1_reg_1411_pp0_iter8_reg <= exitcond1_reg_1411_pp0_iter7_reg;
        exitcond1_reg_1411_pp0_iter9_reg <= exitcond1_reg_1411_pp0_iter8_reg;
        tmp_31_reg_1580_pp0_iter10_reg <= tmp_31_reg_1580_pp0_iter9_reg;
        tmp_31_reg_1580_pp0_iter11_reg <= tmp_31_reg_1580_pp0_iter10_reg;
        tmp_31_reg_1580_pp0_iter12_reg <= tmp_31_reg_1580_pp0_iter11_reg;
        tmp_31_reg_1580_pp0_iter13_reg <= tmp_31_reg_1580_pp0_iter12_reg;
        tmp_31_reg_1580_pp0_iter14_reg <= tmp_31_reg_1580_pp0_iter13_reg;
        tmp_31_reg_1580_pp0_iter15_reg <= tmp_31_reg_1580_pp0_iter14_reg;
        tmp_31_reg_1580_pp0_iter1_reg <= tmp_31_reg_1580;
        tmp_31_reg_1580_pp0_iter2_reg <= tmp_31_reg_1580_pp0_iter1_reg;
        tmp_31_reg_1580_pp0_iter3_reg <= tmp_31_reg_1580_pp0_iter2_reg;
        tmp_31_reg_1580_pp0_iter4_reg <= tmp_31_reg_1580_pp0_iter3_reg;
        tmp_31_reg_1580_pp0_iter5_reg <= tmp_31_reg_1580_pp0_iter4_reg;
        tmp_31_reg_1580_pp0_iter6_reg <= tmp_31_reg_1580_pp0_iter5_reg;
        tmp_31_reg_1580_pp0_iter7_reg <= tmp_31_reg_1580_pp0_iter6_reg;
        tmp_31_reg_1580_pp0_iter8_reg <= tmp_31_reg_1580_pp0_iter7_reg;
        tmp_31_reg_1580_pp0_iter9_reg <= tmp_31_reg_1580_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_1_reg_1415 <= i_1_fu_1019_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (exitcond1_reg_1411_pp0_iter15_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter15 == 1'b1))) begin
        res_0_write_assign_reg_850 <= res_02_res_fu_1065_p3;
        res_1_write_assign_reg_862 <= res_0_res16_s_fu_1072_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_1411_pp0_iter7_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp10_reg_2011 <= grp_fu_921_p2;
        tmp13_reg_2016 <= grp_fu_925_p2;
        tmp28_reg_2021 <= grp_fu_929_p2;
        tmp3_reg_2001 <= grp_fu_913_p2;
        tmp6_reg_2006 <= grp_fu_917_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (exitcond1_reg_1411_pp0_iter5_reg == 1'd0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp11_reg_1971 <= grp_fu_909_p2;
        tmp12_reg_1976 <= grp_fu_913_p2;
        tmp1_reg_1941 <= grp_fu_885_p2;
        tmp27_reg_1981 <= grp_fu_917_p2;
        tmp2_reg_1946 <= grp_fu_889_p2;
        tmp4_reg_1951 <= grp_fu_893_p2;
        tmp5_reg_1956 <= grp_fu_897_p2;
        tmp8_reg_1961 <= grp_fu_901_p2;
        tmp9_reg_1966 <= grp_fu_905_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (exitcond1_reg_1411_pp0_iter10_reg == 1'd0) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp14_reg_2036 <= grp_fu_937_p2;
        tmp29_reg_2041 <= grp_fu_941_p2;
        tmp7_reg_2031 <= grp_fu_933_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_1411_pp0_iter12_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        tmp15_reg_2046 <= grp_fu_937_p2;
        tmp30_reg_2051 <= grp_fu_941_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_1411_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp16_reg_1906 <= grp_fu_885_p2;
        tmp17_reg_1911 <= grp_fu_889_p2;
        tmp19_reg_1916 <= grp_fu_893_p2;
        tmp20_reg_1921 <= grp_fu_897_p2;
        tmp23_reg_1926 <= grp_fu_901_p2;
        tmp24_reg_1931 <= grp_fu_905_p2;
        tmp26_reg_1936 <= grp_fu_909_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (exitcond1_reg_1411_pp0_iter7_reg == 1'd0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp18_reg_1986 <= grp_fu_921_p2;
        tmp21_reg_1991 <= grp_fu_925_p2;
        tmp25_reg_1996 <= grp_fu_929_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_1411_pp0_iter9_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp22_reg_2026 <= grp_fu_933_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (exitcond1_reg_1411_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_1_reg_1746 <= grp_fu_949_p2;
        tmp_70_10_reg_1801 <= grp_fu_993_p2;
        tmp_70_11_reg_1806 <= grp_fu_997_p2;
        tmp_70_12_reg_1811 <= grp_fu_1001_p2;
        tmp_70_13_reg_1816 <= grp_fu_1005_p2;
        tmp_70_14_reg_1821 <= grp_fu_1009_p2;
        tmp_70_1_reg_1751 <= grp_fu_953_p2;
        tmp_70_2_reg_1756 <= grp_fu_957_p2;
        tmp_70_3_reg_1761 <= grp_fu_961_p2;
        tmp_70_4_reg_1766 <= grp_fu_965_p2;
        tmp_70_5_reg_1771 <= grp_fu_969_p2;
        tmp_70_6_reg_1776 <= grp_fu_973_p2;
        tmp_70_7_reg_1781 <= grp_fu_977_p2;
        tmp_70_8_reg_1786 <= grp_fu_981_p2;
        tmp_70_9_reg_1791 <= grp_fu_985_p2;
        tmp_70_s_reg_1796 <= grp_fu_989_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond1_fu_1013_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_31_reg_1580 <= tmp_31_fu_1061_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_1411_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_70_15_reg_1826 <= grp_fu_949_p2;
        tmp_70_16_reg_1831 <= grp_fu_953_p2;
        tmp_70_17_reg_1836 <= grp_fu_957_p2;
        tmp_70_18_reg_1841 <= grp_fu_961_p2;
        tmp_70_19_reg_1846 <= grp_fu_965_p2;
        tmp_70_20_reg_1851 <= grp_fu_969_p2;
        tmp_70_21_reg_1856 <= grp_fu_973_p2;
        tmp_70_22_reg_1861 <= grp_fu_977_p2;
        tmp_70_23_reg_1866 <= grp_fu_981_p2;
        tmp_70_24_reg_1871 <= grp_fu_985_p2;
        tmp_70_25_reg_1876 <= grp_fu_989_p2;
        tmp_70_26_reg_1881 <= grp_fu_993_p2;
        tmp_70_27_reg_1886 <= grp_fu_997_p2;
        tmp_70_28_reg_1891 <= grp_fu_1001_p2;
        tmp_70_29_reg_1896 <= grp_fu_1005_p2;
        tmp_70_30_reg_1901 <= grp_fu_1009_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Weight_lc_0_0_ce0 = 1'b1;
    end else begin
        Weight_lc_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Weight_lc_0_10_ce0 = 1'b1;
    end else begin
        Weight_lc_0_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Weight_lc_0_11_ce0 = 1'b1;
    end else begin
        Weight_lc_0_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Weight_lc_0_12_ce0 = 1'b1;
    end else begin
        Weight_lc_0_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Weight_lc_0_13_ce0 = 1'b1;
    end else begin
        Weight_lc_0_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Weight_lc_0_14_ce0 = 1'b1;
    end else begin
        Weight_lc_0_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Weight_lc_0_15_ce0 = 1'b1;
    end else begin
        Weight_lc_0_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Weight_lc_0_1_ce0 = 1'b1;
    end else begin
        Weight_lc_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Weight_lc_0_2_ce0 = 1'b1;
    end else begin
        Weight_lc_0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Weight_lc_0_3_ce0 = 1'b1;
    end else begin
        Weight_lc_0_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Weight_lc_0_4_ce0 = 1'b1;
    end else begin
        Weight_lc_0_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Weight_lc_0_5_ce0 = 1'b1;
    end else begin
        Weight_lc_0_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Weight_lc_0_6_ce0 = 1'b1;
    end else begin
        Weight_lc_0_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Weight_lc_0_7_ce0 = 1'b1;
    end else begin
        Weight_lc_0_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Weight_lc_0_8_ce0 = 1'b1;
    end else begin
        Weight_lc_0_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Weight_lc_0_9_ce0 = 1'b1;
    end else begin
        Weight_lc_0_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Weight_lc_1_0_ce0 = 1'b1;
    end else begin
        Weight_lc_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Weight_lc_1_10_ce0 = 1'b1;
    end else begin
        Weight_lc_1_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Weight_lc_1_11_ce0 = 1'b1;
    end else begin
        Weight_lc_1_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Weight_lc_1_12_ce0 = 1'b1;
    end else begin
        Weight_lc_1_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Weight_lc_1_13_ce0 = 1'b1;
    end else begin
        Weight_lc_1_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Weight_lc_1_14_ce0 = 1'b1;
    end else begin
        Weight_lc_1_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Weight_lc_1_15_ce0 = 1'b1;
    end else begin
        Weight_lc_1_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Weight_lc_1_1_ce0 = 1'b1;
    end else begin
        Weight_lc_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Weight_lc_1_2_ce0 = 1'b1;
    end else begin
        Weight_lc_1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Weight_lc_1_3_ce0 = 1'b1;
    end else begin
        Weight_lc_1_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Weight_lc_1_4_ce0 = 1'b1;
    end else begin
        Weight_lc_1_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Weight_lc_1_5_ce0 = 1'b1;
    end else begin
        Weight_lc_1_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Weight_lc_1_6_ce0 = 1'b1;
    end else begin
        Weight_lc_1_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Weight_lc_1_7_ce0 = 1'b1;
    end else begin
        Weight_lc_1_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Weight_lc_1_8_ce0 = 1'b1;
    end else begin
        Weight_lc_1_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Weight_lc_1_9_ce0 = 1'b1;
    end else begin
        Weight_lc_1_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond1_fu_1013_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state10 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state10 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state42) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond1_reg_1411 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_i_phi_fu_878_p4 = i_1_reg_1415;
    end else begin
        ap_phi_mux_i_phi_fu_878_p4 = i_reg_874;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        b_0_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        b_0_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        b_0_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        b_0_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        b_0_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        b_0_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        b_0_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        b_0_address0 = 64'd0;
    end else begin
        b_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        b_0_address1 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        b_0_address1 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        b_0_address1 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        b_0_address1 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        b_0_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        b_0_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        b_0_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        b_0_address1 = 64'd1;
    end else begin
        b_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        b_0_ce0 = 1'b1;
    end else begin
        b_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        b_0_ce1 = 1'b1;
    end else begin
        b_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        b_1_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        b_1_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        b_1_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        b_1_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        b_1_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        b_1_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        b_1_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        b_1_address0 = 64'd0;
    end else begin
        b_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        b_1_address1 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        b_1_address1 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        b_1_address1 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        b_1_address1 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        b_1_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        b_1_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        b_1_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        b_1_address1 = 64'd1;
    end else begin
        b_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        b_1_ce0 = 1'b1;
    end else begin
        b_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        b_1_ce1 = 1'b1;
    end else begin
        b_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_1001_p0 = Weight_lc_1_14_load_reg_1731;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_1001_p0 = Weight_lc_1_6_load_reg_1651;
        end else begin
            grp_fu_1001_p0 = 'bx;
        end
    end else begin
        grp_fu_1001_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_1001_p1 = b_1_load_14_reg_1396;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_1001_p1 = b_1_load_6_reg_1236;
        end else begin
            grp_fu_1001_p1 = 'bx;
        end
    end else begin
        grp_fu_1001_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_1005_p0 = Weight_lc_0_15_load_reg_1736;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_1005_p0 = Weight_lc_0_7_load_reg_1656;
        end else begin
            grp_fu_1005_p0 = 'bx;
        end
    end else begin
        grp_fu_1005_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_1005_p1 = b_0_load_15_reg_1401;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_1005_p1 = b_0_load_7_reg_1241;
        end else begin
            grp_fu_1005_p1 = 'bx;
        end
    end else begin
        grp_fu_1005_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_1009_p0 = Weight_lc_1_15_load_reg_1741;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_1009_p0 = Weight_lc_1_7_load_reg_1661;
        end else begin
            grp_fu_1009_p0 = 'bx;
        end
    end else begin
        grp_fu_1009_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_1009_p1 = b_1_load_15_reg_1406;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_1009_p1 = b_1_load_7_reg_1246;
        end else begin
            grp_fu_1009_p1 = 'bx;
        end
    end else begin
        grp_fu_1009_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_885_p0 = tmp_70_28_reg_1891;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_885_p0 = tmp_1_reg_1746;
        end else begin
            grp_fu_885_p0 = 'bx;
        end
    end else begin
        grp_fu_885_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_885_p1 = tmp_70_29_reg_1896;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_885_p1 = tmp_70_2_reg_1756;
        end else begin
            grp_fu_885_p1 = 'bx;
        end
    end else begin
        grp_fu_885_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_889_p0 = tmp_70_27_reg_1886;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_889_p0 = tmp_70_1_reg_1751;
        end else begin
            grp_fu_889_p0 = 'bx;
        end
    end else begin
        grp_fu_889_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_889_p1 = tmp_70_26_reg_1881;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_889_p1 = tmp_70_4_reg_1766;
        end else begin
            grp_fu_889_p1 = 'bx;
        end
    end else begin
        grp_fu_889_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_893_p0 = tmp_70_23_reg_1866;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_893_p0 = tmp_70_3_reg_1761;
        end else begin
            grp_fu_893_p0 = 'bx;
        end
    end else begin
        grp_fu_893_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_893_p1 = tmp_70_22_reg_1861;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_893_p1 = tmp_70_6_reg_1776;
        end else begin
            grp_fu_893_p1 = 'bx;
        end
    end else begin
        grp_fu_893_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_897_p0 = tmp_70_25_reg_1876;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_897_p0 = tmp_70_5_reg_1771;
        end else begin
            grp_fu_897_p0 = 'bx;
        end
    end else begin
        grp_fu_897_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_897_p1 = tmp_70_24_reg_1871;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_897_p1 = tmp_70_8_reg_1786;
        end else begin
            grp_fu_897_p1 = 'bx;
        end
    end else begin
        grp_fu_897_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_901_p0 = tmp_70_15_reg_1826;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_901_p0 = tmp_70_7_reg_1781;
        end else begin
            grp_fu_901_p0 = 'bx;
        end
    end else begin
        grp_fu_901_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_901_p1 = tmp_70_14_reg_1821;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_901_p1 = tmp_70_s_reg_1796;
        end else begin
            grp_fu_901_p1 = 'bx;
        end
    end else begin
        grp_fu_901_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_905_p0 = tmp_70_17_reg_1836;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_905_p0 = tmp_70_9_reg_1791;
        end else begin
            grp_fu_905_p0 = 'bx;
        end
    end else begin
        grp_fu_905_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_905_p1 = tmp_70_16_reg_1831;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_905_p1 = tmp_70_11_reg_1806;
        end else begin
            grp_fu_905_p1 = 'bx;
        end
    end else begin
        grp_fu_905_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_909_p0 = tmp_70_19_reg_1846;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_909_p0 = tmp_70_10_reg_1801;
        end else begin
            grp_fu_909_p0 = 'bx;
        end
    end else begin
        grp_fu_909_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_909_p1 = tmp_70_18_reg_1841;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_909_p1 = tmp_70_13_reg_1816;
        end else begin
            grp_fu_909_p1 = 'bx;
        end
    end else begin
        grp_fu_909_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_913_p0 = tmp2_reg_1946;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_913_p0 = tmp_70_21_reg_1856;
    end else begin
        grp_fu_913_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_913_p1 = tmp1_reg_1941;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_913_p1 = tmp_70_20_reg_1851;
    end else begin
        grp_fu_913_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_917_p0 = tmp5_reg_1956;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_917_p0 = tmp_70_12_reg_1811;
    end else begin
        grp_fu_917_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_917_p1 = tmp4_reg_1951;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_917_p1 = tmp_70_30_reg_1901;
    end else begin
        grp_fu_917_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_921_p0 = tmp9_reg_1966;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_921_p0 = tmp17_reg_1911;
    end else begin
        grp_fu_921_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_921_p1 = tmp8_reg_1961;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_921_p1 = tmp16_reg_1906;
    end else begin
        grp_fu_921_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_925_p0 = tmp12_reg_1976;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_925_p0 = tmp20_reg_1921;
    end else begin
        grp_fu_925_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_925_p1 = tmp11_reg_1971;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_925_p1 = tmp19_reg_1916;
    end else begin
        grp_fu_925_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_929_p0 = tmp27_reg_1981;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_929_p0 = tmp24_reg_1931;
    end else begin
        grp_fu_929_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_929_p1 = tmp26_reg_1936;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_929_p1 = tmp23_reg_1926;
    end else begin
        grp_fu_929_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter8 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_933_p0 = tmp6_reg_2006;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_933_p0 = tmp21_reg_1991;
        end else begin
            grp_fu_933_p0 = 'bx;
        end
    end else begin
        grp_fu_933_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter8 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_933_p1 = tmp3_reg_2001;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_933_p1 = tmp18_reg_1986;
        end else begin
            grp_fu_933_p1 = 'bx;
        end
    end else begin
        grp_fu_933_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_937_p0 = tmp14_reg_2036;
    end else if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_937_p0 = tmp13_reg_2016;
    end else begin
        grp_fu_937_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_937_p1 = tmp7_reg_2031;
    end else if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_937_p1 = tmp10_reg_2011;
    end else begin
        grp_fu_937_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_941_p0 = tmp29_reg_2041;
    end else if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_941_p0 = tmp28_reg_2021;
    end else begin
        grp_fu_941_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_941_p1 = tmp22_reg_2026;
    end else if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_941_p1 = tmp25_reg_1996;
    end else begin
        grp_fu_941_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_949_p0 = Weight_lc_0_8_load_reg_1666;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_949_p0 = Weight_lc_0_0_load_reg_1586;
        end else begin
            grp_fu_949_p0 = 'bx;
        end
    end else begin
        grp_fu_949_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_949_p1 = b_0_load_8_reg_1271;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_949_p1 = b_0_load_reg_1111;
        end else begin
            grp_fu_949_p1 = 'bx;
        end
    end else begin
        grp_fu_949_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_953_p0 = Weight_lc_1_8_load_reg_1671;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_953_p0 = Weight_lc_1_0_load_reg_1591;
        end else begin
            grp_fu_953_p0 = 'bx;
        end
    end else begin
        grp_fu_953_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_953_p1 = b_1_load_8_reg_1276;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_953_p1 = b_1_load_reg_1116;
        end else begin
            grp_fu_953_p1 = 'bx;
        end
    end else begin
        grp_fu_953_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_957_p0 = Weight_lc_0_9_load_reg_1676;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_957_p0 = Weight_lc_0_1_load_reg_1596;
        end else begin
            grp_fu_957_p0 = 'bx;
        end
    end else begin
        grp_fu_957_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_957_p1 = b_0_load_9_reg_1281;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_957_p1 = b_0_load_1_reg_1121;
        end else begin
            grp_fu_957_p1 = 'bx;
        end
    end else begin
        grp_fu_957_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_961_p0 = Weight_lc_1_9_load_reg_1681;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_961_p0 = Weight_lc_1_1_load_reg_1601;
        end else begin
            grp_fu_961_p0 = 'bx;
        end
    end else begin
        grp_fu_961_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_961_p1 = b_1_load_9_reg_1286;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_961_p1 = b_1_load_1_reg_1126;
        end else begin
            grp_fu_961_p1 = 'bx;
        end
    end else begin
        grp_fu_961_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_965_p0 = Weight_lc_0_10_load_reg_1686;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_965_p0 = Weight_lc_0_2_load_reg_1606;
        end else begin
            grp_fu_965_p0 = 'bx;
        end
    end else begin
        grp_fu_965_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_965_p1 = b_0_load_10_reg_1311;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_965_p1 = b_0_load_2_reg_1151;
        end else begin
            grp_fu_965_p1 = 'bx;
        end
    end else begin
        grp_fu_965_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_969_p0 = Weight_lc_1_10_load_reg_1691;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_969_p0 = Weight_lc_1_2_load_reg_1611;
        end else begin
            grp_fu_969_p0 = 'bx;
        end
    end else begin
        grp_fu_969_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_969_p1 = b_1_load_10_reg_1316;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_969_p1 = b_1_load_2_reg_1156;
        end else begin
            grp_fu_969_p1 = 'bx;
        end
    end else begin
        grp_fu_969_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_973_p0 = Weight_lc_0_11_load_reg_1696;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_973_p0 = Weight_lc_0_3_load_reg_1616;
        end else begin
            grp_fu_973_p0 = 'bx;
        end
    end else begin
        grp_fu_973_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_973_p1 = b_0_load_11_reg_1321;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_973_p1 = b_0_load_3_reg_1161;
        end else begin
            grp_fu_973_p1 = 'bx;
        end
    end else begin
        grp_fu_973_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_977_p0 = Weight_lc_1_11_load_reg_1701;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_977_p0 = Weight_lc_1_3_load_reg_1621;
        end else begin
            grp_fu_977_p0 = 'bx;
        end
    end else begin
        grp_fu_977_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_977_p1 = b_1_load_11_reg_1326;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_977_p1 = b_1_load_3_reg_1166;
        end else begin
            grp_fu_977_p1 = 'bx;
        end
    end else begin
        grp_fu_977_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_981_p0 = Weight_lc_0_12_load_reg_1706;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_981_p0 = Weight_lc_0_4_load_reg_1626;
        end else begin
            grp_fu_981_p0 = 'bx;
        end
    end else begin
        grp_fu_981_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_981_p1 = b_0_load_12_reg_1351;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_981_p1 = b_0_load_4_reg_1191;
        end else begin
            grp_fu_981_p1 = 'bx;
        end
    end else begin
        grp_fu_981_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_985_p0 = Weight_lc_1_12_load_reg_1711;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_985_p0 = Weight_lc_1_4_load_reg_1631;
        end else begin
            grp_fu_985_p0 = 'bx;
        end
    end else begin
        grp_fu_985_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_985_p1 = b_1_load_12_reg_1356;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_985_p1 = b_1_load_4_reg_1196;
        end else begin
            grp_fu_985_p1 = 'bx;
        end
    end else begin
        grp_fu_985_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_989_p0 = Weight_lc_0_13_load_reg_1716;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_989_p0 = Weight_lc_0_5_load_reg_1636;
        end else begin
            grp_fu_989_p0 = 'bx;
        end
    end else begin
        grp_fu_989_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_989_p1 = b_0_load_13_reg_1361;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_989_p1 = b_0_load_5_reg_1201;
        end else begin
            grp_fu_989_p1 = 'bx;
        end
    end else begin
        grp_fu_989_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_993_p0 = Weight_lc_1_13_load_reg_1721;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_993_p0 = Weight_lc_1_5_load_reg_1641;
        end else begin
            grp_fu_993_p0 = 'bx;
        end
    end else begin
        grp_fu_993_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_993_p1 = b_1_load_13_reg_1366;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_993_p1 = b_1_load_5_reg_1206;
        end else begin
            grp_fu_993_p1 = 'bx;
        end
    end else begin
        grp_fu_993_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_997_p0 = Weight_lc_0_14_load_reg_1726;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_997_p0 = Weight_lc_0_6_load_reg_1646;
        end else begin
            grp_fu_997_p0 = 'bx;
        end
    end else begin
        grp_fu_997_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_997_p1 = b_0_load_14_reg_1391;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_997_p1 = b_0_load_6_reg_1231;
        end else begin
            grp_fu_997_p1 = 'bx;
        end
    end else begin
        grp_fu_997_p1 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((exitcond1_fu_1013_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((exitcond1_fu_1013_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter15 == 1'b1) & (ap_enable_reg_pp0_iter14 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter15 == 1'b1) & (ap_enable_reg_pp0_iter14 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Weight_lc_0_0_address0 = tmp_fu_1025_p1;

assign Weight_lc_0_10_address0 = tmp_fu_1025_p1;

assign Weight_lc_0_11_address0 = tmp_fu_1025_p1;

assign Weight_lc_0_12_address0 = tmp_fu_1025_p1;

assign Weight_lc_0_13_address0 = tmp_fu_1025_p1;

assign Weight_lc_0_14_address0 = tmp_fu_1025_p1;

assign Weight_lc_0_15_address0 = tmp_fu_1025_p1;

assign Weight_lc_0_1_address0 = tmp_fu_1025_p1;

assign Weight_lc_0_2_address0 = tmp_fu_1025_p1;

assign Weight_lc_0_3_address0 = tmp_fu_1025_p1;

assign Weight_lc_0_4_address0 = tmp_fu_1025_p1;

assign Weight_lc_0_5_address0 = tmp_fu_1025_p1;

assign Weight_lc_0_6_address0 = tmp_fu_1025_p1;

assign Weight_lc_0_7_address0 = tmp_fu_1025_p1;

assign Weight_lc_0_8_address0 = tmp_fu_1025_p1;

assign Weight_lc_0_9_address0 = tmp_fu_1025_p1;

assign Weight_lc_1_0_address0 = tmp_fu_1025_p1;

assign Weight_lc_1_10_address0 = tmp_fu_1025_p1;

assign Weight_lc_1_11_address0 = tmp_fu_1025_p1;

assign Weight_lc_1_12_address0 = tmp_fu_1025_p1;

assign Weight_lc_1_13_address0 = tmp_fu_1025_p1;

assign Weight_lc_1_14_address0 = tmp_fu_1025_p1;

assign Weight_lc_1_15_address0 = tmp_fu_1025_p1;

assign Weight_lc_1_1_address0 = tmp_fu_1025_p1;

assign Weight_lc_1_2_address0 = tmp_fu_1025_p1;

assign Weight_lc_1_3_address0 = tmp_fu_1025_p1;

assign Weight_lc_1_4_address0 = tmp_fu_1025_p1;

assign Weight_lc_1_5_address0 = tmp_fu_1025_p1;

assign Weight_lc_1_6_address0 = tmp_fu_1025_p1;

assign Weight_lc_1_7_address0 = tmp_fu_1025_p1;

assign Weight_lc_1_8_address0 = tmp_fu_1025_p1;

assign Weight_lc_1_9_address0 = tmp_fu_1025_p1;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage1_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage1_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage1_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage1_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage1_iter15 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_return_0 = res_0_write_assign_reg_850;

assign ap_return_1 = res_1_write_assign_reg_862;

assign exitcond1_fu_1013_p2 = ((ap_phi_mux_i_phi_fu_878_p4 == 2'd2) ? 1'b1 : 1'b0);

assign i_1_fu_1019_p2 = (ap_phi_mux_i_phi_fu_878_p4 + 2'd1);

assign res_02_res_fu_1065_p3 = ((tmp_31_reg_1580_pp0_iter15_reg[0:0] === 1'b1) ? res_0_write_assign_reg_850 : grp_fu_945_p2);

assign res_0_res16_s_fu_1072_p3 = ((tmp_31_reg_1580_pp0_iter15_reg[0:0] === 1'b1) ? grp_fu_945_p2 : res_1_write_assign_reg_862);

assign tmp_31_fu_1061_p1 = ap_phi_mux_i_phi_fu_878_p4[0:0];

assign tmp_fu_1025_p1 = ap_phi_mux_i_phi_fu_878_p4;

endmodule //gemvm_out
