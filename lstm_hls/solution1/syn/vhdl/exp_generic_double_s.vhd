-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity exp_generic_double_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_ce : IN STD_LOGIC;
    x : IN STD_LOGIC_VECTOR (63 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of exp_generic_double_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv52_0 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv12_C01 : STD_LOGIC_VECTOR (11 downto 0) := "110000000001";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv11_3FF : STD_LOGIC_VECTOR (10 downto 0) := "01111111111";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv18_20000 : STD_LOGIC_VECTOR (17 downto 0) := "100000000000000000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv84_58B90BFBE8E7BCD5E4 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000010110001011100100001011111110111110100011100111101111001101010111100100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_53 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_5C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011100";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv59_10 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000010000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv49_0 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_6A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101010";
    constant ap_const_lv13_1FFF : STD_LOGIC_VECTOR (12 downto 0) := "1111111111111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv13_1C02 : STD_LOGIC_VECTOR (12 downto 0) := "1110000000010";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_69 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101001";
    constant ap_const_lv32_68 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101000";
    constant ap_const_lv64_7FF0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0111111111110000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_7FFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "0111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv31_5C55 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000101110001010101";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter18 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter19 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal table_exp_Z1_array_s_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal table_exp_Z1_array_s_ce0 : STD_LOGIC;
    signal table_exp_Z1_array_s_q0 : STD_LOGIC_VECTOR (57 downto 0);
    signal table_f_Z3_array_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal table_f_Z3_array_V_ce0 : STD_LOGIC;
    signal table_f_Z3_array_V_q0 : STD_LOGIC_VECTOR (25 downto 0);
    signal table_f_Z3_array_V_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal table_f_Z3_array_V_ce1 : STD_LOGIC;
    signal table_f_Z3_array_V_q1 : STD_LOGIC_VECTOR (25 downto 0);
    signal table_f_Z2_array_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal table_f_Z2_array_V_ce0 : STD_LOGIC;
    signal table_f_Z2_array_V_q0 : STD_LOGIC_VECTOR (41 downto 0);
    signal p_Result_23_fu_267_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_23_reg_1185 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_23_reg_1185_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_23_reg_1185_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_23_reg_1185_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_23_reg_1185_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_23_reg_1185_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_23_reg_1185_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_23_reg_1185_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_23_reg_1185_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_23_reg_1185_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_23_reg_1185_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_23_reg_1185_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_23_reg_1185_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_23_reg_1185_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_23_reg_1185_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_23_reg_1185_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_23_reg_1185_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_23_reg_1185_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_23_reg_1185_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_reg_1192 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_i_86_fu_289_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_86_reg_1199 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i1_fu_295_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i1_reg_1204 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_315_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_21_reg_1209 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_82_reg_1214 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_82_reg_1214_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_82_reg_1214_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_82_reg_1214_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_82_reg_1214_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_82_reg_1214_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_82_reg_1214_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_82_reg_1214_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_82_reg_1214_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_82_reg_1214_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_82_reg_1214_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_82_reg_1214_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_82_reg_1214_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_82_reg_1214_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_82_reg_1214_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_82_reg_1214_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_82_reg_1214_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_82_reg_1214_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_82_reg_1214_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal not_demorgan_fu_336_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_demorgan_reg_1220 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_demorgan_reg_1220_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal not_demorgan_reg_1220_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal not_demorgan_reg_1220_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal not_demorgan_reg_1220_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal not_demorgan_reg_1220_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal not_demorgan_reg_1220_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal not_demorgan_reg_1220_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal not_demorgan_reg_1220_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal not_demorgan_reg_1220_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal not_demorgan_reg_1220_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal not_demorgan_reg_1220_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal not_demorgan_reg_1220_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal not_demorgan_reg_1220_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal not_demorgan_reg_1220_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal not_demorgan_reg_1220_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal not_demorgan_reg_1220_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_i_fu_341_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_i_reg_1226 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_i_reg_1226_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_i_reg_1226_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_i_reg_1226_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_i_reg_1226_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_i_reg_1226_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_i_reg_1226_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_i_reg_1226_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_i_reg_1226_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_i_reg_1226_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_i_reg_1226_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_i_reg_1226_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_i_reg_1226_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_i_reg_1226_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_i_reg_1226_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_i_reg_1226_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_i_reg_1226_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_i_reg_1226_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal m_frac_l_V_2_cast_fu_362_p1 : STD_LOGIC_VECTOR (70 downto 0);
    signal m_frac_l_V_2_cast_reg_1233 : STD_LOGIC_VECTOR (70 downto 0);
    signal isNeg_fu_366_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal isNeg_reg_1238 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_exp_1_cast_fu_391_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_exp_1_cast_reg_1243 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_13_fu_419_p3 : STD_LOGIC_VECTOR (70 downto 0);
    signal r_V_13_reg_1248 : STD_LOGIC_VECTOR (70 downto 0);
    signal r_V_13_reg_1248_pp0_iter2_reg : STD_LOGIC_VECTOR (70 downto 0);
    signal r_V_13_reg_1248_pp0_iter3_reg : STD_LOGIC_VECTOR (70 downto 0);
    signal r_V_13_reg_1248_pp0_iter4_reg : STD_LOGIC_VECTOR (70 downto 0);
    signal r_V_13_reg_1248_pp0_iter5_reg : STD_LOGIC_VECTOR (70 downto 0);
    signal r_V_13_reg_1248_pp0_iter6_reg : STD_LOGIC_VECTOR (70 downto 0);
    signal r_V_13_reg_1248_pp0_iter7_reg : STD_LOGIC_VECTOR (70 downto 0);
    signal m_fix_l_V_reg_1253 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_fix_hi_V_reg_1259 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_24_reg_1264 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_455_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_1269 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_1269_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_1269_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_1269_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_1269_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_1269_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_1269_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_1269_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_1269_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_1269_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_1269_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_1269_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_1269_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_1269_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_1269_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_1269_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_1269_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal r_exp_V_3_fu_527_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_3_reg_1277 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_3_reg_1277_pp0_iter3_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_3_reg_1277_pp0_iter4_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_3_reg_1277_pp0_iter5_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_3_reg_1277_pp0_iter6_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_3_reg_1277_pp0_iter7_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_3_reg_1277_pp0_iter8_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_3_reg_1277_pp0_iter9_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_3_reg_1277_pp0_iter10_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_3_reg_1277_pp0_iter11_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_3_reg_1277_pp0_iter12_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_3_reg_1277_pp0_iter13_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_3_reg_1277_pp0_iter14_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_3_reg_1277_pp0_iter15_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_3_reg_1277_pp0_iter16_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_3_reg_1277_pp0_iter17_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_24_fu_550_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_reg_1284 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_reg_1284_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_reg_1284_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_reg_1284_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_reg_1284_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_reg_1284_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_reg_1284_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_reg_1284_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_reg_1284_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_reg_1284_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_reg_1284_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_reg_1284_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_reg_1284_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_reg_1284_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_reg_1284_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_reg_1284_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_reg_1294 : STD_LOGIC_VECTOR (70 downto 0);
    signal m_diff_hi_V_reg_1299 : STD_LOGIC_VECTOR (7 downto 0);
    signal m_diff_hi_V_reg_1299_pp0_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal m_diff_hi_V_reg_1299_pp0_iter10_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal m_diff_hi_V_reg_1299_pp0_iter11_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal m_diff_hi_V_reg_1299_pp0_iter12_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal m_diff_hi_V_reg_1299_pp0_iter13_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_V_reg_1304 : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_V_reg_1304_pp0_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_V_reg_1304_pp0_iter10_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_V_reg_1304_pp0_iter11_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_V_reg_1304_pp0_iter12_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_V_reg_1304_pp0_iter13_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_V_reg_1304_pp0_iter14_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z3_V_fu_614_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal Z3_V_reg_1311 : STD_LOGIC_VECTOR (7 downto 0);
    signal Z3_V_reg_1311_pp0_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z4_V_fu_624_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal Z4_V_reg_1316 : STD_LOGIC_VECTOR (34 downto 0);
    signal ret_V_6_fu_665_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal ret_V_6_reg_1331 : STD_LOGIC_VECTOR (35 downto 0);
    signal ret_V_6_reg_1331_pp0_iter10_reg : STD_LOGIC_VECTOR (35 downto 0);
    signal ret_V_6_reg_1331_pp0_iter11_reg : STD_LOGIC_VECTOR (35 downto 0);
    signal p_Val2_19_reg_1337 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_46_i_fu_671_p4 : STD_LOGIC_VECTOR (42 downto 0);
    signal tmp_46_i_reg_1342 : STD_LOGIC_VECTOR (42 downto 0);
    signal tmp_46_i_reg_1342_pp0_iter11_reg : STD_LOGIC_VECTOR (42 downto 0);
    signal tmp_29_reg_1357 : STD_LOGIC_VECTOR (19 downto 0);
    signal exp_Z2P_m_1_V_fu_721_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal exp_Z2P_m_1_V_reg_1367 : STD_LOGIC_VECTOR (43 downto 0);
    signal exp_Z2P_m_1_V_reg_1367_pp0_iter13_reg : STD_LOGIC_VECTOR (43 downto 0);
    signal exp_Z2P_m_1_V_reg_1367_pp0_iter14_reg : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_38_reg_1373 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_38_reg_1373_pp0_iter13_reg : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_38_reg_1373_pp0_iter14_reg : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_39_reg_1394 : STD_LOGIC_VECTOR (35 downto 0);
    signal exp_Z1_V_reg_1399 : STD_LOGIC_VECTOR (57 downto 0);
    signal exp_Z1_V_reg_1399_pp0_iter16_reg : STD_LOGIC_VECTOR (57 downto 0);
    signal exp_Z1P_m_1_V_reg_1404 : STD_LOGIC_VECTOR (49 downto 0);
    signal exp_Z1_hi_V_reg_1409 : STD_LOGIC_VECTOR (49 downto 0);
    signal ret_V_8_fu_839_p2 : STD_LOGIC_VECTOR (58 downto 0);
    signal ret_V_8_reg_1424 : STD_LOGIC_VECTOR (58 downto 0);
    signal grp_fu_830_p2 : STD_LOGIC_VECTOR (99 downto 0);
    signal r_V_18_reg_1429 : STD_LOGIC_VECTOR (99 downto 0);
    signal tmp_79_fu_845_p1 : STD_LOGIC_VECTOR (57 downto 0);
    signal tmp_79_reg_1435 : STD_LOGIC_VECTOR (57 downto 0);
    signal sel_tmp1_fu_981_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_reg_1440 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp9_fu_1013_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp9_reg_1446 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp56_fu_1047_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp56_reg_1452 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_fu_1070_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_33_reg_1457 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal tmp_29_i_fu_638_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_30_i_fu_643_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_36_i_fu_702_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_fu_758_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_s_fu_263_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_V_3_fu_285_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Result_s_fu_301_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal e_frac_V_fu_309_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_i_fu_331_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i53_cast_fu_346_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal m_frac_l_V_fu_355_p3 : STD_LOGIC_VECTOR (60 downto 0);
    signal m_exp_fu_349_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_s_fu_374_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_45_cast_fu_379_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal m_exp_2_fu_383_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_46_cast_fu_399_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal r_V_fu_403_p2 : STD_LOGIC_VECTOR (60 downto 0);
    signal tmp_13_fu_395_p1 : STD_LOGIC_VECTOR (70 downto 0);
    signal r_V_cast_fu_409_p1 : STD_LOGIC_VECTOR (70 downto 0);
    signal r_V_1_fu_413_p2 : STD_LOGIC_VECTOR (70 downto 0);
    signal tmp_14_fu_461_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal rhs_V_fu_477_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_1174_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_77_fu_504_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_15_fu_488_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_16_fu_507_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_3_fu_513_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Result_16_fu_497_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_s_fu_519_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_3_fu_464_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_4_fu_469_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_40_fu_535_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_23_fu_542_p3 : STD_LOGIC_VECTOR (70 downto 0);
    signal grp_fu_558_p0 : STD_LOGIC_VECTOR (71 downto 0);
    signal grp_fu_558_p2 : STD_LOGIC_VECTOR (83 downto 0);
    signal rhs_V_1_fu_577_p3 : STD_LOGIC_VECTOR (71 downto 0);
    signal lhs_V_fu_574_p1 : STD_LOGIC_VECTOR (72 downto 0);
    signal rhs_V_4_cast_fu_584_p1 : STD_LOGIC_VECTOR (72 downto 0);
    signal ret_V_5_fu_588_p2 : STD_LOGIC_VECTOR (72 downto 0);
    signal Z4_ind_V_fu_628_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal f_Z4_V_fu_648_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal rhs_V_2_fu_661_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal lhs_V_1_fu_658_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_686_p0 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_686_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal grp_fu_686_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_34_i_cast_fu_709_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_fu_712_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal ret_V_7_fu_706_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_cast_fu_717_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_37_i_fu_737_p4 : STD_LOGIC_VECTOR (48 downto 0);
    signal grp_fu_752_p0 : STD_LOGIC_VECTOR (43 downto 0);
    signal grp_fu_752_p1 : STD_LOGIC_VECTOR (48 downto 0);
    signal grp_fu_752_p2 : STD_LOGIC_VECTOR (92 downto 0);
    signal lhs_V_2_fu_772_p5 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_40_i_cast_cast_fu_786_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp51_fu_789_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal lhs_V_2_i_cast_fu_782_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp51_cast_fu_794_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal exp_Z1P_m_1_l_V_fu_798_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal grp_fu_830_p0 : STD_LOGIC_VECTOR (49 downto 0);
    signal grp_fu_830_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal lhs_V_3_fu_836_p1 : STD_LOGIC_VECTOR (58 downto 0);
    signal rhs_V_5_cast_fu_861_p1 : STD_LOGIC_VECTOR (107 downto 0);
    signal lhs_V_4_fu_854_p3 : STD_LOGIC_VECTOR (107 downto 0);
    signal tmp_20_fu_871_p1 : STD_LOGIC_VECTOR (106 downto 0);
    signal tmp_19_fu_864_p3 : STD_LOGIC_VECTOR (106 downto 0);
    signal ret_V_10_cast_fu_880_p2 : STD_LOGIC_VECTOR (106 downto 0);
    signal tmp_80_fu_886_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_exp_V_fu_894_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_2_fu_899_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_81_fu_906_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_fu_916_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_9_fu_874_p2 : STD_LOGIC_VECTOR (107 downto 0);
    signal tmp_27_fu_933_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_28_fu_943_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_83_fu_961_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal out_exp_V_fu_965_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_V_4_fu_953_p3 : STD_LOGIC_VECTOR (51 downto 0);
    signal not_Val2_i_fu_849_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp52_fu_986_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_922_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_fu_1002_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp5_fu_997_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_1007_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp11_fu_1019_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp44_demorgan_fu_1030_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp12_fu_1025_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp13_fu_1035_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_fu_927_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp14_fu_1041_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_25_fu_971_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal sel_tmp2_fu_992_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_fu_1065_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_fu_1057_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_30_fu_1053_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_is_ninf_fu_1078_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_i_not_fu_1092_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_fu_1102_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp53_fu_1108_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_1097_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_1082_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp54_fu_1119_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_fu_1113_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp10_fu_1124_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_1087_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_fu_1142_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_fu_1134_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp55_fu_1130_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp15_fu_1155_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_fu_1160_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_fu_1148_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1174_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_558_ce : STD_LOGIC;
    signal grp_fu_686_ce : STD_LOGIC;
    signal grp_fu_752_ce : STD_LOGIC;
    signal grp_fu_830_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to18 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_686_p00 : STD_LOGIC_VECTOR (78 downto 0);
    signal grp_fu_686_p10 : STD_LOGIC_VECTOR (78 downto 0);
    signal grp_fu_752_p00 : STD_LOGIC_VECTOR (92 downto 0);
    signal grp_fu_752_p10 : STD_LOGIC_VECTOR (92 downto 0);
    signal grp_fu_830_p00 : STD_LOGIC_VECTOR (99 downto 0);
    signal grp_fu_830_p10 : STD_LOGIC_VECTOR (99 downto 0);

    component LSTM_Top_mul_72nshbi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (71 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (83 downto 0) );
    end component;


    component LSTM_Top_mul_36nsibs IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (35 downto 0);
        din1 : IN STD_LOGIC_VECTOR (42 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (78 downto 0) );
    end component;


    component LSTM_Top_mul_44nsjbC IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (43 downto 0);
        din1 : IN STD_LOGIC_VECTOR (48 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (92 downto 0) );
    end component;


    component LSTM_Top_mul_50nskbM IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (49 downto 0);
        din1 : IN STD_LOGIC_VECTOR (49 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (99 downto 0) );
    end component;


    component LSTM_Top_mac_mulalbW IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (18 downto 0);
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component exp_generic_doubleOg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (57 downto 0) );
    end component;


    component exp_generic_doublfYi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (25 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component exp_generic_doublg8j IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (41 downto 0) );
    end component;



begin
    table_exp_Z1_array_s_U : component exp_generic_doubleOg
    generic map (
        DataWidth => 58,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => table_exp_Z1_array_s_address0,
        ce0 => table_exp_Z1_array_s_ce0,
        q0 => table_exp_Z1_array_s_q0);

    table_f_Z3_array_V_U : component exp_generic_doublfYi
    generic map (
        DataWidth => 26,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => table_f_Z3_array_V_address0,
        ce0 => table_f_Z3_array_V_ce0,
        q0 => table_f_Z3_array_V_q0,
        address1 => table_f_Z3_array_V_address1,
        ce1 => table_f_Z3_array_V_ce1,
        q1 => table_f_Z3_array_V_q1);

    table_f_Z2_array_V_U : component exp_generic_doublg8j
    generic map (
        DataWidth => 42,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => table_f_Z2_array_V_address0,
        ce0 => table_f_Z2_array_V_ce0,
        q0 => table_f_Z2_array_V_q0);

    LSTM_Top_mul_72nshbi_U65 : component LSTM_Top_mul_72nshbi
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 72,
        din1_WIDTH => 13,
        dout_WIDTH => 84)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_558_p0,
        din1 => r_exp_V_3_reg_1277,
        ce => grp_fu_558_ce,
        dout => grp_fu_558_p2);

    LSTM_Top_mul_36nsibs_U66 : component LSTM_Top_mul_36nsibs
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 36,
        din1_WIDTH => 43,
        dout_WIDTH => 79)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_686_p0,
        din1 => grp_fu_686_p1,
        ce => grp_fu_686_ce,
        dout => grp_fu_686_p2);

    LSTM_Top_mul_44nsjbC_U67 : component LSTM_Top_mul_44nsjbC
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 44,
        din1_WIDTH => 49,
        dout_WIDTH => 93)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_752_p0,
        din1 => grp_fu_752_p1,
        ce => grp_fu_752_ce,
        dout => grp_fu_752_p2);

    LSTM_Top_mul_50nskbM_U68 : component LSTM_Top_mul_50nskbM
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 50,
        din1_WIDTH => 50,
        dout_WIDTH => 100)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_830_p0,
        din1 => grp_fu_830_p1,
        ce => grp_fu_830_ce,
        dout => grp_fu_830_p2);

    LSTM_Top_mac_mulalbW_U69 : component LSTM_Top_mac_mulalbW
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 19,
        dout_WIDTH => 31)
    port map (
        din0 => grp_fu_1174_p0,
        din1 => m_fix_hi_V_reg_1259,
        din2 => rhs_V_fu_477_p3,
        dout => grp_fu_1174_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                Z2_V_reg_1304 <= ret_V_5_fu_588_p2(50 downto 43);
                Z2_V_reg_1304_pp0_iter10_reg <= Z2_V_reg_1304_pp0_iter9_reg;
                Z2_V_reg_1304_pp0_iter11_reg <= Z2_V_reg_1304_pp0_iter10_reg;
                Z2_V_reg_1304_pp0_iter12_reg <= Z2_V_reg_1304_pp0_iter11_reg;
                Z2_V_reg_1304_pp0_iter13_reg <= Z2_V_reg_1304_pp0_iter12_reg;
                Z2_V_reg_1304_pp0_iter14_reg <= Z2_V_reg_1304_pp0_iter13_reg;
                Z2_V_reg_1304_pp0_iter9_reg <= Z2_V_reg_1304;
                Z3_V_reg_1311 <= ret_V_5_fu_588_p2(42 downto 35);
                Z3_V_reg_1311_pp0_iter9_reg <= Z3_V_reg_1311;
                Z4_V_reg_1316 <= Z4_V_fu_624_p1;
                exp_Z1P_m_1_V_reg_1404 <= exp_Z1P_m_1_l_V_fu_798_p2(51 downto 2);
                exp_Z1_V_reg_1399 <= table_exp_Z1_array_s_q0;
                exp_Z1_V_reg_1399_pp0_iter16_reg <= exp_Z1_V_reg_1399;
                exp_Z1_hi_V_reg_1409 <= table_exp_Z1_array_s_q0(57 downto 8);
                exp_Z2P_m_1_V_reg_1367 <= exp_Z2P_m_1_V_fu_721_p2;
                exp_Z2P_m_1_V_reg_1367_pp0_iter13_reg <= exp_Z2P_m_1_V_reg_1367;
                exp_Z2P_m_1_V_reg_1367_pp0_iter14_reg <= exp_Z2P_m_1_V_reg_1367_pp0_iter13_reg;
                m_diff_hi_V_reg_1299 <= ret_V_5_fu_588_p2(58 downto 51);
                m_diff_hi_V_reg_1299_pp0_iter10_reg <= m_diff_hi_V_reg_1299_pp0_iter9_reg;
                m_diff_hi_V_reg_1299_pp0_iter11_reg <= m_diff_hi_V_reg_1299_pp0_iter10_reg;
                m_diff_hi_V_reg_1299_pp0_iter12_reg <= m_diff_hi_V_reg_1299_pp0_iter11_reg;
                m_diff_hi_V_reg_1299_pp0_iter13_reg <= m_diff_hi_V_reg_1299_pp0_iter12_reg;
                m_diff_hi_V_reg_1299_pp0_iter9_reg <= m_diff_hi_V_reg_1299;
                not_demorgan_reg_1220_pp0_iter10_reg <= not_demorgan_reg_1220_pp0_iter9_reg;
                not_demorgan_reg_1220_pp0_iter11_reg <= not_demorgan_reg_1220_pp0_iter10_reg;
                not_demorgan_reg_1220_pp0_iter12_reg <= not_demorgan_reg_1220_pp0_iter11_reg;
                not_demorgan_reg_1220_pp0_iter13_reg <= not_demorgan_reg_1220_pp0_iter12_reg;
                not_demorgan_reg_1220_pp0_iter14_reg <= not_demorgan_reg_1220_pp0_iter13_reg;
                not_demorgan_reg_1220_pp0_iter15_reg <= not_demorgan_reg_1220_pp0_iter14_reg;
                not_demorgan_reg_1220_pp0_iter16_reg <= not_demorgan_reg_1220_pp0_iter15_reg;
                not_demorgan_reg_1220_pp0_iter17_reg <= not_demorgan_reg_1220_pp0_iter16_reg;
                not_demorgan_reg_1220_pp0_iter2_reg <= not_demorgan_reg_1220;
                not_demorgan_reg_1220_pp0_iter3_reg <= not_demorgan_reg_1220_pp0_iter2_reg;
                not_demorgan_reg_1220_pp0_iter4_reg <= not_demorgan_reg_1220_pp0_iter3_reg;
                not_demorgan_reg_1220_pp0_iter5_reg <= not_demorgan_reg_1220_pp0_iter4_reg;
                not_demorgan_reg_1220_pp0_iter6_reg <= not_demorgan_reg_1220_pp0_iter5_reg;
                not_demorgan_reg_1220_pp0_iter7_reg <= not_demorgan_reg_1220_pp0_iter6_reg;
                not_demorgan_reg_1220_pp0_iter8_reg <= not_demorgan_reg_1220_pp0_iter7_reg;
                not_demorgan_reg_1220_pp0_iter9_reg <= not_demorgan_reg_1220_pp0_iter8_reg;
                p_Result_23_reg_1185_pp0_iter10_reg <= p_Result_23_reg_1185_pp0_iter9_reg;
                p_Result_23_reg_1185_pp0_iter11_reg <= p_Result_23_reg_1185_pp0_iter10_reg;
                p_Result_23_reg_1185_pp0_iter12_reg <= p_Result_23_reg_1185_pp0_iter11_reg;
                p_Result_23_reg_1185_pp0_iter13_reg <= p_Result_23_reg_1185_pp0_iter12_reg;
                p_Result_23_reg_1185_pp0_iter14_reg <= p_Result_23_reg_1185_pp0_iter13_reg;
                p_Result_23_reg_1185_pp0_iter15_reg <= p_Result_23_reg_1185_pp0_iter14_reg;
                p_Result_23_reg_1185_pp0_iter16_reg <= p_Result_23_reg_1185_pp0_iter15_reg;
                p_Result_23_reg_1185_pp0_iter17_reg <= p_Result_23_reg_1185_pp0_iter16_reg;
                p_Result_23_reg_1185_pp0_iter18_reg <= p_Result_23_reg_1185_pp0_iter17_reg;
                p_Result_23_reg_1185_pp0_iter2_reg <= p_Result_23_reg_1185_pp0_iter1_reg;
                p_Result_23_reg_1185_pp0_iter3_reg <= p_Result_23_reg_1185_pp0_iter2_reg;
                p_Result_23_reg_1185_pp0_iter4_reg <= p_Result_23_reg_1185_pp0_iter3_reg;
                p_Result_23_reg_1185_pp0_iter5_reg <= p_Result_23_reg_1185_pp0_iter4_reg;
                p_Result_23_reg_1185_pp0_iter6_reg <= p_Result_23_reg_1185_pp0_iter5_reg;
                p_Result_23_reg_1185_pp0_iter7_reg <= p_Result_23_reg_1185_pp0_iter6_reg;
                p_Result_23_reg_1185_pp0_iter8_reg <= p_Result_23_reg_1185_pp0_iter7_reg;
                p_Result_23_reg_1185_pp0_iter9_reg <= p_Result_23_reg_1185_pp0_iter8_reg;
                r_V_13_reg_1248_pp0_iter2_reg <= r_V_13_reg_1248;
                r_V_13_reg_1248_pp0_iter3_reg <= r_V_13_reg_1248_pp0_iter2_reg;
                r_V_13_reg_1248_pp0_iter4_reg <= r_V_13_reg_1248_pp0_iter3_reg;
                r_V_13_reg_1248_pp0_iter5_reg <= r_V_13_reg_1248_pp0_iter4_reg;
                r_V_13_reg_1248_pp0_iter6_reg <= r_V_13_reg_1248_pp0_iter5_reg;
                r_V_13_reg_1248_pp0_iter7_reg <= r_V_13_reg_1248_pp0_iter6_reg;
                r_V_18_reg_1429 <= grp_fu_830_p2;
                r_exp_V_3_reg_1277 <= r_exp_V_3_fu_527_p3;
                r_exp_V_3_reg_1277_pp0_iter10_reg <= r_exp_V_3_reg_1277_pp0_iter9_reg;
                r_exp_V_3_reg_1277_pp0_iter11_reg <= r_exp_V_3_reg_1277_pp0_iter10_reg;
                r_exp_V_3_reg_1277_pp0_iter12_reg <= r_exp_V_3_reg_1277_pp0_iter11_reg;
                r_exp_V_3_reg_1277_pp0_iter13_reg <= r_exp_V_3_reg_1277_pp0_iter12_reg;
                r_exp_V_3_reg_1277_pp0_iter14_reg <= r_exp_V_3_reg_1277_pp0_iter13_reg;
                r_exp_V_3_reg_1277_pp0_iter15_reg <= r_exp_V_3_reg_1277_pp0_iter14_reg;
                r_exp_V_3_reg_1277_pp0_iter16_reg <= r_exp_V_3_reg_1277_pp0_iter15_reg;
                r_exp_V_3_reg_1277_pp0_iter17_reg <= r_exp_V_3_reg_1277_pp0_iter16_reg;
                r_exp_V_3_reg_1277_pp0_iter3_reg <= r_exp_V_3_reg_1277;
                r_exp_V_3_reg_1277_pp0_iter4_reg <= r_exp_V_3_reg_1277_pp0_iter3_reg;
                r_exp_V_3_reg_1277_pp0_iter5_reg <= r_exp_V_3_reg_1277_pp0_iter4_reg;
                r_exp_V_3_reg_1277_pp0_iter6_reg <= r_exp_V_3_reg_1277_pp0_iter5_reg;
                r_exp_V_3_reg_1277_pp0_iter7_reg <= r_exp_V_3_reg_1277_pp0_iter6_reg;
                r_exp_V_3_reg_1277_pp0_iter8_reg <= r_exp_V_3_reg_1277_pp0_iter7_reg;
                r_exp_V_3_reg_1277_pp0_iter9_reg <= r_exp_V_3_reg_1277_pp0_iter8_reg;
                ret_V_6_reg_1331 <= ret_V_6_fu_665_p2;
                ret_V_6_reg_1331_pp0_iter10_reg <= ret_V_6_reg_1331;
                ret_V_6_reg_1331_pp0_iter11_reg <= ret_V_6_reg_1331_pp0_iter10_reg;
                ret_V_8_reg_1424 <= ret_V_8_fu_839_p2;
                sel_tmp1_reg_1440 <= sel_tmp1_fu_981_p2;
                sel_tmp9_reg_1446 <= sel_tmp9_fu_1013_p2;
                tmp56_reg_1452 <= tmp56_fu_1047_p2;
                tmp_13_i_reg_1226_pp0_iter10_reg <= tmp_13_i_reg_1226_pp0_iter9_reg;
                tmp_13_i_reg_1226_pp0_iter11_reg <= tmp_13_i_reg_1226_pp0_iter10_reg;
                tmp_13_i_reg_1226_pp0_iter12_reg <= tmp_13_i_reg_1226_pp0_iter11_reg;
                tmp_13_i_reg_1226_pp0_iter13_reg <= tmp_13_i_reg_1226_pp0_iter12_reg;
                tmp_13_i_reg_1226_pp0_iter14_reg <= tmp_13_i_reg_1226_pp0_iter13_reg;
                tmp_13_i_reg_1226_pp0_iter15_reg <= tmp_13_i_reg_1226_pp0_iter14_reg;
                tmp_13_i_reg_1226_pp0_iter16_reg <= tmp_13_i_reg_1226_pp0_iter15_reg;
                tmp_13_i_reg_1226_pp0_iter17_reg <= tmp_13_i_reg_1226_pp0_iter16_reg;
                tmp_13_i_reg_1226_pp0_iter18_reg <= tmp_13_i_reg_1226_pp0_iter17_reg;
                tmp_13_i_reg_1226_pp0_iter2_reg <= tmp_13_i_reg_1226;
                tmp_13_i_reg_1226_pp0_iter3_reg <= tmp_13_i_reg_1226_pp0_iter2_reg;
                tmp_13_i_reg_1226_pp0_iter4_reg <= tmp_13_i_reg_1226_pp0_iter3_reg;
                tmp_13_i_reg_1226_pp0_iter5_reg <= tmp_13_i_reg_1226_pp0_iter4_reg;
                tmp_13_i_reg_1226_pp0_iter6_reg <= tmp_13_i_reg_1226_pp0_iter5_reg;
                tmp_13_i_reg_1226_pp0_iter7_reg <= tmp_13_i_reg_1226_pp0_iter6_reg;
                tmp_13_i_reg_1226_pp0_iter8_reg <= tmp_13_i_reg_1226_pp0_iter7_reg;
                tmp_13_i_reg_1226_pp0_iter9_reg <= tmp_13_i_reg_1226_pp0_iter8_reg;
                tmp_22_reg_1269_pp0_iter10_reg <= tmp_22_reg_1269_pp0_iter9_reg;
                tmp_22_reg_1269_pp0_iter11_reg <= tmp_22_reg_1269_pp0_iter10_reg;
                tmp_22_reg_1269_pp0_iter12_reg <= tmp_22_reg_1269_pp0_iter11_reg;
                tmp_22_reg_1269_pp0_iter13_reg <= tmp_22_reg_1269_pp0_iter12_reg;
                tmp_22_reg_1269_pp0_iter14_reg <= tmp_22_reg_1269_pp0_iter13_reg;
                tmp_22_reg_1269_pp0_iter15_reg <= tmp_22_reg_1269_pp0_iter14_reg;
                tmp_22_reg_1269_pp0_iter16_reg <= tmp_22_reg_1269_pp0_iter15_reg;
                tmp_22_reg_1269_pp0_iter17_reg <= tmp_22_reg_1269_pp0_iter16_reg;
                tmp_22_reg_1269_pp0_iter2_reg <= tmp_22_reg_1269;
                tmp_22_reg_1269_pp0_iter3_reg <= tmp_22_reg_1269_pp0_iter2_reg;
                tmp_22_reg_1269_pp0_iter4_reg <= tmp_22_reg_1269_pp0_iter3_reg;
                tmp_22_reg_1269_pp0_iter5_reg <= tmp_22_reg_1269_pp0_iter4_reg;
                tmp_22_reg_1269_pp0_iter6_reg <= tmp_22_reg_1269_pp0_iter5_reg;
                tmp_22_reg_1269_pp0_iter7_reg <= tmp_22_reg_1269_pp0_iter6_reg;
                tmp_22_reg_1269_pp0_iter8_reg <= tmp_22_reg_1269_pp0_iter7_reg;
                tmp_22_reg_1269_pp0_iter9_reg <= tmp_22_reg_1269_pp0_iter8_reg;
                tmp_24_reg_1284 <= tmp_24_fu_550_p2;
                tmp_24_reg_1284_pp0_iter10_reg <= tmp_24_reg_1284_pp0_iter9_reg;
                tmp_24_reg_1284_pp0_iter11_reg <= tmp_24_reg_1284_pp0_iter10_reg;
                tmp_24_reg_1284_pp0_iter12_reg <= tmp_24_reg_1284_pp0_iter11_reg;
                tmp_24_reg_1284_pp0_iter13_reg <= tmp_24_reg_1284_pp0_iter12_reg;
                tmp_24_reg_1284_pp0_iter14_reg <= tmp_24_reg_1284_pp0_iter13_reg;
                tmp_24_reg_1284_pp0_iter15_reg <= tmp_24_reg_1284_pp0_iter14_reg;
                tmp_24_reg_1284_pp0_iter16_reg <= tmp_24_reg_1284_pp0_iter15_reg;
                tmp_24_reg_1284_pp0_iter17_reg <= tmp_24_reg_1284_pp0_iter16_reg;
                tmp_24_reg_1284_pp0_iter3_reg <= tmp_24_reg_1284;
                tmp_24_reg_1284_pp0_iter4_reg <= tmp_24_reg_1284_pp0_iter3_reg;
                tmp_24_reg_1284_pp0_iter5_reg <= tmp_24_reg_1284_pp0_iter4_reg;
                tmp_24_reg_1284_pp0_iter6_reg <= tmp_24_reg_1284_pp0_iter5_reg;
                tmp_24_reg_1284_pp0_iter7_reg <= tmp_24_reg_1284_pp0_iter6_reg;
                tmp_24_reg_1284_pp0_iter8_reg <= tmp_24_reg_1284_pp0_iter7_reg;
                tmp_24_reg_1284_pp0_iter9_reg <= tmp_24_reg_1284_pp0_iter8_reg;
                tmp_25_reg_1294 <= grp_fu_558_p2(83 downto 13);
                tmp_29_reg_1357 <= grp_fu_686_p2(78 downto 59);
                    tmp_33_reg_1457(62 downto 0) <= tmp_33_fu_1070_p3(62 downto 0);
                tmp_38_reg_1373 <= table_f_Z2_array_V_q0(41 downto 2);
                tmp_38_reg_1373_pp0_iter13_reg <= tmp_38_reg_1373;
                tmp_38_reg_1373_pp0_iter14_reg <= tmp_38_reg_1373_pp0_iter13_reg;
                tmp_39_reg_1394 <= grp_fu_752_p2(92 downto 57);
                    tmp_46_i_reg_1342(25 downto 0) <= tmp_46_i_fu_671_p4(25 downto 0);    tmp_46_i_reg_1342(42 downto 35) <= tmp_46_i_fu_671_p4(42 downto 35);
                    tmp_46_i_reg_1342_pp0_iter11_reg(25 downto 0) <= tmp_46_i_reg_1342(25 downto 0);    tmp_46_i_reg_1342_pp0_iter11_reg(42 downto 35) <= tmp_46_i_reg_1342(42 downto 35);
                tmp_79_reg_1435 <= tmp_79_fu_845_p1;
                tmp_82_reg_1214_pp0_iter10_reg <= tmp_82_reg_1214_pp0_iter9_reg;
                tmp_82_reg_1214_pp0_iter11_reg <= tmp_82_reg_1214_pp0_iter10_reg;
                tmp_82_reg_1214_pp0_iter12_reg <= tmp_82_reg_1214_pp0_iter11_reg;
                tmp_82_reg_1214_pp0_iter13_reg <= tmp_82_reg_1214_pp0_iter12_reg;
                tmp_82_reg_1214_pp0_iter14_reg <= tmp_82_reg_1214_pp0_iter13_reg;
                tmp_82_reg_1214_pp0_iter15_reg <= tmp_82_reg_1214_pp0_iter14_reg;
                tmp_82_reg_1214_pp0_iter16_reg <= tmp_82_reg_1214_pp0_iter15_reg;
                tmp_82_reg_1214_pp0_iter17_reg <= tmp_82_reg_1214_pp0_iter16_reg;
                tmp_82_reg_1214_pp0_iter18_reg <= tmp_82_reg_1214_pp0_iter17_reg;
                tmp_82_reg_1214_pp0_iter2_reg <= tmp_82_reg_1214_pp0_iter1_reg;
                tmp_82_reg_1214_pp0_iter3_reg <= tmp_82_reg_1214_pp0_iter2_reg;
                tmp_82_reg_1214_pp0_iter4_reg <= tmp_82_reg_1214_pp0_iter3_reg;
                tmp_82_reg_1214_pp0_iter5_reg <= tmp_82_reg_1214_pp0_iter4_reg;
                tmp_82_reg_1214_pp0_iter6_reg <= tmp_82_reg_1214_pp0_iter5_reg;
                tmp_82_reg_1214_pp0_iter7_reg <= tmp_82_reg_1214_pp0_iter6_reg;
                tmp_82_reg_1214_pp0_iter8_reg <= tmp_82_reg_1214_pp0_iter7_reg;
                tmp_82_reg_1214_pp0_iter9_reg <= tmp_82_reg_1214_pp0_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                isNeg_reg_1238 <= m_exp_fu_349_p2(11 downto 11);
                m_exp_1_cast_reg_1243 <= m_exp_1_cast_fu_391_p1;
                m_fix_hi_V_reg_1259 <= r_V_13_fu_419_p3(70 downto 55);
                m_fix_l_V_reg_1253 <= r_V_13_fu_419_p3(70 downto 7);
                    m_frac_l_V_2_cast_reg_1233(70 downto 7) <= m_frac_l_V_2_cast_fu_362_p1(70 downto 7);
                not_demorgan_reg_1220 <= not_demorgan_fu_336_p2;
                p_Result_23_reg_1185 <= p_Val2_s_fu_263_p1(63 downto 63);
                p_Result_23_reg_1185_pp0_iter1_reg <= p_Result_23_reg_1185;
                p_Result_24_reg_1264 <= r_V_13_fu_419_p3(70 downto 70);
                r_V_13_reg_1248 <= r_V_13_fu_419_p3;
                tmp_13_i_reg_1226 <= tmp_13_i_fu_341_p2;
                tmp_21_reg_1209 <= tmp_21_fu_315_p3;
                tmp_22_reg_1269 <= tmp_22_fu_455_p2;
                tmp_82_reg_1214 <= tmp_21_fu_315_p3(53 downto 53);
                tmp_82_reg_1214_pp0_iter1_reg <= tmp_82_reg_1214;
                tmp_V_reg_1192 <= p_Val2_s_fu_263_p1(62 downto 52);
                tmp_i1_reg_1204 <= tmp_i1_fu_295_p2;
                tmp_i_86_reg_1199 <= tmp_i_86_fu_289_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_19_reg_1337 <= table_f_Z3_array_V_q1;
            end if;
        end if;
    end process;
    m_frac_l_V_2_cast_reg_1233(6 downto 0) <= "0000000";
    tmp_46_i_reg_1342(34 downto 26) <= "000000000";
    tmp_46_i_reg_1342_pp0_iter11_reg(34 downto 26) <= "000000000";
    tmp_33_reg_1457(63) <= '0';

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    Z3_V_fu_614_p4 <= ret_V_5_fu_588_p2(42 downto 35);
    Z4_V_fu_624_p1 <= ret_V_5_fu_588_p2(35 - 1 downto 0);
    Z4_ind_V_fu_628_p4 <= ret_V_5_fu_588_p2(34 downto 27);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_ce)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_const_logic_0 = ap_ce) or ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)));
    end process;

        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start = ap_const_logic_0);
    end process;

        ap_block_state20_pp0_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter19, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19)
    begin
        if (((ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to18_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to18 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to18 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to18)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to18 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= 
        ap_const_lv64_0 when (tmp_37_fu_1160_p2(0) = '1') else 
        tmp_36_fu_1148_p3;
    e_frac_V_fu_309_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_s_fu_301_p3));
    exp_Z1P_m_1_l_V_fu_798_p2 <= std_logic_vector(unsigned(lhs_V_2_i_cast_fu_782_p1) + unsigned(tmp51_cast_fu_794_p1));
    exp_Z2P_m_1_V_fu_721_p2 <= std_logic_vector(unsigned(ret_V_7_fu_706_p1) + unsigned(tmp_cast_fu_717_p1));
    f_Z4_V_fu_648_p4 <= table_f_Z3_array_V_q0(25 downto 16);
    grp_fu_1174_p0 <= ap_const_lv31_5C55(16 - 1 downto 0);

    grp_fu_558_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_558_ce <= ap_const_logic_1;
        else 
            grp_fu_558_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_558_p0 <= ap_const_lv84_58B90BFBE8E7BCD5E4(72 - 1 downto 0);

    grp_fu_686_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_686_ce <= ap_const_logic_1;
        else 
            grp_fu_686_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_686_p0 <= grp_fu_686_p00(36 - 1 downto 0);
    grp_fu_686_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_6_reg_1331),79));
    grp_fu_686_p1 <= grp_fu_686_p10(43 - 1 downto 0);
    grp_fu_686_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_46_i_fu_671_p4),79));

    grp_fu_752_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_752_ce <= ap_const_logic_1;
        else 
            grp_fu_752_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_752_p0 <= grp_fu_752_p00(44 - 1 downto 0);
    grp_fu_752_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z2P_m_1_V_reg_1367),93));
    grp_fu_752_p1 <= grp_fu_752_p10(49 - 1 downto 0);
    grp_fu_752_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_37_i_fu_737_p4),93));

    grp_fu_830_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_830_ce <= ap_const_logic_1;
        else 
            grp_fu_830_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_830_p0 <= grp_fu_830_p00(50 - 1 downto 0);
    grp_fu_830_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z1P_m_1_V_reg_1404),100));
    grp_fu_830_p1 <= grp_fu_830_p10(50 - 1 downto 0);
    grp_fu_830_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z1_hi_V_reg_1409),100));
    icmp_fu_916_p2 <= "1" when (signed(tmp_81_fu_906_p4) > signed(ap_const_lv3_0)) else "0";
    isNeg_fu_366_p3 <= m_exp_fu_349_p2(11 downto 11);
    lhs_V_1_fu_658_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Z4_V_reg_1316),36));
    lhs_V_2_fu_772_p5 <= (((Z2_V_reg_1304_pp0_iter14_reg & ap_const_lv1_0) & tmp_38_reg_1373_pp0_iter14_reg) & ap_const_lv2_0);
    lhs_V_2_i_cast_fu_782_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lhs_V_2_fu_772_p5),52));
    lhs_V_3_fu_836_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z1_V_reg_1399_pp0_iter16_reg),59));
    lhs_V_4_fu_854_p3 <= (ret_V_8_reg_1424 & ap_const_lv49_0);
        lhs_V_fu_574_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_13_reg_1248_pp0_iter7_reg),73));

        m_exp_1_cast_fu_391_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(m_exp_2_fu_383_p3),32));

    m_exp_2_fu_383_p3 <= 
        tmp_45_cast_fu_379_p1 when (isNeg_fu_366_p3(0) = '1') else 
        m_exp_fu_349_p2;
    m_exp_fu_349_p2 <= std_logic_vector(signed(ap_const_lv12_C01) + signed(tmp_i53_cast_fu_346_p1));
        m_frac_l_V_2_cast_fu_362_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(m_frac_l_V_fu_355_p3),71));

    m_frac_l_V_fu_355_p3 <= (tmp_21_reg_1209 & ap_const_lv7_0);
    not_Val2_i_fu_849_p2 <= (p_Result_23_reg_1185_pp0_iter17_reg xor ap_const_lv1_1);
    not_demorgan_fu_336_p2 <= (tmp_i_fu_331_p2 and tmp_i_86_reg_1199);
    or_cond_fu_922_p2 <= (tmp_24_reg_1284_pp0_iter17_reg or icmp_fu_916_p2);
    out_exp_V_fu_965_p2 <= std_logic_vector(unsigned(ap_const_lv11_3FF) + unsigned(tmp_83_fu_961_p1));
    p_Result_16_fu_497_p3 <= grp_fu_1174_p3(30 downto 30);
    p_Result_23_fu_267_p3 <= p_Val2_s_fu_263_p1(63 downto 63);
    p_Result_25_fu_971_p4 <= ((ap_const_lv1_0 & out_exp_V_fu_965_p2) & tmp_V_4_fu_953_p3);
    p_Result_s_fu_301_p3 <= (ap_const_lv2_1 & tmp_V_3_fu_285_p1);
    p_Val2_s_fu_263_p1 <= x;
    p_s_fu_519_p3 <= 
        tmp_15_fu_488_p4 when (tmp_16_fu_507_p2(0) = '1') else 
        ret_V_3_fu_513_p2;
    r_V_13_fu_419_p3 <= 
        r_V_cast_fu_409_p1 when (isNeg_fu_366_p3(0) = '1') else 
        r_V_1_fu_413_p2;
    r_V_1_fu_413_p2 <= std_logic_vector(shift_left(unsigned(m_frac_l_V_2_cast_fu_362_p1),to_integer(unsigned('0' & tmp_13_fu_395_p1(31-1 downto 0)))));
    r_V_3_fu_464_p2 <= std_logic_vector(shift_left(unsigned(m_fix_l_V_reg_1253),to_integer(unsigned('0' & tmp_14_fu_461_p1(31-1 downto 0)))));
    r_V_4_fu_469_p2 <= std_logic_vector(shift_right(signed(m_fix_l_V_reg_1253),to_integer(unsigned('0' & tmp_14_fu_461_p1(31-1 downto 0)))));
        r_V_cast_fu_409_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_fu_403_p2),71));

    r_V_fu_403_p2 <= std_logic_vector(shift_right(signed(m_frac_l_V_fu_355_p3),to_integer(unsigned('0' & tmp_46_cast_fu_399_p1(31-1 downto 0)))));
    r_exp_V_2_fu_899_p3 <= 
        r_exp_V_3_reg_1277_pp0_iter17_reg when (tmp_80_fu_886_p3(0) = '1') else 
        r_exp_V_fu_894_p2;
    r_exp_V_3_fu_527_p3 <= 
        p_s_fu_519_p3 when (p_Result_16_fu_497_p3(0) = '1') else 
        tmp_15_fu_488_p4;
    r_exp_V_fu_894_p2 <= std_logic_vector(signed(ap_const_lv13_1FFF) + signed(r_exp_V_3_reg_1277_pp0_iter17_reg));
    ret_V_10_cast_fu_880_p2 <= std_logic_vector(unsigned(tmp_20_fu_871_p1) + unsigned(tmp_19_fu_864_p3));
    ret_V_3_fu_513_p2 <= std_logic_vector(unsigned(ap_const_lv13_1) + unsigned(tmp_15_fu_488_p4));
    ret_V_5_fu_588_p2 <= std_logic_vector(signed(lhs_V_fu_574_p1) - signed(rhs_V_4_cast_fu_584_p1));
    ret_V_6_fu_665_p2 <= std_logic_vector(unsigned(rhs_V_2_fu_661_p1) + unsigned(lhs_V_1_fu_658_p1));
    ret_V_7_fu_706_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_46_i_reg_1342_pp0_iter11_reg),44));
    ret_V_8_fu_839_p2 <= std_logic_vector(unsigned(ap_const_lv59_10) + unsigned(lhs_V_3_fu_836_p1));
    ret_V_9_fu_874_p2 <= std_logic_vector(unsigned(rhs_V_5_cast_fu_861_p1) + unsigned(lhs_V_4_fu_854_p3));
    rev_fu_1082_p2 <= (tmp_82_reg_1214_pp0_iter18_reg xor ap_const_lv1_1);
    rhs_V_1_fu_577_p3 <= (tmp_25_reg_1294 & ap_const_lv1_0);
    rhs_V_2_fu_661_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(f_Z4_V_fu_648_p4),36));
        rhs_V_4_cast_fu_584_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_1_fu_577_p3),73));

    rhs_V_5_cast_fu_861_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_18_reg_1429),108));
    rhs_V_fu_477_p3 <= (p_Result_24_reg_1264 & ap_const_lv18_20000);
    sel_tmp10_fu_1124_p2 <= (tmp54_fu_1119_p2 and sel_tmp4_fu_1113_p2);
    sel_tmp11_fu_1019_p2 <= (or_cond_fu_922_p2 xor ap_const_lv1_1);
    sel_tmp12_fu_1025_p2 <= (tmp_22_reg_1269_pp0_iter17_reg and sel_tmp11_fu_1019_p2);
    sel_tmp13_fu_1035_p2 <= (sel_tmp44_demorgan_fu_1030_p2 xor ap_const_lv1_1);
    sel_tmp14_fu_1041_p2 <= (sel_tmp13_fu_1035_p2 or sel_tmp12_fu_1025_p2);
    sel_tmp15_fu_1155_p2 <= (tmp56_reg_1452 or tmp55_fu_1130_p2);
    sel_tmp1_fu_981_p2 <= (not_demorgan_reg_1220_pp0_iter17_reg xor ap_const_lv1_1);
    sel_tmp2_fu_992_p2 <= (tmp_13_i_reg_1226_pp0_iter17_reg and tmp52_fu_986_p2);
    sel_tmp3_fu_1102_p2 <= (x_is_ninf_fu_1078_p2 xor ap_const_lv1_1);
    sel_tmp44_demorgan_fu_1030_p2 <= (tmp_22_reg_1269_pp0_iter17_reg or icmp_fu_916_p2);
    sel_tmp4_fu_1113_p2 <= (tmp53_fu_1108_p2 and sel_tmp_fu_1097_p2);
    sel_tmp5_fu_997_p2 <= (tmp_22_reg_1269_pp0_iter17_reg and or_cond_fu_922_p2);
    sel_tmp6_fu_1002_p2 <= (tmp_22_reg_1269_pp0_iter17_reg xor ap_const_lv1_1);
    sel_tmp7_fu_1087_p2 <= (x_is_ninf_fu_1078_p2 and sel_tmp1_reg_1440);
    sel_tmp8_fu_1007_p2 <= (sel_tmp6_fu_1002_p2 and icmp_fu_916_p2);
    sel_tmp9_fu_1013_p2 <= (sel_tmp8_fu_1007_p2 or sel_tmp5_fu_997_p2);
    sel_tmp_fu_1097_p2 <= (tmp_13_i_not_fu_1092_p2 or p_Result_23_reg_1185_pp0_iter18_reg);
    table_exp_Z1_array_s_address0 <= tmp_17_fu_758_p1(8 - 1 downto 0);

    table_exp_Z1_array_s_ce0_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            table_exp_Z1_array_s_ce0 <= ap_const_logic_1;
        else 
            table_exp_Z1_array_s_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    table_f_Z2_array_V_address0 <= tmp_36_i_fu_702_p1(8 - 1 downto 0);

    table_f_Z2_array_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            table_f_Z2_array_V_ce0 <= ap_const_logic_1;
        else 
            table_f_Z2_array_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    table_f_Z3_array_V_address0 <= tmp_29_i_fu_638_p1(8 - 1 downto 0);
    table_f_Z3_array_V_address1 <= tmp_30_i_fu_643_p1(8 - 1 downto 0);

    table_f_Z3_array_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            table_f_Z3_array_V_ce0 <= ap_const_logic_1;
        else 
            table_f_Z3_array_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    table_f_Z3_array_V_ce1_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            table_f_Z3_array_V_ce1 <= ap_const_logic_1;
        else 
            table_f_Z3_array_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    tmp51_cast_fu_794_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp51_fu_789_p2),52));
    tmp51_fu_789_p2 <= std_logic_vector(unsigned(tmp_40_i_cast_cast_fu_786_p1) + unsigned(exp_Z2P_m_1_V_reg_1367_pp0_iter14_reg));
    tmp52_fu_986_p2 <= (sel_tmp1_fu_981_p2 and not_Val2_i_fu_849_p2);
    tmp53_fu_1108_p2 <= (sel_tmp3_fu_1102_p2 and sel_tmp1_reg_1440);
    tmp54_fu_1119_p2 <= (sel_tmp9_reg_1446 and rev_fu_1082_p2);
    tmp55_fu_1130_p2 <= (tmp_82_reg_1214_pp0_iter18_reg and sel_tmp9_reg_1446);
    tmp56_fu_1047_p2 <= (tmp_26_fu_927_p2 and sel_tmp14_fu_1041_p2);
    tmp_13_fu_395_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_exp_1_cast_fu_391_p1),71));
    tmp_13_i_fu_341_p2 <= (tmp_i_fu_331_p2 and tmp_i1_reg_1204);
    tmp_13_i_not_fu_1092_p2 <= (tmp_13_i_reg_1226_pp0_iter18_reg xor ap_const_lv1_1);
    tmp_14_fu_461_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_exp_1_cast_reg_1243),64));
    tmp_15_fu_488_p4 <= grp_fu_1174_p3(30 downto 18);
    tmp_16_fu_507_p2 <= "1" when (tmp_77_fu_504_p1 = ap_const_lv18_0) else "0";
    tmp_17_fu_758_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_diff_hi_V_reg_1299_pp0_iter13_reg),64));
    tmp_19_fu_864_p3 <= (tmp_79_reg_1435 & ap_const_lv49_0);
    tmp_20_fu_871_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_18_reg_1429),107));
    tmp_21_fu_315_p3 <= 
        e_frac_V_fu_309_p2 when (p_Result_23_fu_267_p3(0) = '1') else 
        p_Result_s_fu_301_p3;
    tmp_22_fu_455_p2 <= "1" when (signed(m_exp_fu_349_p2) > signed(ap_const_lv12_0)) else "0";
    tmp_23_fu_542_p3 <= (tmp_40_fu_535_p3 & ap_const_lv7_0);
    tmp_24_fu_550_p2 <= "0" when (tmp_23_fu_542_p3 = m_frac_l_V_2_cast_reg_1233) else "1";
    tmp_26_fu_927_p2 <= "1" when (signed(r_exp_V_2_fu_899_p3) < signed(ap_const_lv13_1C02)) else "0";
    tmp_27_fu_933_p4 <= ret_V_9_fu_874_p2(105 downto 54);
    tmp_28_fu_943_p4 <= ret_V_10_cast_fu_880_p2(104 downto 53);
    tmp_29_i_fu_638_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Z4_ind_V_fu_628_p4),64));
    tmp_30_fu_1053_p1 <= p_Result_25_fu_971_p4;
    tmp_30_i_fu_643_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Z3_V_fu_614_p4),64));
    tmp_31_fu_1057_p3 <= 
        ap_const_lv64_7FF0000000000000 when (sel_tmp2_fu_992_p2(0) = '1') else 
        ap_const_lv64_7FFFFFFFFFFFFFFF;
    tmp_32_fu_1065_p2 <= (sel_tmp2_fu_992_p2 or not_demorgan_reg_1220_pp0_iter17_reg);
    tmp_33_fu_1070_p3 <= 
        tmp_31_fu_1057_p3 when (tmp_32_fu_1065_p2(0) = '1') else 
        tmp_30_fu_1053_p1;
    tmp_34_fu_1134_p3 <= 
        ap_const_lv64_7FF0000000000000 when (sel_tmp10_fu_1124_p2(0) = '1') else 
        ap_const_lv64_0;
    tmp_34_i_cast_fu_709_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_29_reg_1357),36));
    tmp_35_fu_1142_p2 <= (sel_tmp7_fu_1087_p2 or sel_tmp10_fu_1124_p2);
    tmp_36_fu_1148_p3 <= 
        tmp_34_fu_1134_p3 when (tmp_35_fu_1142_p2(0) = '1') else 
        tmp_33_reg_1457;
    tmp_36_i_fu_702_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Z2_V_reg_1304_pp0_iter10_reg),64));
    tmp_37_fu_1160_p2 <= (sel_tmp4_fu_1113_p2 and sel_tmp15_fu_1155_p2);
    tmp_37_i_fu_737_p4 <= ((Z2_V_reg_1304_pp0_iter12_reg & ap_const_lv1_0) & tmp_38_reg_1373);
    tmp_40_fu_535_p3 <= 
        r_V_3_fu_464_p2 when (isNeg_reg_1238(0) = '1') else 
        r_V_4_fu_469_p2;
    tmp_40_i_cast_cast_fu_786_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_39_reg_1394),44));
        tmp_45_cast_fu_379_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_s_fu_374_p2),12));

    tmp_46_cast_fu_399_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_exp_1_cast_fu_391_p1),61));
    tmp_46_i_fu_671_p4 <= ((Z3_V_reg_1311_pp0_iter9_reg & ap_const_lv9_0) & p_Val2_19_reg_1337);
    tmp_77_fu_504_p1 <= grp_fu_1174_p3(18 - 1 downto 0);
    tmp_79_fu_845_p1 <= ret_V_8_fu_839_p2(58 - 1 downto 0);
    tmp_80_fu_886_p3 <= ret_V_10_cast_fu_880_p2(106 downto 106);
    tmp_81_fu_906_p4 <= r_exp_V_2_fu_899_p3(12 downto 10);
    tmp_83_fu_961_p1 <= r_exp_V_2_fu_899_p3(11 - 1 downto 0);
    tmp_V_3_fu_285_p1 <= p_Val2_s_fu_263_p1(52 - 1 downto 0);
    tmp_V_4_fu_953_p3 <= 
        tmp_27_fu_933_p4 when (tmp_80_fu_886_p3(0) = '1') else 
        tmp_28_fu_943_p4;
    tmp_cast_fu_717_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_712_p2),44));
    tmp_fu_712_p2 <= std_logic_vector(unsigned(tmp_34_i_cast_fu_709_p1) + unsigned(ret_V_6_reg_1331_pp0_iter11_reg));
    tmp_i1_fu_295_p2 <= "1" when (tmp_V_3_fu_285_p1 = ap_const_lv52_0) else "0";
    tmp_i53_cast_fu_346_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_reg_1192),12));
    tmp_i_86_fu_289_p2 <= "0" when (tmp_V_3_fu_285_p1 = ap_const_lv52_0) else "1";
    tmp_i_fu_331_p2 <= "1" when (tmp_V_reg_1192 = ap_const_lv11_7FF) else "0";
    tmp_s_fu_374_p2 <= std_logic_vector(unsigned(ap_const_lv11_3FF) - unsigned(tmp_V_reg_1192));
    x_is_ninf_fu_1078_p2 <= (tmp_13_i_reg_1226_pp0_iter18_reg and p_Result_23_reg_1185_pp0_iter18_reg);
end behav;
