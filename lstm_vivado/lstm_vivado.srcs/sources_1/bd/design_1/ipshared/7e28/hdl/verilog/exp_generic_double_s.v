// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module exp_generic_double_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        x,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
input  [63:0] x;
output  [63:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
reg    ap_block_pp0_stage0_11001;
wire   [7:0] table_exp_Z1_array_s_address0;
reg    table_exp_Z1_array_s_ce0;
wire   [57:0] table_exp_Z1_array_s_q0;
wire   [7:0] table_f_Z3_array_V_address0;
reg    table_f_Z3_array_V_ce0;
wire   [25:0] table_f_Z3_array_V_q0;
wire   [7:0] table_f_Z3_array_V_address1;
reg    table_f_Z3_array_V_ce1;
wire   [25:0] table_f_Z3_array_V_q1;
wire   [7:0] table_f_Z2_array_V_address0;
reg    table_f_Z2_array_V_ce0;
wire   [41:0] table_f_Z2_array_V_q0;
wire   [0:0] p_Result_23_fu_267_p3;
reg   [0:0] p_Result_23_reg_1185;
reg   [0:0] p_Result_23_reg_1185_pp0_iter1_reg;
reg   [0:0] p_Result_23_reg_1185_pp0_iter2_reg;
reg   [0:0] p_Result_23_reg_1185_pp0_iter3_reg;
reg   [0:0] p_Result_23_reg_1185_pp0_iter4_reg;
reg   [0:0] p_Result_23_reg_1185_pp0_iter5_reg;
reg   [0:0] p_Result_23_reg_1185_pp0_iter6_reg;
reg   [0:0] p_Result_23_reg_1185_pp0_iter7_reg;
reg   [0:0] p_Result_23_reg_1185_pp0_iter8_reg;
reg   [0:0] p_Result_23_reg_1185_pp0_iter9_reg;
reg   [0:0] p_Result_23_reg_1185_pp0_iter10_reg;
reg   [0:0] p_Result_23_reg_1185_pp0_iter11_reg;
reg   [0:0] p_Result_23_reg_1185_pp0_iter12_reg;
reg   [0:0] p_Result_23_reg_1185_pp0_iter13_reg;
reg   [0:0] p_Result_23_reg_1185_pp0_iter14_reg;
reg   [0:0] p_Result_23_reg_1185_pp0_iter15_reg;
reg   [0:0] p_Result_23_reg_1185_pp0_iter16_reg;
reg   [0:0] p_Result_23_reg_1185_pp0_iter17_reg;
reg   [0:0] p_Result_23_reg_1185_pp0_iter18_reg;
reg   [10:0] tmp_V_reg_1192;
wire   [0:0] tmp_i_86_fu_289_p2;
reg   [0:0] tmp_i_86_reg_1199;
wire   [0:0] tmp_i1_fu_295_p2;
reg   [0:0] tmp_i1_reg_1204;
wire   [53:0] tmp_21_fu_315_p3;
reg   [53:0] tmp_21_reg_1209;
reg   [0:0] tmp_82_reg_1214;
reg   [0:0] tmp_82_reg_1214_pp0_iter1_reg;
reg   [0:0] tmp_82_reg_1214_pp0_iter2_reg;
reg   [0:0] tmp_82_reg_1214_pp0_iter3_reg;
reg   [0:0] tmp_82_reg_1214_pp0_iter4_reg;
reg   [0:0] tmp_82_reg_1214_pp0_iter5_reg;
reg   [0:0] tmp_82_reg_1214_pp0_iter6_reg;
reg   [0:0] tmp_82_reg_1214_pp0_iter7_reg;
reg   [0:0] tmp_82_reg_1214_pp0_iter8_reg;
reg   [0:0] tmp_82_reg_1214_pp0_iter9_reg;
reg   [0:0] tmp_82_reg_1214_pp0_iter10_reg;
reg   [0:0] tmp_82_reg_1214_pp0_iter11_reg;
reg   [0:0] tmp_82_reg_1214_pp0_iter12_reg;
reg   [0:0] tmp_82_reg_1214_pp0_iter13_reg;
reg   [0:0] tmp_82_reg_1214_pp0_iter14_reg;
reg   [0:0] tmp_82_reg_1214_pp0_iter15_reg;
reg   [0:0] tmp_82_reg_1214_pp0_iter16_reg;
reg   [0:0] tmp_82_reg_1214_pp0_iter17_reg;
reg   [0:0] tmp_82_reg_1214_pp0_iter18_reg;
wire   [0:0] not_demorgan_fu_336_p2;
reg   [0:0] not_demorgan_reg_1220;
reg   [0:0] not_demorgan_reg_1220_pp0_iter2_reg;
reg   [0:0] not_demorgan_reg_1220_pp0_iter3_reg;
reg   [0:0] not_demorgan_reg_1220_pp0_iter4_reg;
reg   [0:0] not_demorgan_reg_1220_pp0_iter5_reg;
reg   [0:0] not_demorgan_reg_1220_pp0_iter6_reg;
reg   [0:0] not_demorgan_reg_1220_pp0_iter7_reg;
reg   [0:0] not_demorgan_reg_1220_pp0_iter8_reg;
reg   [0:0] not_demorgan_reg_1220_pp0_iter9_reg;
reg   [0:0] not_demorgan_reg_1220_pp0_iter10_reg;
reg   [0:0] not_demorgan_reg_1220_pp0_iter11_reg;
reg   [0:0] not_demorgan_reg_1220_pp0_iter12_reg;
reg   [0:0] not_demorgan_reg_1220_pp0_iter13_reg;
reg   [0:0] not_demorgan_reg_1220_pp0_iter14_reg;
reg   [0:0] not_demorgan_reg_1220_pp0_iter15_reg;
reg   [0:0] not_demorgan_reg_1220_pp0_iter16_reg;
reg   [0:0] not_demorgan_reg_1220_pp0_iter17_reg;
wire   [0:0] tmp_13_i_fu_341_p2;
reg   [0:0] tmp_13_i_reg_1226;
reg   [0:0] tmp_13_i_reg_1226_pp0_iter2_reg;
reg   [0:0] tmp_13_i_reg_1226_pp0_iter3_reg;
reg   [0:0] tmp_13_i_reg_1226_pp0_iter4_reg;
reg   [0:0] tmp_13_i_reg_1226_pp0_iter5_reg;
reg   [0:0] tmp_13_i_reg_1226_pp0_iter6_reg;
reg   [0:0] tmp_13_i_reg_1226_pp0_iter7_reg;
reg   [0:0] tmp_13_i_reg_1226_pp0_iter8_reg;
reg   [0:0] tmp_13_i_reg_1226_pp0_iter9_reg;
reg   [0:0] tmp_13_i_reg_1226_pp0_iter10_reg;
reg   [0:0] tmp_13_i_reg_1226_pp0_iter11_reg;
reg   [0:0] tmp_13_i_reg_1226_pp0_iter12_reg;
reg   [0:0] tmp_13_i_reg_1226_pp0_iter13_reg;
reg   [0:0] tmp_13_i_reg_1226_pp0_iter14_reg;
reg   [0:0] tmp_13_i_reg_1226_pp0_iter15_reg;
reg   [0:0] tmp_13_i_reg_1226_pp0_iter16_reg;
reg   [0:0] tmp_13_i_reg_1226_pp0_iter17_reg;
reg   [0:0] tmp_13_i_reg_1226_pp0_iter18_reg;
wire  signed [70:0] m_frac_l_V_2_cast_fu_362_p1;
reg  signed [70:0] m_frac_l_V_2_cast_reg_1233;
wire   [0:0] isNeg_fu_366_p3;
reg   [0:0] isNeg_reg_1238;
wire  signed [31:0] m_exp_1_cast_fu_391_p1;
reg  signed [31:0] m_exp_1_cast_reg_1243;
wire  signed [70:0] r_V_13_fu_419_p3;
reg  signed [70:0] r_V_13_reg_1248;
reg  signed [70:0] r_V_13_reg_1248_pp0_iter2_reg;
reg  signed [70:0] r_V_13_reg_1248_pp0_iter3_reg;
reg  signed [70:0] r_V_13_reg_1248_pp0_iter4_reg;
reg  signed [70:0] r_V_13_reg_1248_pp0_iter5_reg;
reg  signed [70:0] r_V_13_reg_1248_pp0_iter6_reg;
reg  signed [70:0] r_V_13_reg_1248_pp0_iter7_reg;
reg   [63:0] m_fix_l_V_reg_1253;
reg  signed [15:0] m_fix_hi_V_reg_1259;
reg   [0:0] p_Result_24_reg_1264;
wire   [0:0] tmp_22_fu_455_p2;
reg   [0:0] tmp_22_reg_1269;
reg   [0:0] tmp_22_reg_1269_pp0_iter2_reg;
reg   [0:0] tmp_22_reg_1269_pp0_iter3_reg;
reg   [0:0] tmp_22_reg_1269_pp0_iter4_reg;
reg   [0:0] tmp_22_reg_1269_pp0_iter5_reg;
reg   [0:0] tmp_22_reg_1269_pp0_iter6_reg;
reg   [0:0] tmp_22_reg_1269_pp0_iter7_reg;
reg   [0:0] tmp_22_reg_1269_pp0_iter8_reg;
reg   [0:0] tmp_22_reg_1269_pp0_iter9_reg;
reg   [0:0] tmp_22_reg_1269_pp0_iter10_reg;
reg   [0:0] tmp_22_reg_1269_pp0_iter11_reg;
reg   [0:0] tmp_22_reg_1269_pp0_iter12_reg;
reg   [0:0] tmp_22_reg_1269_pp0_iter13_reg;
reg   [0:0] tmp_22_reg_1269_pp0_iter14_reg;
reg   [0:0] tmp_22_reg_1269_pp0_iter15_reg;
reg   [0:0] tmp_22_reg_1269_pp0_iter16_reg;
reg   [0:0] tmp_22_reg_1269_pp0_iter17_reg;
wire  signed [12:0] r_exp_V_3_fu_527_p3;
reg  signed [12:0] r_exp_V_3_reg_1277;
reg  signed [12:0] r_exp_V_3_reg_1277_pp0_iter3_reg;
reg  signed [12:0] r_exp_V_3_reg_1277_pp0_iter4_reg;
reg  signed [12:0] r_exp_V_3_reg_1277_pp0_iter5_reg;
reg  signed [12:0] r_exp_V_3_reg_1277_pp0_iter6_reg;
reg  signed [12:0] r_exp_V_3_reg_1277_pp0_iter7_reg;
reg  signed [12:0] r_exp_V_3_reg_1277_pp0_iter8_reg;
reg  signed [12:0] r_exp_V_3_reg_1277_pp0_iter9_reg;
reg  signed [12:0] r_exp_V_3_reg_1277_pp0_iter10_reg;
reg  signed [12:0] r_exp_V_3_reg_1277_pp0_iter11_reg;
reg  signed [12:0] r_exp_V_3_reg_1277_pp0_iter12_reg;
reg  signed [12:0] r_exp_V_3_reg_1277_pp0_iter13_reg;
reg  signed [12:0] r_exp_V_3_reg_1277_pp0_iter14_reg;
reg  signed [12:0] r_exp_V_3_reg_1277_pp0_iter15_reg;
reg  signed [12:0] r_exp_V_3_reg_1277_pp0_iter16_reg;
reg  signed [12:0] r_exp_V_3_reg_1277_pp0_iter17_reg;
wire   [0:0] tmp_24_fu_550_p2;
reg   [0:0] tmp_24_reg_1284;
reg   [0:0] tmp_24_reg_1284_pp0_iter3_reg;
reg   [0:0] tmp_24_reg_1284_pp0_iter4_reg;
reg   [0:0] tmp_24_reg_1284_pp0_iter5_reg;
reg   [0:0] tmp_24_reg_1284_pp0_iter6_reg;
reg   [0:0] tmp_24_reg_1284_pp0_iter7_reg;
reg   [0:0] tmp_24_reg_1284_pp0_iter8_reg;
reg   [0:0] tmp_24_reg_1284_pp0_iter9_reg;
reg   [0:0] tmp_24_reg_1284_pp0_iter10_reg;
reg   [0:0] tmp_24_reg_1284_pp0_iter11_reg;
reg   [0:0] tmp_24_reg_1284_pp0_iter12_reg;
reg   [0:0] tmp_24_reg_1284_pp0_iter13_reg;
reg   [0:0] tmp_24_reg_1284_pp0_iter14_reg;
reg   [0:0] tmp_24_reg_1284_pp0_iter15_reg;
reg   [0:0] tmp_24_reg_1284_pp0_iter16_reg;
reg   [0:0] tmp_24_reg_1284_pp0_iter17_reg;
reg   [70:0] tmp_25_reg_1294;
reg   [7:0] m_diff_hi_V_reg_1299;
reg   [7:0] m_diff_hi_V_reg_1299_pp0_iter9_reg;
reg   [7:0] m_diff_hi_V_reg_1299_pp0_iter10_reg;
reg   [7:0] m_diff_hi_V_reg_1299_pp0_iter11_reg;
reg   [7:0] m_diff_hi_V_reg_1299_pp0_iter12_reg;
reg   [7:0] m_diff_hi_V_reg_1299_pp0_iter13_reg;
reg   [7:0] Z2_V_reg_1304;
reg   [7:0] Z2_V_reg_1304_pp0_iter9_reg;
reg   [7:0] Z2_V_reg_1304_pp0_iter10_reg;
reg   [7:0] Z2_V_reg_1304_pp0_iter11_reg;
reg   [7:0] Z2_V_reg_1304_pp0_iter12_reg;
reg   [7:0] Z2_V_reg_1304_pp0_iter13_reg;
reg   [7:0] Z2_V_reg_1304_pp0_iter14_reg;
wire   [7:0] Z3_V_fu_614_p4;
reg   [7:0] Z3_V_reg_1311;
reg   [7:0] Z3_V_reg_1311_pp0_iter9_reg;
wire   [34:0] Z4_V_fu_624_p1;
reg   [34:0] Z4_V_reg_1316;
wire   [35:0] ret_V_6_fu_665_p2;
reg   [35:0] ret_V_6_reg_1331;
reg   [35:0] ret_V_6_reg_1331_pp0_iter10_reg;
reg   [35:0] ret_V_6_reg_1331_pp0_iter11_reg;
reg   [25:0] p_Val2_19_reg_1337;
wire   [42:0] tmp_46_i_fu_671_p4;
reg   [42:0] tmp_46_i_reg_1342;
reg   [42:0] tmp_46_i_reg_1342_pp0_iter11_reg;
reg   [19:0] tmp_29_reg_1357;
wire   [43:0] exp_Z2P_m_1_V_fu_721_p2;
reg   [43:0] exp_Z2P_m_1_V_reg_1367;
reg   [43:0] exp_Z2P_m_1_V_reg_1367_pp0_iter13_reg;
reg   [43:0] exp_Z2P_m_1_V_reg_1367_pp0_iter14_reg;
reg   [39:0] tmp_38_reg_1373;
reg   [39:0] tmp_38_reg_1373_pp0_iter13_reg;
reg   [39:0] tmp_38_reg_1373_pp0_iter14_reg;
reg   [35:0] tmp_39_reg_1394;
reg   [57:0] exp_Z1_V_reg_1399;
reg   [57:0] exp_Z1_V_reg_1399_pp0_iter16_reg;
reg   [49:0] exp_Z1P_m_1_V_reg_1404;
reg   [49:0] exp_Z1_hi_V_reg_1409;
wire   [58:0] ret_V_8_fu_839_p2;
reg   [58:0] ret_V_8_reg_1424;
wire   [99:0] grp_fu_830_p2;
reg   [99:0] r_V_18_reg_1429;
wire   [57:0] tmp_79_fu_845_p1;
reg   [57:0] tmp_79_reg_1435;
wire   [0:0] sel_tmp1_fu_981_p2;
reg   [0:0] sel_tmp1_reg_1440;
wire   [0:0] sel_tmp9_fu_1013_p2;
reg   [0:0] sel_tmp9_reg_1446;
wire   [0:0] tmp56_fu_1047_p2;
reg   [0:0] tmp56_reg_1452;
wire   [63:0] tmp_33_fu_1070_p3;
reg   [63:0] tmp_33_reg_1457;
reg    ap_block_pp0_stage0_subdone;
wire   [63:0] tmp_29_i_fu_638_p1;
wire   [63:0] tmp_30_i_fu_643_p1;
wire   [63:0] tmp_36_i_fu_702_p1;
wire   [63:0] tmp_17_fu_758_p1;
wire   [63:0] p_Val2_s_fu_263_p1;
wire   [51:0] tmp_V_3_fu_285_p1;
wire   [53:0] p_Result_s_fu_301_p3;
wire   [53:0] e_frac_V_fu_309_p2;
wire   [0:0] tmp_i_fu_331_p2;
wire   [11:0] tmp_i53_cast_fu_346_p1;
wire  signed [60:0] m_frac_l_V_fu_355_p3;
wire   [11:0] m_exp_fu_349_p2;
wire   [10:0] tmp_s_fu_374_p2;
wire  signed [11:0] tmp_45_cast_fu_379_p1;
wire   [11:0] m_exp_2_fu_383_p3;
wire   [60:0] tmp_46_cast_fu_399_p1;
wire   [60:0] r_V_fu_403_p2;
wire   [70:0] tmp_13_fu_395_p1;
wire  signed [70:0] r_V_cast_fu_409_p1;
wire   [70:0] r_V_1_fu_413_p2;
wire   [63:0] tmp_14_fu_461_p1;
wire  signed [18:0] rhs_V_fu_477_p3;
wire  signed [30:0] grp_fu_1174_p3;
wire   [17:0] tmp_77_fu_504_p1;
wire   [12:0] tmp_15_fu_488_p4;
wire   [0:0] tmp_16_fu_507_p2;
wire   [12:0] ret_V_3_fu_513_p2;
wire   [0:0] p_Result_16_fu_497_p3;
wire   [12:0] p_s_fu_519_p3;
wire   [63:0] r_V_3_fu_464_p2;
wire   [63:0] r_V_4_fu_469_p2;
wire   [63:0] tmp_40_fu_535_p3;
wire   [70:0] tmp_23_fu_542_p3;
wire   [71:0] grp_fu_558_p0;
wire   [83:0] grp_fu_558_p2;
wire   [71:0] rhs_V_1_fu_577_p3;
wire  signed [72:0] lhs_V_fu_574_p1;
wire  signed [72:0] rhs_V_4_cast_fu_584_p1;
wire   [72:0] ret_V_5_fu_588_p2;
wire   [7:0] Z4_ind_V_fu_628_p4;
wire   [9:0] f_Z4_V_fu_648_p4;
wire   [35:0] rhs_V_2_fu_661_p1;
wire   [35:0] lhs_V_1_fu_658_p1;
wire   [35:0] grp_fu_686_p0;
wire   [42:0] grp_fu_686_p1;
wire   [78:0] grp_fu_686_p2;
wire   [35:0] tmp_34_i_cast_fu_709_p1;
wire   [35:0] tmp_fu_712_p2;
wire   [43:0] ret_V_7_fu_706_p1;
wire   [43:0] tmp_cast_fu_717_p1;
wire   [48:0] tmp_37_i_fu_737_p4;
wire   [43:0] grp_fu_752_p0;
wire   [48:0] grp_fu_752_p1;
wire   [92:0] grp_fu_752_p2;
wire   [50:0] lhs_V_2_fu_772_p5;
wire   [43:0] tmp_40_i_cast_cast_fu_786_p1;
wire   [43:0] tmp51_fu_789_p2;
wire   [51:0] lhs_V_2_i_cast_fu_782_p1;
wire   [51:0] tmp51_cast_fu_794_p1;
wire   [51:0] exp_Z1P_m_1_l_V_fu_798_p2;
wire   [49:0] grp_fu_830_p0;
wire   [49:0] grp_fu_830_p1;
wire   [58:0] lhs_V_3_fu_836_p1;
wire   [107:0] rhs_V_5_cast_fu_861_p1;
wire   [107:0] lhs_V_4_fu_854_p3;
wire   [106:0] tmp_20_fu_871_p1;
wire   [106:0] tmp_19_fu_864_p3;
wire   [106:0] ret_V_10_cast_fu_880_p2;
wire   [0:0] tmp_80_fu_886_p3;
wire   [12:0] r_exp_V_fu_894_p2;
wire   [12:0] r_exp_V_2_fu_899_p3;
wire   [2:0] tmp_81_fu_906_p4;
wire   [0:0] icmp_fu_916_p2;
wire   [107:0] ret_V_9_fu_874_p2;
wire   [51:0] tmp_27_fu_933_p4;
wire   [51:0] tmp_28_fu_943_p4;
wire   [10:0] tmp_83_fu_961_p1;
wire   [10:0] out_exp_V_fu_965_p2;
wire   [51:0] tmp_V_4_fu_953_p3;
wire   [0:0] not_Val2_i_fu_849_p2;
wire   [0:0] tmp52_fu_986_p2;
wire   [0:0] or_cond_fu_922_p2;
wire   [0:0] sel_tmp6_fu_1002_p2;
wire   [0:0] sel_tmp5_fu_997_p2;
wire   [0:0] sel_tmp8_fu_1007_p2;
wire   [0:0] sel_tmp11_fu_1019_p2;
wire   [0:0] sel_tmp44_demorgan_fu_1030_p2;
wire   [0:0] sel_tmp12_fu_1025_p2;
wire   [0:0] sel_tmp13_fu_1035_p2;
wire   [0:0] tmp_26_fu_927_p2;
wire   [0:0] sel_tmp14_fu_1041_p2;
wire   [63:0] p_Result_25_fu_971_p4;
wire   [0:0] sel_tmp2_fu_992_p2;
wire   [0:0] tmp_32_fu_1065_p2;
wire   [63:0] tmp_31_fu_1057_p3;
wire   [63:0] tmp_30_fu_1053_p1;
wire   [0:0] x_is_ninf_fu_1078_p2;
wire   [0:0] tmp_13_i_not_fu_1092_p2;
wire   [0:0] sel_tmp3_fu_1102_p2;
wire   [0:0] tmp53_fu_1108_p2;
wire   [0:0] sel_tmp_fu_1097_p2;
wire   [0:0] rev_fu_1082_p2;
wire   [0:0] tmp54_fu_1119_p2;
wire   [0:0] sel_tmp4_fu_1113_p2;
wire   [0:0] sel_tmp10_fu_1124_p2;
wire   [0:0] sel_tmp7_fu_1087_p2;
wire   [0:0] tmp_35_fu_1142_p2;
wire   [63:0] tmp_34_fu_1134_p3;
wire   [0:0] tmp55_fu_1130_p2;
wire   [0:0] sel_tmp15_fu_1155_p2;
wire   [0:0] tmp_37_fu_1160_p2;
wire   [63:0] tmp_36_fu_1148_p3;
wire   [15:0] grp_fu_1174_p0;
reg    grp_fu_558_ce;
reg    grp_fu_686_ce;
reg    grp_fu_752_ce;
reg    grp_fu_830_ce;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to18;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire   [78:0] grp_fu_686_p00;
wire   [78:0] grp_fu_686_p10;
wire   [92:0] grp_fu_752_p00;
wire   [92:0] grp_fu_752_p10;
wire   [99:0] grp_fu_830_p00;
wire   [99:0] grp_fu_830_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
end

exp_generic_doubleOg #(
    .DataWidth( 58 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
table_exp_Z1_array_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(table_exp_Z1_array_s_address0),
    .ce0(table_exp_Z1_array_s_ce0),
    .q0(table_exp_Z1_array_s_q0)
);

exp_generic_doublfYi #(
    .DataWidth( 26 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
table_f_Z3_array_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(table_f_Z3_array_V_address0),
    .ce0(table_f_Z3_array_V_ce0),
    .q0(table_f_Z3_array_V_q0),
    .address1(table_f_Z3_array_V_address1),
    .ce1(table_f_Z3_array_V_ce1),
    .q1(table_f_Z3_array_V_q1)
);

exp_generic_doublg8j #(
    .DataWidth( 42 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
table_f_Z2_array_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(table_f_Z2_array_V_address0),
    .ce0(table_f_Z2_array_V_ce0),
    .q0(table_f_Z2_array_V_q0)
);

LSTM_Top_mul_72nshbi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 72 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 84 ))
LSTM_Top_mul_72nshbi_U65(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_558_p0),
    .din1(r_exp_V_3_reg_1277),
    .ce(grp_fu_558_ce),
    .dout(grp_fu_558_p2)
);

LSTM_Top_mul_36nsibs #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 43 ),
    .dout_WIDTH( 79 ))
LSTM_Top_mul_36nsibs_U66(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_686_p0),
    .din1(grp_fu_686_p1),
    .ce(grp_fu_686_ce),
    .dout(grp_fu_686_p2)
);

LSTM_Top_mul_44nsjbC #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 44 ),
    .din1_WIDTH( 49 ),
    .dout_WIDTH( 93 ))
LSTM_Top_mul_44nsjbC_U67(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_752_p0),
    .din1(grp_fu_752_p1),
    .ce(grp_fu_752_ce),
    .dout(grp_fu_752_p2)
);

LSTM_Top_mul_50nskbM #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 50 ),
    .din1_WIDTH( 50 ),
    .dout_WIDTH( 100 ))
LSTM_Top_mul_50nskbM_U68(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_830_p0),
    .din1(grp_fu_830_p1),
    .ce(grp_fu_830_ce),
    .dout(grp_fu_830_p2)
);

LSTM_Top_mac_mulalbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 19 ),
    .dout_WIDTH( 31 ))
LSTM_Top_mac_mulalbW_U69(
    .din0(grp_fu_1174_p0),
    .din1(m_fix_hi_V_reg_1259),
    .din2(rhs_V_fu_477_p3),
    .dout(grp_fu_1174_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Z2_V_reg_1304 <= {{ret_V_5_fu_588_p2[50:43]}};
        Z2_V_reg_1304_pp0_iter10_reg <= Z2_V_reg_1304_pp0_iter9_reg;
        Z2_V_reg_1304_pp0_iter11_reg <= Z2_V_reg_1304_pp0_iter10_reg;
        Z2_V_reg_1304_pp0_iter12_reg <= Z2_V_reg_1304_pp0_iter11_reg;
        Z2_V_reg_1304_pp0_iter13_reg <= Z2_V_reg_1304_pp0_iter12_reg;
        Z2_V_reg_1304_pp0_iter14_reg <= Z2_V_reg_1304_pp0_iter13_reg;
        Z2_V_reg_1304_pp0_iter9_reg <= Z2_V_reg_1304;
        Z3_V_reg_1311 <= {{ret_V_5_fu_588_p2[42:35]}};
        Z3_V_reg_1311_pp0_iter9_reg <= Z3_V_reg_1311;
        Z4_V_reg_1316 <= Z4_V_fu_624_p1;
        exp_Z1P_m_1_V_reg_1404 <= {{exp_Z1P_m_1_l_V_fu_798_p2[51:2]}};
        exp_Z1_V_reg_1399 <= table_exp_Z1_array_s_q0;
        exp_Z1_V_reg_1399_pp0_iter16_reg <= exp_Z1_V_reg_1399;
        exp_Z1_hi_V_reg_1409 <= {{table_exp_Z1_array_s_q0[57:8]}};
        exp_Z2P_m_1_V_reg_1367 <= exp_Z2P_m_1_V_fu_721_p2;
        exp_Z2P_m_1_V_reg_1367_pp0_iter13_reg <= exp_Z2P_m_1_V_reg_1367;
        exp_Z2P_m_1_V_reg_1367_pp0_iter14_reg <= exp_Z2P_m_1_V_reg_1367_pp0_iter13_reg;
        m_diff_hi_V_reg_1299 <= {{ret_V_5_fu_588_p2[58:51]}};
        m_diff_hi_V_reg_1299_pp0_iter10_reg <= m_diff_hi_V_reg_1299_pp0_iter9_reg;
        m_diff_hi_V_reg_1299_pp0_iter11_reg <= m_diff_hi_V_reg_1299_pp0_iter10_reg;
        m_diff_hi_V_reg_1299_pp0_iter12_reg <= m_diff_hi_V_reg_1299_pp0_iter11_reg;
        m_diff_hi_V_reg_1299_pp0_iter13_reg <= m_diff_hi_V_reg_1299_pp0_iter12_reg;
        m_diff_hi_V_reg_1299_pp0_iter9_reg <= m_diff_hi_V_reg_1299;
        not_demorgan_reg_1220_pp0_iter10_reg <= not_demorgan_reg_1220_pp0_iter9_reg;
        not_demorgan_reg_1220_pp0_iter11_reg <= not_demorgan_reg_1220_pp0_iter10_reg;
        not_demorgan_reg_1220_pp0_iter12_reg <= not_demorgan_reg_1220_pp0_iter11_reg;
        not_demorgan_reg_1220_pp0_iter13_reg <= not_demorgan_reg_1220_pp0_iter12_reg;
        not_demorgan_reg_1220_pp0_iter14_reg <= not_demorgan_reg_1220_pp0_iter13_reg;
        not_demorgan_reg_1220_pp0_iter15_reg <= not_demorgan_reg_1220_pp0_iter14_reg;
        not_demorgan_reg_1220_pp0_iter16_reg <= not_demorgan_reg_1220_pp0_iter15_reg;
        not_demorgan_reg_1220_pp0_iter17_reg <= not_demorgan_reg_1220_pp0_iter16_reg;
        not_demorgan_reg_1220_pp0_iter2_reg <= not_demorgan_reg_1220;
        not_demorgan_reg_1220_pp0_iter3_reg <= not_demorgan_reg_1220_pp0_iter2_reg;
        not_demorgan_reg_1220_pp0_iter4_reg <= not_demorgan_reg_1220_pp0_iter3_reg;
        not_demorgan_reg_1220_pp0_iter5_reg <= not_demorgan_reg_1220_pp0_iter4_reg;
        not_demorgan_reg_1220_pp0_iter6_reg <= not_demorgan_reg_1220_pp0_iter5_reg;
        not_demorgan_reg_1220_pp0_iter7_reg <= not_demorgan_reg_1220_pp0_iter6_reg;
        not_demorgan_reg_1220_pp0_iter8_reg <= not_demorgan_reg_1220_pp0_iter7_reg;
        not_demorgan_reg_1220_pp0_iter9_reg <= not_demorgan_reg_1220_pp0_iter8_reg;
        p_Result_23_reg_1185_pp0_iter10_reg <= p_Result_23_reg_1185_pp0_iter9_reg;
        p_Result_23_reg_1185_pp0_iter11_reg <= p_Result_23_reg_1185_pp0_iter10_reg;
        p_Result_23_reg_1185_pp0_iter12_reg <= p_Result_23_reg_1185_pp0_iter11_reg;
        p_Result_23_reg_1185_pp0_iter13_reg <= p_Result_23_reg_1185_pp0_iter12_reg;
        p_Result_23_reg_1185_pp0_iter14_reg <= p_Result_23_reg_1185_pp0_iter13_reg;
        p_Result_23_reg_1185_pp0_iter15_reg <= p_Result_23_reg_1185_pp0_iter14_reg;
        p_Result_23_reg_1185_pp0_iter16_reg <= p_Result_23_reg_1185_pp0_iter15_reg;
        p_Result_23_reg_1185_pp0_iter17_reg <= p_Result_23_reg_1185_pp0_iter16_reg;
        p_Result_23_reg_1185_pp0_iter18_reg <= p_Result_23_reg_1185_pp0_iter17_reg;
        p_Result_23_reg_1185_pp0_iter2_reg <= p_Result_23_reg_1185_pp0_iter1_reg;
        p_Result_23_reg_1185_pp0_iter3_reg <= p_Result_23_reg_1185_pp0_iter2_reg;
        p_Result_23_reg_1185_pp0_iter4_reg <= p_Result_23_reg_1185_pp0_iter3_reg;
        p_Result_23_reg_1185_pp0_iter5_reg <= p_Result_23_reg_1185_pp0_iter4_reg;
        p_Result_23_reg_1185_pp0_iter6_reg <= p_Result_23_reg_1185_pp0_iter5_reg;
        p_Result_23_reg_1185_pp0_iter7_reg <= p_Result_23_reg_1185_pp0_iter6_reg;
        p_Result_23_reg_1185_pp0_iter8_reg <= p_Result_23_reg_1185_pp0_iter7_reg;
        p_Result_23_reg_1185_pp0_iter9_reg <= p_Result_23_reg_1185_pp0_iter8_reg;
        r_V_13_reg_1248_pp0_iter2_reg <= r_V_13_reg_1248;
        r_V_13_reg_1248_pp0_iter3_reg <= r_V_13_reg_1248_pp0_iter2_reg;
        r_V_13_reg_1248_pp0_iter4_reg <= r_V_13_reg_1248_pp0_iter3_reg;
        r_V_13_reg_1248_pp0_iter5_reg <= r_V_13_reg_1248_pp0_iter4_reg;
        r_V_13_reg_1248_pp0_iter6_reg <= r_V_13_reg_1248_pp0_iter5_reg;
        r_V_13_reg_1248_pp0_iter7_reg <= r_V_13_reg_1248_pp0_iter6_reg;
        r_V_18_reg_1429 <= grp_fu_830_p2;
        r_exp_V_3_reg_1277 <= r_exp_V_3_fu_527_p3;
        r_exp_V_3_reg_1277_pp0_iter10_reg <= r_exp_V_3_reg_1277_pp0_iter9_reg;
        r_exp_V_3_reg_1277_pp0_iter11_reg <= r_exp_V_3_reg_1277_pp0_iter10_reg;
        r_exp_V_3_reg_1277_pp0_iter12_reg <= r_exp_V_3_reg_1277_pp0_iter11_reg;
        r_exp_V_3_reg_1277_pp0_iter13_reg <= r_exp_V_3_reg_1277_pp0_iter12_reg;
        r_exp_V_3_reg_1277_pp0_iter14_reg <= r_exp_V_3_reg_1277_pp0_iter13_reg;
        r_exp_V_3_reg_1277_pp0_iter15_reg <= r_exp_V_3_reg_1277_pp0_iter14_reg;
        r_exp_V_3_reg_1277_pp0_iter16_reg <= r_exp_V_3_reg_1277_pp0_iter15_reg;
        r_exp_V_3_reg_1277_pp0_iter17_reg <= r_exp_V_3_reg_1277_pp0_iter16_reg;
        r_exp_V_3_reg_1277_pp0_iter3_reg <= r_exp_V_3_reg_1277;
        r_exp_V_3_reg_1277_pp0_iter4_reg <= r_exp_V_3_reg_1277_pp0_iter3_reg;
        r_exp_V_3_reg_1277_pp0_iter5_reg <= r_exp_V_3_reg_1277_pp0_iter4_reg;
        r_exp_V_3_reg_1277_pp0_iter6_reg <= r_exp_V_3_reg_1277_pp0_iter5_reg;
        r_exp_V_3_reg_1277_pp0_iter7_reg <= r_exp_V_3_reg_1277_pp0_iter6_reg;
        r_exp_V_3_reg_1277_pp0_iter8_reg <= r_exp_V_3_reg_1277_pp0_iter7_reg;
        r_exp_V_3_reg_1277_pp0_iter9_reg <= r_exp_V_3_reg_1277_pp0_iter8_reg;
        ret_V_6_reg_1331 <= ret_V_6_fu_665_p2;
        ret_V_6_reg_1331_pp0_iter10_reg <= ret_V_6_reg_1331;
        ret_V_6_reg_1331_pp0_iter11_reg <= ret_V_6_reg_1331_pp0_iter10_reg;
        ret_V_8_reg_1424 <= ret_V_8_fu_839_p2;
        sel_tmp1_reg_1440 <= sel_tmp1_fu_981_p2;
        sel_tmp9_reg_1446 <= sel_tmp9_fu_1013_p2;
        tmp56_reg_1452 <= tmp56_fu_1047_p2;
        tmp_13_i_reg_1226_pp0_iter10_reg <= tmp_13_i_reg_1226_pp0_iter9_reg;
        tmp_13_i_reg_1226_pp0_iter11_reg <= tmp_13_i_reg_1226_pp0_iter10_reg;
        tmp_13_i_reg_1226_pp0_iter12_reg <= tmp_13_i_reg_1226_pp0_iter11_reg;
        tmp_13_i_reg_1226_pp0_iter13_reg <= tmp_13_i_reg_1226_pp0_iter12_reg;
        tmp_13_i_reg_1226_pp0_iter14_reg <= tmp_13_i_reg_1226_pp0_iter13_reg;
        tmp_13_i_reg_1226_pp0_iter15_reg <= tmp_13_i_reg_1226_pp0_iter14_reg;
        tmp_13_i_reg_1226_pp0_iter16_reg <= tmp_13_i_reg_1226_pp0_iter15_reg;
        tmp_13_i_reg_1226_pp0_iter17_reg <= tmp_13_i_reg_1226_pp0_iter16_reg;
        tmp_13_i_reg_1226_pp0_iter18_reg <= tmp_13_i_reg_1226_pp0_iter17_reg;
        tmp_13_i_reg_1226_pp0_iter2_reg <= tmp_13_i_reg_1226;
        tmp_13_i_reg_1226_pp0_iter3_reg <= tmp_13_i_reg_1226_pp0_iter2_reg;
        tmp_13_i_reg_1226_pp0_iter4_reg <= tmp_13_i_reg_1226_pp0_iter3_reg;
        tmp_13_i_reg_1226_pp0_iter5_reg <= tmp_13_i_reg_1226_pp0_iter4_reg;
        tmp_13_i_reg_1226_pp0_iter6_reg <= tmp_13_i_reg_1226_pp0_iter5_reg;
        tmp_13_i_reg_1226_pp0_iter7_reg <= tmp_13_i_reg_1226_pp0_iter6_reg;
        tmp_13_i_reg_1226_pp0_iter8_reg <= tmp_13_i_reg_1226_pp0_iter7_reg;
        tmp_13_i_reg_1226_pp0_iter9_reg <= tmp_13_i_reg_1226_pp0_iter8_reg;
        tmp_22_reg_1269_pp0_iter10_reg <= tmp_22_reg_1269_pp0_iter9_reg;
        tmp_22_reg_1269_pp0_iter11_reg <= tmp_22_reg_1269_pp0_iter10_reg;
        tmp_22_reg_1269_pp0_iter12_reg <= tmp_22_reg_1269_pp0_iter11_reg;
        tmp_22_reg_1269_pp0_iter13_reg <= tmp_22_reg_1269_pp0_iter12_reg;
        tmp_22_reg_1269_pp0_iter14_reg <= tmp_22_reg_1269_pp0_iter13_reg;
        tmp_22_reg_1269_pp0_iter15_reg <= tmp_22_reg_1269_pp0_iter14_reg;
        tmp_22_reg_1269_pp0_iter16_reg <= tmp_22_reg_1269_pp0_iter15_reg;
        tmp_22_reg_1269_pp0_iter17_reg <= tmp_22_reg_1269_pp0_iter16_reg;
        tmp_22_reg_1269_pp0_iter2_reg <= tmp_22_reg_1269;
        tmp_22_reg_1269_pp0_iter3_reg <= tmp_22_reg_1269_pp0_iter2_reg;
        tmp_22_reg_1269_pp0_iter4_reg <= tmp_22_reg_1269_pp0_iter3_reg;
        tmp_22_reg_1269_pp0_iter5_reg <= tmp_22_reg_1269_pp0_iter4_reg;
        tmp_22_reg_1269_pp0_iter6_reg <= tmp_22_reg_1269_pp0_iter5_reg;
        tmp_22_reg_1269_pp0_iter7_reg <= tmp_22_reg_1269_pp0_iter6_reg;
        tmp_22_reg_1269_pp0_iter8_reg <= tmp_22_reg_1269_pp0_iter7_reg;
        tmp_22_reg_1269_pp0_iter9_reg <= tmp_22_reg_1269_pp0_iter8_reg;
        tmp_24_reg_1284 <= tmp_24_fu_550_p2;
        tmp_24_reg_1284_pp0_iter10_reg <= tmp_24_reg_1284_pp0_iter9_reg;
        tmp_24_reg_1284_pp0_iter11_reg <= tmp_24_reg_1284_pp0_iter10_reg;
        tmp_24_reg_1284_pp0_iter12_reg <= tmp_24_reg_1284_pp0_iter11_reg;
        tmp_24_reg_1284_pp0_iter13_reg <= tmp_24_reg_1284_pp0_iter12_reg;
        tmp_24_reg_1284_pp0_iter14_reg <= tmp_24_reg_1284_pp0_iter13_reg;
        tmp_24_reg_1284_pp0_iter15_reg <= tmp_24_reg_1284_pp0_iter14_reg;
        tmp_24_reg_1284_pp0_iter16_reg <= tmp_24_reg_1284_pp0_iter15_reg;
        tmp_24_reg_1284_pp0_iter17_reg <= tmp_24_reg_1284_pp0_iter16_reg;
        tmp_24_reg_1284_pp0_iter3_reg <= tmp_24_reg_1284;
        tmp_24_reg_1284_pp0_iter4_reg <= tmp_24_reg_1284_pp0_iter3_reg;
        tmp_24_reg_1284_pp0_iter5_reg <= tmp_24_reg_1284_pp0_iter4_reg;
        tmp_24_reg_1284_pp0_iter6_reg <= tmp_24_reg_1284_pp0_iter5_reg;
        tmp_24_reg_1284_pp0_iter7_reg <= tmp_24_reg_1284_pp0_iter6_reg;
        tmp_24_reg_1284_pp0_iter8_reg <= tmp_24_reg_1284_pp0_iter7_reg;
        tmp_24_reg_1284_pp0_iter9_reg <= tmp_24_reg_1284_pp0_iter8_reg;
        tmp_25_reg_1294 <= {{grp_fu_558_p2[83:13]}};
        tmp_29_reg_1357 <= {{grp_fu_686_p2[78:59]}};
        tmp_33_reg_1457[62 : 0] <= tmp_33_fu_1070_p3[62 : 0];
        tmp_38_reg_1373 <= {{table_f_Z2_array_V_q0[41:2]}};
        tmp_38_reg_1373_pp0_iter13_reg <= tmp_38_reg_1373;
        tmp_38_reg_1373_pp0_iter14_reg <= tmp_38_reg_1373_pp0_iter13_reg;
        tmp_39_reg_1394 <= {{grp_fu_752_p2[92:57]}};
        tmp_46_i_reg_1342[25 : 0] <= tmp_46_i_fu_671_p4[25 : 0];
tmp_46_i_reg_1342[42 : 35] <= tmp_46_i_fu_671_p4[42 : 35];
        tmp_46_i_reg_1342_pp0_iter11_reg[25 : 0] <= tmp_46_i_reg_1342[25 : 0];
tmp_46_i_reg_1342_pp0_iter11_reg[42 : 35] <= tmp_46_i_reg_1342[42 : 35];
        tmp_79_reg_1435 <= tmp_79_fu_845_p1;
        tmp_82_reg_1214_pp0_iter10_reg <= tmp_82_reg_1214_pp0_iter9_reg;
        tmp_82_reg_1214_pp0_iter11_reg <= tmp_82_reg_1214_pp0_iter10_reg;
        tmp_82_reg_1214_pp0_iter12_reg <= tmp_82_reg_1214_pp0_iter11_reg;
        tmp_82_reg_1214_pp0_iter13_reg <= tmp_82_reg_1214_pp0_iter12_reg;
        tmp_82_reg_1214_pp0_iter14_reg <= tmp_82_reg_1214_pp0_iter13_reg;
        tmp_82_reg_1214_pp0_iter15_reg <= tmp_82_reg_1214_pp0_iter14_reg;
        tmp_82_reg_1214_pp0_iter16_reg <= tmp_82_reg_1214_pp0_iter15_reg;
        tmp_82_reg_1214_pp0_iter17_reg <= tmp_82_reg_1214_pp0_iter16_reg;
        tmp_82_reg_1214_pp0_iter18_reg <= tmp_82_reg_1214_pp0_iter17_reg;
        tmp_82_reg_1214_pp0_iter2_reg <= tmp_82_reg_1214_pp0_iter1_reg;
        tmp_82_reg_1214_pp0_iter3_reg <= tmp_82_reg_1214_pp0_iter2_reg;
        tmp_82_reg_1214_pp0_iter4_reg <= tmp_82_reg_1214_pp0_iter3_reg;
        tmp_82_reg_1214_pp0_iter5_reg <= tmp_82_reg_1214_pp0_iter4_reg;
        tmp_82_reg_1214_pp0_iter6_reg <= tmp_82_reg_1214_pp0_iter5_reg;
        tmp_82_reg_1214_pp0_iter7_reg <= tmp_82_reg_1214_pp0_iter6_reg;
        tmp_82_reg_1214_pp0_iter8_reg <= tmp_82_reg_1214_pp0_iter7_reg;
        tmp_82_reg_1214_pp0_iter9_reg <= tmp_82_reg_1214_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        isNeg_reg_1238 <= m_exp_fu_349_p2[32'd11];
        m_exp_1_cast_reg_1243 <= m_exp_1_cast_fu_391_p1;
        m_fix_hi_V_reg_1259 <= {{r_V_13_fu_419_p3[70:55]}};
        m_fix_l_V_reg_1253 <= {{r_V_13_fu_419_p3[70:7]}};
        m_frac_l_V_2_cast_reg_1233[70 : 7] <= m_frac_l_V_2_cast_fu_362_p1[70 : 7];
        not_demorgan_reg_1220 <= not_demorgan_fu_336_p2;
        p_Result_23_reg_1185 <= p_Val2_s_fu_263_p1[32'd63];
        p_Result_23_reg_1185_pp0_iter1_reg <= p_Result_23_reg_1185;
        p_Result_24_reg_1264 <= r_V_13_fu_419_p3[32'd70];
        r_V_13_reg_1248 <= r_V_13_fu_419_p3;
        tmp_13_i_reg_1226 <= tmp_13_i_fu_341_p2;
        tmp_21_reg_1209 <= tmp_21_fu_315_p3;
        tmp_22_reg_1269 <= tmp_22_fu_455_p2;
        tmp_82_reg_1214 <= tmp_21_fu_315_p3[32'd53];
        tmp_82_reg_1214_pp0_iter1_reg <= tmp_82_reg_1214;
        tmp_V_reg_1192 <= {{p_Val2_s_fu_263_p1[62:52]}};
        tmp_i1_reg_1204 <= tmp_i1_fu_295_p2;
        tmp_i_86_reg_1199 <= tmp_i_86_fu_289_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_19_reg_1337 <= table_f_Z3_array_V_q1;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to18 = 1'b1;
    end else begin
        ap_idle_pp0_0to18 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to18 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_558_ce = 1'b1;
    end else begin
        grp_fu_558_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_686_ce = 1'b1;
    end else begin
        grp_fu_686_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_752_ce = 1'b1;
    end else begin
        grp_fu_752_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_830_ce = 1'b1;
    end else begin
        grp_fu_830_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        table_exp_Z1_array_s_ce0 = 1'b1;
    end else begin
        table_exp_Z1_array_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        table_f_Z2_array_V_ce0 = 1'b1;
    end else begin
        table_f_Z2_array_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        table_f_Z3_array_V_ce0 = 1'b1;
    end else begin
        table_f_Z3_array_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        table_f_Z3_array_V_ce1 = 1'b1;
    end else begin
        table_f_Z3_array_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Z3_V_fu_614_p4 = {{ret_V_5_fu_588_p2[42:35]}};

assign Z4_V_fu_624_p1 = ret_V_5_fu_588_p2[34:0];

assign Z4_ind_V_fu_628_p4 = {{ret_V_5_fu_588_p2[34:27]}};

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b0 == ap_ce) | ((ap_start == 1'b0) & (ap_start == 1'b1)));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return = ((tmp_37_fu_1160_p2[0:0] === 1'b1) ? 64'd0 : tmp_36_fu_1148_p3);

assign e_frac_V_fu_309_p2 = (54'd0 - p_Result_s_fu_301_p3);

assign exp_Z1P_m_1_l_V_fu_798_p2 = (lhs_V_2_i_cast_fu_782_p1 + tmp51_cast_fu_794_p1);

assign exp_Z2P_m_1_V_fu_721_p2 = (ret_V_7_fu_706_p1 + tmp_cast_fu_717_p1);

assign f_Z4_V_fu_648_p4 = {{table_f_Z3_array_V_q0[25:16]}};

assign grp_fu_1174_p0 = 31'd23637;

assign grp_fu_558_p0 = 84'd1636647506585939924452;

assign grp_fu_686_p0 = grp_fu_686_p00;

assign grp_fu_686_p00 = ret_V_6_reg_1331;

assign grp_fu_686_p1 = grp_fu_686_p10;

assign grp_fu_686_p10 = tmp_46_i_fu_671_p4;

assign grp_fu_752_p0 = grp_fu_752_p00;

assign grp_fu_752_p00 = exp_Z2P_m_1_V_reg_1367;

assign grp_fu_752_p1 = grp_fu_752_p10;

assign grp_fu_752_p10 = tmp_37_i_fu_737_p4;

assign grp_fu_830_p0 = grp_fu_830_p00;

assign grp_fu_830_p00 = exp_Z1P_m_1_V_reg_1404;

assign grp_fu_830_p1 = grp_fu_830_p10;

assign grp_fu_830_p10 = exp_Z1_hi_V_reg_1409;

assign icmp_fu_916_p2 = (($signed(tmp_81_fu_906_p4) > $signed(3'd0)) ? 1'b1 : 1'b0);

assign isNeg_fu_366_p3 = m_exp_fu_349_p2[32'd11];

assign lhs_V_1_fu_658_p1 = Z4_V_reg_1316;

assign lhs_V_2_fu_772_p5 = {{{{Z2_V_reg_1304_pp0_iter14_reg}, {1'd0}}, {tmp_38_reg_1373_pp0_iter14_reg}}, {2'd0}};

assign lhs_V_2_i_cast_fu_782_p1 = lhs_V_2_fu_772_p5;

assign lhs_V_3_fu_836_p1 = exp_Z1_V_reg_1399_pp0_iter16_reg;

assign lhs_V_4_fu_854_p3 = {{ret_V_8_reg_1424}, {49'd0}};

assign lhs_V_fu_574_p1 = r_V_13_reg_1248_pp0_iter7_reg;

assign m_exp_1_cast_fu_391_p1 = $signed(m_exp_2_fu_383_p3);

assign m_exp_2_fu_383_p3 = ((isNeg_fu_366_p3[0:0] === 1'b1) ? tmp_45_cast_fu_379_p1 : m_exp_fu_349_p2);

assign m_exp_fu_349_p2 = ($signed(12'd3073) + $signed(tmp_i53_cast_fu_346_p1));

assign m_frac_l_V_2_cast_fu_362_p1 = m_frac_l_V_fu_355_p3;

assign m_frac_l_V_fu_355_p3 = {{tmp_21_reg_1209}, {7'd0}};

assign not_Val2_i_fu_849_p2 = (p_Result_23_reg_1185_pp0_iter17_reg ^ 1'd1);

assign not_demorgan_fu_336_p2 = (tmp_i_fu_331_p2 & tmp_i_86_reg_1199);

assign or_cond_fu_922_p2 = (tmp_24_reg_1284_pp0_iter17_reg | icmp_fu_916_p2);

assign out_exp_V_fu_965_p2 = (11'd1023 + tmp_83_fu_961_p1);

assign p_Result_16_fu_497_p3 = grp_fu_1174_p3[32'd30];

assign p_Result_23_fu_267_p3 = p_Val2_s_fu_263_p1[32'd63];

assign p_Result_25_fu_971_p4 = {{{{1'd0}, {out_exp_V_fu_965_p2}}}, {tmp_V_4_fu_953_p3}};

assign p_Result_s_fu_301_p3 = {{2'd1}, {tmp_V_3_fu_285_p1}};

assign p_Val2_s_fu_263_p1 = x;

assign p_s_fu_519_p3 = ((tmp_16_fu_507_p2[0:0] === 1'b1) ? tmp_15_fu_488_p4 : ret_V_3_fu_513_p2);

assign r_V_13_fu_419_p3 = ((isNeg_fu_366_p3[0:0] === 1'b1) ? r_V_cast_fu_409_p1 : r_V_1_fu_413_p2);

assign r_V_1_fu_413_p2 = m_frac_l_V_2_cast_fu_362_p1 << tmp_13_fu_395_p1;

assign r_V_3_fu_464_p2 = m_fix_l_V_reg_1253 << tmp_14_fu_461_p1;

assign r_V_4_fu_469_p2 = $signed(m_fix_l_V_reg_1253) >>> tmp_14_fu_461_p1;

assign r_V_cast_fu_409_p1 = $signed(r_V_fu_403_p2);

assign r_V_fu_403_p2 = $signed(m_frac_l_V_fu_355_p3) >>> tmp_46_cast_fu_399_p1;

assign r_exp_V_2_fu_899_p3 = ((tmp_80_fu_886_p3[0:0] === 1'b1) ? r_exp_V_3_reg_1277_pp0_iter17_reg : r_exp_V_fu_894_p2);

assign r_exp_V_3_fu_527_p3 = ((p_Result_16_fu_497_p3[0:0] === 1'b1) ? p_s_fu_519_p3 : tmp_15_fu_488_p4);

assign r_exp_V_fu_894_p2 = ($signed(13'd8191) + $signed(r_exp_V_3_reg_1277_pp0_iter17_reg));

assign ret_V_10_cast_fu_880_p2 = (tmp_20_fu_871_p1 + tmp_19_fu_864_p3);

assign ret_V_3_fu_513_p2 = (13'd1 + tmp_15_fu_488_p4);

assign ret_V_5_fu_588_p2 = ($signed(lhs_V_fu_574_p1) - $signed(rhs_V_4_cast_fu_584_p1));

assign ret_V_6_fu_665_p2 = (rhs_V_2_fu_661_p1 + lhs_V_1_fu_658_p1);

assign ret_V_7_fu_706_p1 = tmp_46_i_reg_1342_pp0_iter11_reg;

assign ret_V_8_fu_839_p2 = (59'd16 + lhs_V_3_fu_836_p1);

assign ret_V_9_fu_874_p2 = (rhs_V_5_cast_fu_861_p1 + lhs_V_4_fu_854_p3);

assign rev_fu_1082_p2 = (tmp_82_reg_1214_pp0_iter18_reg ^ 1'd1);

assign rhs_V_1_fu_577_p3 = {{tmp_25_reg_1294}, {1'd0}};

assign rhs_V_2_fu_661_p1 = f_Z4_V_fu_648_p4;

assign rhs_V_4_cast_fu_584_p1 = $signed(rhs_V_1_fu_577_p3);

assign rhs_V_5_cast_fu_861_p1 = r_V_18_reg_1429;

assign rhs_V_fu_477_p3 = {{p_Result_24_reg_1264}, {18'd131072}};

assign sel_tmp10_fu_1124_p2 = (tmp54_fu_1119_p2 & sel_tmp4_fu_1113_p2);

assign sel_tmp11_fu_1019_p2 = (or_cond_fu_922_p2 ^ 1'd1);

assign sel_tmp12_fu_1025_p2 = (tmp_22_reg_1269_pp0_iter17_reg & sel_tmp11_fu_1019_p2);

assign sel_tmp13_fu_1035_p2 = (sel_tmp44_demorgan_fu_1030_p2 ^ 1'd1);

assign sel_tmp14_fu_1041_p2 = (sel_tmp13_fu_1035_p2 | sel_tmp12_fu_1025_p2);

assign sel_tmp15_fu_1155_p2 = (tmp56_reg_1452 | tmp55_fu_1130_p2);

assign sel_tmp1_fu_981_p2 = (not_demorgan_reg_1220_pp0_iter17_reg ^ 1'd1);

assign sel_tmp2_fu_992_p2 = (tmp_13_i_reg_1226_pp0_iter17_reg & tmp52_fu_986_p2);

assign sel_tmp3_fu_1102_p2 = (x_is_ninf_fu_1078_p2 ^ 1'd1);

assign sel_tmp44_demorgan_fu_1030_p2 = (tmp_22_reg_1269_pp0_iter17_reg | icmp_fu_916_p2);

assign sel_tmp4_fu_1113_p2 = (tmp53_fu_1108_p2 & sel_tmp_fu_1097_p2);

assign sel_tmp5_fu_997_p2 = (tmp_22_reg_1269_pp0_iter17_reg & or_cond_fu_922_p2);

assign sel_tmp6_fu_1002_p2 = (tmp_22_reg_1269_pp0_iter17_reg ^ 1'd1);

assign sel_tmp7_fu_1087_p2 = (x_is_ninf_fu_1078_p2 & sel_tmp1_reg_1440);

assign sel_tmp8_fu_1007_p2 = (sel_tmp6_fu_1002_p2 & icmp_fu_916_p2);

assign sel_tmp9_fu_1013_p2 = (sel_tmp8_fu_1007_p2 | sel_tmp5_fu_997_p2);

assign sel_tmp_fu_1097_p2 = (tmp_13_i_not_fu_1092_p2 | p_Result_23_reg_1185_pp0_iter18_reg);

assign table_exp_Z1_array_s_address0 = tmp_17_fu_758_p1;

assign table_f_Z2_array_V_address0 = tmp_36_i_fu_702_p1;

assign table_f_Z3_array_V_address0 = tmp_29_i_fu_638_p1;

assign table_f_Z3_array_V_address1 = tmp_30_i_fu_643_p1;

assign tmp51_cast_fu_794_p1 = tmp51_fu_789_p2;

assign tmp51_fu_789_p2 = (tmp_40_i_cast_cast_fu_786_p1 + exp_Z2P_m_1_V_reg_1367_pp0_iter14_reg);

assign tmp52_fu_986_p2 = (sel_tmp1_fu_981_p2 & not_Val2_i_fu_849_p2);

assign tmp53_fu_1108_p2 = (sel_tmp3_fu_1102_p2 & sel_tmp1_reg_1440);

assign tmp54_fu_1119_p2 = (sel_tmp9_reg_1446 & rev_fu_1082_p2);

assign tmp55_fu_1130_p2 = (tmp_82_reg_1214_pp0_iter18_reg & sel_tmp9_reg_1446);

assign tmp56_fu_1047_p2 = (tmp_26_fu_927_p2 & sel_tmp14_fu_1041_p2);

assign tmp_13_fu_395_p1 = $unsigned(m_exp_1_cast_fu_391_p1);

assign tmp_13_i_fu_341_p2 = (tmp_i_fu_331_p2 & tmp_i1_reg_1204);

assign tmp_13_i_not_fu_1092_p2 = (tmp_13_i_reg_1226_pp0_iter18_reg ^ 1'd1);

assign tmp_14_fu_461_p1 = $unsigned(m_exp_1_cast_reg_1243);

assign tmp_15_fu_488_p4 = {{grp_fu_1174_p3[30:18]}};

assign tmp_16_fu_507_p2 = ((tmp_77_fu_504_p1 == 18'd0) ? 1'b1 : 1'b0);

assign tmp_17_fu_758_p1 = m_diff_hi_V_reg_1299_pp0_iter13_reg;

assign tmp_19_fu_864_p3 = {{tmp_79_reg_1435}, {49'd0}};

assign tmp_20_fu_871_p1 = r_V_18_reg_1429;

assign tmp_21_fu_315_p3 = ((p_Result_23_fu_267_p3[0:0] === 1'b1) ? e_frac_V_fu_309_p2 : p_Result_s_fu_301_p3);

assign tmp_22_fu_455_p2 = (($signed(m_exp_fu_349_p2) > $signed(12'd0)) ? 1'b1 : 1'b0);

assign tmp_23_fu_542_p3 = {{tmp_40_fu_535_p3}, {7'd0}};

assign tmp_24_fu_550_p2 = ((tmp_23_fu_542_p3 != m_frac_l_V_2_cast_reg_1233) ? 1'b1 : 1'b0);

assign tmp_26_fu_927_p2 = (($signed(r_exp_V_2_fu_899_p3) < $signed(13'd7170)) ? 1'b1 : 1'b0);

assign tmp_27_fu_933_p4 = {{ret_V_9_fu_874_p2[105:54]}};

assign tmp_28_fu_943_p4 = {{ret_V_10_cast_fu_880_p2[104:53]}};

assign tmp_29_i_fu_638_p1 = Z4_ind_V_fu_628_p4;

assign tmp_30_fu_1053_p1 = p_Result_25_fu_971_p4;

assign tmp_30_i_fu_643_p1 = Z3_V_fu_614_p4;

assign tmp_31_fu_1057_p3 = ((sel_tmp2_fu_992_p2[0:0] === 1'b1) ? 64'd9218868437227405312 : 64'd9223372036854775807);

assign tmp_32_fu_1065_p2 = (sel_tmp2_fu_992_p2 | not_demorgan_reg_1220_pp0_iter17_reg);

assign tmp_33_fu_1070_p3 = ((tmp_32_fu_1065_p2[0:0] === 1'b1) ? tmp_31_fu_1057_p3 : tmp_30_fu_1053_p1);

assign tmp_34_fu_1134_p3 = ((sel_tmp10_fu_1124_p2[0:0] === 1'b1) ? 64'd9218868437227405312 : 64'd0);

assign tmp_34_i_cast_fu_709_p1 = tmp_29_reg_1357;

assign tmp_35_fu_1142_p2 = (sel_tmp7_fu_1087_p2 | sel_tmp10_fu_1124_p2);

assign tmp_36_fu_1148_p3 = ((tmp_35_fu_1142_p2[0:0] === 1'b1) ? tmp_34_fu_1134_p3 : tmp_33_reg_1457);

assign tmp_36_i_fu_702_p1 = Z2_V_reg_1304_pp0_iter10_reg;

assign tmp_37_fu_1160_p2 = (sel_tmp4_fu_1113_p2 & sel_tmp15_fu_1155_p2);

assign tmp_37_i_fu_737_p4 = {{{Z2_V_reg_1304_pp0_iter12_reg}, {1'd0}}, {tmp_38_reg_1373}};

assign tmp_40_fu_535_p3 = ((isNeg_reg_1238[0:0] === 1'b1) ? r_V_3_fu_464_p2 : r_V_4_fu_469_p2);

assign tmp_40_i_cast_cast_fu_786_p1 = tmp_39_reg_1394;

assign tmp_45_cast_fu_379_p1 = $signed(tmp_s_fu_374_p2);

assign tmp_46_cast_fu_399_p1 = $unsigned(m_exp_1_cast_fu_391_p1);

assign tmp_46_i_fu_671_p4 = {{{Z3_V_reg_1311_pp0_iter9_reg}, {9'd0}}, {p_Val2_19_reg_1337}};

assign tmp_77_fu_504_p1 = grp_fu_1174_p3[17:0];

assign tmp_79_fu_845_p1 = ret_V_8_fu_839_p2[57:0];

assign tmp_80_fu_886_p3 = ret_V_10_cast_fu_880_p2[32'd106];

assign tmp_81_fu_906_p4 = {{r_exp_V_2_fu_899_p3[12:10]}};

assign tmp_83_fu_961_p1 = r_exp_V_2_fu_899_p3[10:0];

assign tmp_V_3_fu_285_p1 = p_Val2_s_fu_263_p1[51:0];

assign tmp_V_4_fu_953_p3 = ((tmp_80_fu_886_p3[0:0] === 1'b1) ? tmp_27_fu_933_p4 : tmp_28_fu_943_p4);

assign tmp_cast_fu_717_p1 = tmp_fu_712_p2;

assign tmp_fu_712_p2 = (tmp_34_i_cast_fu_709_p1 + ret_V_6_reg_1331_pp0_iter11_reg);

assign tmp_i1_fu_295_p2 = ((tmp_V_3_fu_285_p1 == 52'd0) ? 1'b1 : 1'b0);

assign tmp_i53_cast_fu_346_p1 = tmp_V_reg_1192;

assign tmp_i_86_fu_289_p2 = ((tmp_V_3_fu_285_p1 != 52'd0) ? 1'b1 : 1'b0);

assign tmp_i_fu_331_p2 = ((tmp_V_reg_1192 == 11'd2047) ? 1'b1 : 1'b0);

assign tmp_s_fu_374_p2 = (11'd1023 - tmp_V_reg_1192);

assign x_is_ninf_fu_1078_p2 = (tmp_13_i_reg_1226_pp0_iter18_reg & p_Result_23_reg_1185_pp0_iter18_reg);

always @ (posedge ap_clk) begin
    m_frac_l_V_2_cast_reg_1233[6:0] <= 7'b0000000;
    tmp_46_i_reg_1342[34:26] <= 9'b000000000;
    tmp_46_i_reg_1342_pp0_iter11_reg[34:26] <= 9'b000000000;
    tmp_33_reg_1457[63] <= 1'b0;
end

endmodule //exp_generic_double_s
